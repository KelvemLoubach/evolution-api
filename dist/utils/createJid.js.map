{"version":3,"sources":["../../src/utils/createJid.ts"],"sourcesContent":["// Check if the number is MX or AR\r\nfunction formatMXOrARNumber(jid: string): string {\r\n  const countryCode = jid.substring(0, 2);\r\n\r\n  if (Number(countryCode) === 52 || Number(countryCode) === 54) {\r\n    if (jid.length === 13) {\r\n      const number = countryCode + jid.substring(3);\r\n      return number;\r\n    }\r\n\r\n    return jid;\r\n  }\r\n  return jid;\r\n}\r\n\r\n// Check if the number is br\r\nfunction formatBRNumber(jid: string) {\r\n  const regexp = new RegExp(/^(\\d{2})(\\d{2})\\d{1}(\\d{8})$/);\r\n  if (regexp.test(jid)) {\r\n    const match = regexp.exec(jid);\r\n    if (match && match[1] === '55') {\r\n      const joker = Number.parseInt(match[3][0]);\r\n      const ddd = Number.parseInt(match[2]);\r\n      if (joker < 7 || ddd < 31) {\r\n        return match[0];\r\n      }\r\n      return match[1] + match[2] + match[3];\r\n    }\r\n    return jid;\r\n  } else {\r\n    return jid;\r\n  }\r\n}\r\n\r\nexport function createJid(number: string): string {\r\n  number = number.replace(/:\\d+/, '');\r\n\r\n  if (number.includes('@g.us') || number.includes('@s.whatsapp.net') || number.includes('@lid')) {\r\n    return number;\r\n  }\r\n\r\n  if (number.includes('@broadcast')) {\r\n    return number;\r\n  }\r\n\r\n  number = number\r\n    ?.replace(/\\s/g, '')\r\n    .replace(/\\+/g, '')\r\n    .replace(/\\(/g, '')\r\n    .replace(/\\)/g, '')\r\n    .split(':')[0]\r\n    .split('@')[0];\r\n\r\n  if (number.includes('-') && number.length >= 24) {\r\n    number = number.replace(/[^\\d-]/g, '');\r\n    return `${number}@g.us`;\r\n  }\r\n\r\n  number = number.replace(/\\D/g, '');\r\n\r\n  if (number.length >= 18) {\r\n    number = number.replace(/[^\\d-]/g, '');\r\n    return `${number}@g.us`;\r\n  }\r\n\r\n  number = formatMXOrARNumber(number);\r\n\r\n  number = formatBRNumber(number);\r\n\r\n  return `${number}@s.whatsapp.net`;\r\n}\r\n"],"mappings":"4ZAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,eAAAE,IAAA,eAAAC,EAAAH,GACA,SAASI,EAAmBC,EAAqB,CAC/C,IAAMC,EAAcD,EAAI,UAAU,EAAG,CAAC,EAEtC,OAAI,OAAOC,CAAW,IAAM,IAAM,OAAOA,CAAW,IAAM,KACpDD,EAAI,SAAW,GACFC,EAAcD,EAAI,UAAU,CAAC,EAMzCA,CACT,CAGA,SAASE,EAAeF,EAAa,CACnC,IAAMG,EAAS,IAAI,OAAO,8BAA8B,EACxD,GAAIA,EAAO,KAAKH,CAAG,EAAG,CACpB,IAAMI,EAAQD,EAAO,KAAKH,CAAG,EAC7B,GAAII,GAASA,EAAM,CAAC,IAAM,KAAM,CAC9B,IAAMC,EAAQ,OAAO,SAASD,EAAM,CAAC,EAAE,CAAC,CAAC,EACnCE,EAAM,OAAO,SAASF,EAAM,CAAC,CAAC,EACpC,OAAIC,EAAQ,GAAKC,EAAM,GACdF,EAAM,CAAC,EAETA,EAAM,CAAC,EAAIA,EAAM,CAAC,EAAIA,EAAM,CAAC,CACtC,CACA,OAAOJ,CACT,KACE,QAAOA,CAEX,CAEO,SAASH,EAAUU,EAAwB,CAOhD,OANAA,EAASA,EAAO,QAAQ,OAAQ,EAAE,EAE9BA,EAAO,SAAS,OAAO,GAAKA,EAAO,SAAS,iBAAiB,GAAKA,EAAO,SAAS,MAAM,GAIxFA,EAAO,SAAS,YAAY,EACvBA,GAGTA,EAASA,GACL,QAAQ,MAAO,EAAE,EAClB,QAAQ,MAAO,EAAE,EACjB,QAAQ,MAAO,EAAE,EACjB,QAAQ,MAAO,EAAE,EACjB,MAAM,GAAG,EAAE,CAAC,EACZ,MAAM,GAAG,EAAE,CAAC,EAEXA,EAAO,SAAS,GAAG,GAAKA,EAAO,QAAU,IAC3CA,EAASA,EAAO,QAAQ,UAAW,EAAE,EAC9B,GAAGA,CAAM,UAGlBA,EAASA,EAAO,QAAQ,MAAO,EAAE,EAE7BA,EAAO,QAAU,IACnBA,EAASA,EAAO,QAAQ,UAAW,EAAE,EAC9B,GAAGA,CAAM,UAGlBA,EAASR,EAAmBQ,CAAM,EAElCA,EAASL,EAAeK,CAAM,EAEvB,GAAGA,CAAM,oBAClB","names":["createJid_exports","__export","createJid","__toCommonJS","formatMXOrARNumber","jid","countryCode","formatBRNumber","regexp","match","joker","ddd","number"]}