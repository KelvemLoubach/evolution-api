{"version":3,"sources":["../../src/utils/advancedOperatorsSearch.ts"],"sourcesContent":["function normalizeString(str: string): string {\r\n  return str\r\n    .normalize('NFD')\r\n    .replace(/[\\u0300-\\u036f]/g, '')\r\n    .toLowerCase();\r\n}\r\n\r\nexport function advancedOperatorsSearch(data: string, query: string): boolean {\r\n  const filters = query.split(' ').reduce((acc: Record<string, string[]>, filter) => {\r\n    const [operator, ...values] = filter.split(':');\r\n    const value = values.join(':');\r\n\r\n    if (!acc[operator]) {\r\n      acc[operator] = [];\r\n    }\r\n    acc[operator].push(value);\r\n    return acc;\r\n  }, {});\r\n\r\n  const normalizedItem = normalizeString(data);\r\n\r\n  return Object.entries(filters).every(([operator, values]) => {\r\n    return values.some((val) => {\r\n      const subValues = val.split(',');\r\n      return subValues.every((subVal) => {\r\n        const normalizedSubVal = normalizeString(subVal);\r\n\r\n        switch (operator.toLowerCase()) {\r\n          case 'contains':\r\n            return normalizedItem.includes(normalizedSubVal);\r\n          case 'notcontains':\r\n            return !normalizedItem.includes(normalizedSubVal);\r\n          case 'startswith':\r\n            return normalizedItem.startsWith(normalizedSubVal);\r\n          case 'endswith':\r\n            return normalizedItem.endsWith(normalizedSubVal);\r\n          case 'exact':\r\n            return normalizedItem === normalizedSubVal;\r\n          default:\r\n            return false;\r\n        }\r\n      });\r\n    });\r\n  });\r\n}\r\n"],"mappings":"AAAA,SAASA,EAAgBC,EAAqB,CAC5C,OAAOA,EACJ,UAAU,KAAK,EACf,QAAQ,mBAAoB,EAAE,EAC9B,YAAY,CACjB,CAEO,SAASC,EAAwBC,EAAcC,EAAwB,CAC5E,IAAMC,EAAUD,EAAM,MAAM,GAAG,EAAE,OAAO,CAACE,EAA+BC,IAAW,CACjF,GAAM,CAACC,EAAU,GAAGC,CAAM,EAAIF,EAAO,MAAM,GAAG,EACxCG,EAAQD,EAAO,KAAK,GAAG,EAE7B,OAAKH,EAAIE,CAAQ,IACfF,EAAIE,CAAQ,EAAI,CAAC,GAEnBF,EAAIE,CAAQ,EAAE,KAAKE,CAAK,EACjBJ,CACT,EAAG,CAAC,CAAC,EAECK,EAAiBX,EAAgBG,CAAI,EAE3C,OAAO,OAAO,QAAQE,CAAO,EAAE,MAAM,CAAC,CAACG,EAAUC,CAAM,IAC9CA,EAAO,KAAMG,GACAA,EAAI,MAAM,GAAG,EACd,MAAOC,GAAW,CACjC,IAAMC,EAAmBd,EAAgBa,CAAM,EAE/C,OAAQL,EAAS,YAAY,EAAG,CAC9B,IAAK,WACH,OAAOG,EAAe,SAASG,CAAgB,EACjD,IAAK,cACH,MAAO,CAACH,EAAe,SAASG,CAAgB,EAClD,IAAK,aACH,OAAOH,EAAe,WAAWG,CAAgB,EACnD,IAAK,WACH,OAAOH,EAAe,SAASG,CAAgB,EACjD,IAAK,QACH,OAAOH,IAAmBG,EAC5B,QACE,MAAO,EACX,CACF,CAAC,CACF,CACF,CACH","names":["normalizeString","str","advancedOperatorsSearch","data","query","filters","acc","filter","operator","values","value","normalizedItem","val","subVal","normalizedSubVal"]}