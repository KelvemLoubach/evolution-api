{"version":3,"sources":["../../../../../../src/api/integrations/channel/whatsapp/voiceCalls/transport.type.ts"],"sourcesContent":["import { BinaryNode, Contact, JidWithDevice, proto, WAConnectionState } from 'baileys';\r\n\r\nexport interface ServerToClientEvents {\r\n  withAck: (d: string, callback: (e: number) => void) => void;\r\n  onWhatsApp: onWhatsAppType;\r\n  profilePictureUrl: ProfilePictureUrlType;\r\n  assertSessions: AssertSessionsType;\r\n  createParticipantNodes: CreateParticipantNodesType;\r\n  getUSyncDevices: GetUSyncDevicesType;\r\n  generateMessageTag: GenerateMessageTagType;\r\n  sendNode: SendNodeType;\r\n  'signalRepository:decryptMessage': SignalRepositoryDecryptMessageType;\r\n}\r\n\r\nexport interface ClientToServerEvents {\r\n  init: (\r\n    me: Contact | undefined,\r\n    account: proto.IADVSignedDeviceIdentity | undefined,\r\n    status: WAConnectionState,\r\n  ) => void;\r\n  'CB:call': (packet: any) => void;\r\n  'CB:ack,class:call': (packet: any) => void;\r\n  'connection.update:status': (\r\n    me: Contact | undefined,\r\n    account: proto.IADVSignedDeviceIdentity | undefined,\r\n    status: WAConnectionState,\r\n  ) => void;\r\n  'connection.update:qr': (qr: string) => void;\r\n}\r\n\r\nexport type onWhatsAppType = (jid: string, callback: onWhatsAppCallback) => void;\r\nexport type onWhatsAppCallback = (\r\n  response: {\r\n    exists: boolean;\r\n    jid: string;\r\n  }[],\r\n) => void;\r\n\r\nexport type ProfilePictureUrlType = (\r\n  jid: string,\r\n  type: 'image' | 'preview',\r\n  timeoutMs: number | undefined,\r\n  callback: ProfilePictureUrlCallback,\r\n) => void;\r\nexport type ProfilePictureUrlCallback = (response: string | undefined) => void;\r\n\r\nexport type AssertSessionsType = (jids: string[], force: boolean, callback: AssertSessionsCallback) => void;\r\nexport type AssertSessionsCallback = (response: boolean) => void;\r\n\r\nexport type CreateParticipantNodesType = (\r\n  jids: string[],\r\n  message: any,\r\n  extraAttrs: any,\r\n  callback: CreateParticipantNodesCallback,\r\n) => void;\r\nexport type CreateParticipantNodesCallback = (nodes: any, shouldIncludeDeviceIdentity: boolean) => void;\r\n\r\nexport type GetUSyncDevicesType = (\r\n  jids: string[],\r\n  useCache: boolean,\r\n  ignoreZeroDevices: boolean,\r\n  callback: GetUSyncDevicesTypeCallback,\r\n) => void;\r\nexport type GetUSyncDevicesTypeCallback = (jids: JidWithDevice[]) => void;\r\n\r\nexport type GenerateMessageTagType = (callback: GenerateMessageTagTypeCallback) => void;\r\nexport type GenerateMessageTagTypeCallback = (response: string) => void;\r\n\r\nexport type SendNodeType = (stanza: BinaryNode, callback: SendNodeTypeCallback) => void;\r\nexport type SendNodeTypeCallback = (response: boolean) => void;\r\n\r\nexport type SignalRepositoryDecryptMessageType = (\r\n  jid: string,\r\n  type: 'pkmsg' | 'msg',\r\n  ciphertext: Buffer,\r\n  callback: SignalRepositoryDecryptMessageCallback,\r\n) => void;\r\nexport type SignalRepositoryDecryptMessageCallback = (response: any) => void;\r\n"],"mappings":"kWAAA,IAAAA,EAAA,kBAAAC,EAAAD","names":["transport_type_exports","__toCommonJS"]}