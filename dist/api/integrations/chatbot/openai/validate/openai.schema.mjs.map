{"version":3,"sources":["../../../../../../node_modules/uuid/dist/esm-node/rng.js","../../../../../../node_modules/uuid/dist/esm-node/stringify.js","../../../../../../node_modules/uuid/dist/esm-node/native.js","../../../../../../node_modules/uuid/dist/esm-node/v4.js","../../../../../../src/api/integrations/chatbot/openai/validate/openai.schema.ts"],"sourcesContent":["import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import crypto from 'crypto';\nexport default {\n  randomUUID: crypto.randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { JSONSchema7 } from 'json-schema';\r\nimport { v4 } from 'uuid';\r\n\r\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\r\n  const properties = {};\r\n  propertyNames.forEach(\r\n    (property) =>\r\n      (properties[property] = {\r\n        minLength: 1,\r\n        description: `The \"${property}\" cannot be empty`,\r\n      }),\r\n  );\r\n  return {\r\n    if: {\r\n      propertyNames: {\r\n        enum: [...propertyNames],\r\n      },\r\n    },\r\n    then: { properties },\r\n  };\r\n};\r\n\r\nexport const openaiSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    enabled: { type: 'boolean' },\r\n    description: { type: 'string' },\r\n    openaiCredsId: { type: 'string' },\r\n    botType: { type: 'string', enum: ['assistant', 'chatCompletion'] },\r\n    assistantId: { type: 'string' },\r\n    functionUrl: { type: 'string' },\r\n    model: { type: 'string' },\r\n    systemMessages: { type: 'array', items: { type: 'string' } },\r\n    assistantMessages: { type: 'array', items: { type: 'string' } },\r\n    userMessages: { type: 'array', items: { type: 'string' } },\r\n    maxTokens: { type: 'integer' },\r\n    triggerType: { type: 'string', enum: ['all', 'keyword', 'none', 'advanced'] },\r\n    triggerOperator: { type: 'string', enum: ['equals', 'contains', 'startsWith', 'endsWith', 'regex'] },\r\n    triggerValue: { type: 'string' },\r\n    expire: { type: 'integer' },\r\n    keywordFinish: { type: 'string' },\r\n    delayMessage: { type: 'integer' },\r\n    unknownMessage: { type: 'string' },\r\n    listeningFromMe: { type: 'boolean' },\r\n    stopBotFromMe: { type: 'boolean' },\r\n    keepOpen: { type: 'boolean' },\r\n    debounceTime: { type: 'integer' },\r\n    ignoreJids: { type: 'array', items: { type: 'string' } },\r\n  },\r\n  required: ['enabled', 'openaiCredsId', 'botType', 'triggerType'],\r\n  ...isNotEmpty('enabled', 'openaiCredsId', 'botType', 'triggerType'),\r\n};\r\n\r\nexport const openaiCredsSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    name: { type: 'string' },\r\n    apiKey: { type: 'string' },\r\n  },\r\n  required: ['name', 'apiKey'],\r\n  ...isNotEmpty('name', 'apiKey'),\r\n};\r\n\r\nexport const openaiStatusSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    remoteJid: { type: 'string' },\r\n    status: { type: 'string', enum: ['opened', 'closed', 'paused', 'delete'] },\r\n  },\r\n  required: ['remoteJid', 'status'],\r\n  ...isNotEmpty('remoteJid', 'status'),\r\n};\r\n\r\nexport const openaiSettingSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    openaiCredsId: { type: 'string' },\r\n    expire: { type: 'integer' },\r\n    keywordFinish: { type: 'string' },\r\n    delayMessage: { type: 'integer' },\r\n    unknownMessage: { type: 'string' },\r\n    listeningFromMe: { type: 'boolean' },\r\n    stopBotFromMe: { type: 'boolean' },\r\n    keepOpen: { type: 'boolean' },\r\n    debounceTime: { type: 'integer' },\r\n    speechToText: { type: 'boolean' },\r\n    ignoreJids: { type: 'array', items: { type: 'string' } },\r\n    openaiIdFallback: { type: 'string' },\r\n  },\r\n  required: [\r\n    'openaiCredsId',\r\n    'expire',\r\n    'keywordFinish',\r\n    'delayMessage',\r\n    'unknownMessage',\r\n    'listeningFromMe',\r\n    'stopBotFromMe',\r\n    'keepOpen',\r\n    'debounceTime',\r\n    'ignoreJids',\r\n  ],\r\n  ...isNotEmpty(\r\n    'openaiCredsId',\r\n    'expire',\r\n    'keywordFinish',\r\n    'delayMessage',\r\n    'unknownMessage',\r\n    'listeningFromMe',\r\n    'stopBotFromMe',\r\n    'keepOpen',\r\n    'debounceTime',\r\n    'ignoreJids',\r\n  ),\r\n};\r\n\r\nexport const openaiIgnoreJidSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    remoteJid: { type: 'string' },\r\n    action: { type: 'string', enum: ['add', 'remove'] },\r\n  },\r\n  required: ['remoteJid', 'action'],\r\n  ...isNotEmpty('remoteJid', 'action'),\r\n};\r\n"],"mappings":"AAAA,OAAOA,MAAY,SACnB,IAAMC,EAAY,IAAI,WAAW,GAAG,EAEhCC,EAAUD,EAAU,OACT,SAARE,GAAuB,CAC5B,OAAID,EAAUD,EAAU,OAAS,KAC/BD,EAAO,eAAeC,CAAS,EAC/BC,EAAU,GAGLD,EAAU,MAAMC,EAASA,GAAW,EAAE,CAC/C,CCLA,IAAME,EAAY,CAAC,EAEnB,QAASC,EAAI,EAAGA,EAAI,IAAK,EAAEA,EACzBD,EAAU,MAAMC,EAAI,KAAO,SAAS,EAAE,EAAE,MAAM,CAAC,CAAC,EAG3C,SAASC,EAAgBC,EAAKC,EAAS,EAAG,CAG/C,OAAOJ,EAAUG,EAAIC,EAAS,CAAC,CAAC,EAAIJ,EAAUG,EAAIC,EAAS,CAAC,CAAC,EAAIJ,EAAUG,EAAIC,EAAS,CAAC,CAAC,EAAIJ,EAAUG,EAAIC,EAAS,CAAC,CAAC,EAAI,IAAMJ,EAAUG,EAAIC,EAAS,CAAC,CAAC,EAAIJ,EAAUG,EAAIC,EAAS,CAAC,CAAC,EAAI,IAAMJ,EAAUG,EAAIC,EAAS,CAAC,CAAC,EAAIJ,EAAUG,EAAIC,EAAS,CAAC,CAAC,EAAI,IAAMJ,EAAUG,EAAIC,EAAS,CAAC,CAAC,EAAIJ,EAAUG,EAAIC,EAAS,CAAC,CAAC,EAAI,IAAMJ,EAAUG,EAAIC,EAAS,EAAE,CAAC,EAAIJ,EAAUG,EAAIC,EAAS,EAAE,CAAC,EAAIJ,EAAUG,EAAIC,EAAS,EAAE,CAAC,EAAIJ,EAAUG,EAAIC,EAAS,EAAE,CAAC,EAAIJ,EAAUG,EAAIC,EAAS,EAAE,CAAC,EAAIJ,EAAUG,EAAIC,EAAS,EAAE,CAAC,CACnf,CChBA,OAAOC,MAAY,SACnB,IAAOC,EAAQ,CACb,WAAYD,EAAO,UACrB,ECCA,SAASE,EAAGC,EAASC,EAAKC,EAAQ,CAChC,GAAIC,EAAO,YAAc,CAACF,GAAO,CAACD,EAChC,OAAOG,EAAO,WAAW,EAG3BH,EAAUA,GAAW,CAAC,EACtB,IAAMI,EAAOJ,EAAQ,SAAWA,EAAQ,KAAOK,GAAK,EAKpD,GAHAD,EAAK,CAAC,EAAIA,EAAK,CAAC,EAAI,GAAO,GAC3BA,EAAK,CAAC,EAAIA,EAAK,CAAC,EAAI,GAAO,IAEvBH,EAAK,CACPC,EAASA,GAAU,EAEnB,QAASI,EAAI,EAAGA,EAAI,GAAI,EAAEA,EACxBL,EAAIC,EAASI,CAAC,EAAIF,EAAKE,CAAC,EAG1B,OAAOL,CACT,CAEA,OAAOM,EAAgBH,CAAI,CAC7B,CAEA,IAAOI,EAAQT,ECzBf,IAAMU,EAAa,IAAIC,IAAyC,CAC9D,IAAMC,EAAa,CAAC,EACpB,OAAAD,EAAc,QACXE,GACED,EAAWC,CAAQ,EAAI,CACtB,UAAW,EACX,YAAa,QAAQA,CAAQ,mBAC/B,CACJ,EACO,CACL,GAAI,CACF,cAAe,CACb,KAAM,CAAC,GAAGF,CAAa,CACzB,CACF,EACA,KAAM,CAAE,WAAAC,CAAW,CACrB,CACF,EAEaE,EAA4B,CACvC,IAAKC,EAAG,EACR,KAAM,SACN,WAAY,CACV,QAAS,CAAE,KAAM,SAAU,EAC3B,YAAa,CAAE,KAAM,QAAS,EAC9B,cAAe,CAAE,KAAM,QAAS,EAChC,QAAS,CAAE,KAAM,SAAU,KAAM,CAAC,YAAa,gBAAgB,CAAE,EACjE,YAAa,CAAE,KAAM,QAAS,EAC9B,YAAa,CAAE,KAAM,QAAS,EAC9B,MAAO,CAAE,KAAM,QAAS,EACxB,eAAgB,CAAE,KAAM,QAAS,MAAO,CAAE,KAAM,QAAS,CAAE,EAC3D,kBAAmB,CAAE,KAAM,QAAS,MAAO,CAAE,KAAM,QAAS,CAAE,EAC9D,aAAc,CAAE,KAAM,QAAS,MAAO,CAAE,KAAM,QAAS,CAAE,EACzD,UAAW,CAAE,KAAM,SAAU,EAC7B,YAAa,CAAE,KAAM,SAAU,KAAM,CAAC,MAAO,UAAW,OAAQ,UAAU,CAAE,EAC5E,gBAAiB,CAAE,KAAM,SAAU,KAAM,CAAC,SAAU,WAAY,aAAc,WAAY,OAAO,CAAE,EACnG,aAAc,CAAE,KAAM,QAAS,EAC/B,OAAQ,CAAE,KAAM,SAAU,EAC1B,cAAe,CAAE,KAAM,QAAS,EAChC,aAAc,CAAE,KAAM,SAAU,EAChC,eAAgB,CAAE,KAAM,QAAS,EACjC,gBAAiB,CAAE,KAAM,SAAU,EACnC,cAAe,CAAE,KAAM,SAAU,EACjC,SAAU,CAAE,KAAM,SAAU,EAC5B,aAAc,CAAE,KAAM,SAAU,EAChC,WAAY,CAAE,KAAM,QAAS,MAAO,CAAE,KAAM,QAAS,CAAE,CACzD,EACA,SAAU,CAAC,UAAW,gBAAiB,UAAW,aAAa,EAC/D,GAAGL,EAAW,UAAW,gBAAiB,UAAW,aAAa,CACpE,EAEaM,EAAiC,CAC5C,IAAKD,EAAG,EACR,KAAM,SACN,WAAY,CACV,KAAM,CAAE,KAAM,QAAS,EACvB,OAAQ,CAAE,KAAM,QAAS,CAC3B,EACA,SAAU,CAAC,OAAQ,QAAQ,EAC3B,GAAGL,EAAW,OAAQ,QAAQ,CAChC,EAEaO,EAAkC,CAC7C,IAAKF,EAAG,EACR,KAAM,SACN,WAAY,CACV,UAAW,CAAE,KAAM,QAAS,EAC5B,OAAQ,CAAE,KAAM,SAAU,KAAM,CAAC,SAAU,SAAU,SAAU,QAAQ,CAAE,CAC3E,EACA,SAAU,CAAC,YAAa,QAAQ,EAChC,GAAGL,EAAW,YAAa,QAAQ,CACrC,EAEaQ,EAAmC,CAC9C,IAAKH,EAAG,EACR,KAAM,SACN,WAAY,CACV,cAAe,CAAE,KAAM,QAAS,EAChC,OAAQ,CAAE,KAAM,SAAU,EAC1B,cAAe,CAAE,KAAM,QAAS,EAChC,aAAc,CAAE,KAAM,SAAU,EAChC,eAAgB,CAAE,KAAM,QAAS,EACjC,gBAAiB,CAAE,KAAM,SAAU,EACnC,cAAe,CAAE,KAAM,SAAU,EACjC,SAAU,CAAE,KAAM,SAAU,EAC5B,aAAc,CAAE,KAAM,SAAU,EAChC,aAAc,CAAE,KAAM,SAAU,EAChC,WAAY,CAAE,KAAM,QAAS,MAAO,CAAE,KAAM,QAAS,CAAE,EACvD,iBAAkB,CAAE,KAAM,QAAS,CACrC,EACA,SAAU,CACR,gBACA,SACA,gBACA,eACA,iBACA,kBACA,gBACA,WACA,eACA,YACF,EACA,GAAGL,EACD,gBACA,SACA,gBACA,eACA,iBACA,kBACA,gBACA,WACA,eACA,YACF,CACF,EAEaS,EAAqC,CAChD,IAAKJ,EAAG,EACR,KAAM,SACN,WAAY,CACV,UAAW,CAAE,KAAM,QAAS,EAC5B,OAAQ,CAAE,KAAM,SAAU,KAAM,CAAC,MAAO,QAAQ,CAAE,CACpD,EACA,SAAU,CAAC,YAAa,QAAQ,EAChC,GAAGL,EAAW,YAAa,QAAQ,CACrC","names":["crypto","rnds8Pool","poolPtr","rng","byteToHex","i","unsafeStringify","arr","offset","crypto","native_default","v4","options","buf","offset","native_default","rnds","rng","i","unsafeStringify","v4_default","isNotEmpty","propertyNames","properties","property","openaiSchema","v4_default","openaiCredsSchema","openaiStatusSchema","openaiSettingSchema","openaiIgnoreJidSchema"]}