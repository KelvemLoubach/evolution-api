{"version":3,"sources":["../../../../src/api/integrations/event/event.schema.ts","../../../../node_modules/uuid/dist/esm-node/rng.js","../../../../node_modules/uuid/dist/esm-node/stringify.js","../../../../node_modules/uuid/dist/esm-node/native.js","../../../../node_modules/uuid/dist/esm-node/v4.js","../../../../src/api/integrations/event/event.controller.ts","../../../../src/api/integrations/event/pusher/pusher.schema.ts","../../../../src/api/integrations/event/webhook/webhook.schema.ts"],"sourcesContent":["import { JSONSchema7 } from 'json-schema';\r\nimport { v4 } from 'uuid';\r\n\r\nimport { EventController } from './event.controller';\r\n\r\nexport * from '@api/integrations/event/pusher/pusher.schema';\r\nexport * from '@api/integrations/event/webhook/webhook.schema';\r\n\r\nexport const eventSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    websocket: {\r\n      $ref: '#/$defs/event',\r\n    },\r\n    rabbitmq: {\r\n      $ref: '#/$defs/event',\r\n    },\r\n    sqs: {\r\n      $ref: '#/$defs/event',\r\n    },\r\n  },\r\n  $defs: {\r\n    event: {\r\n      type: 'object',\r\n      properties: {\r\n        enabled: { type: 'boolean', enum: [true, false] },\r\n        events: {\r\n          type: 'array',\r\n          minItems: 0,\r\n          items: {\r\n            type: 'string',\r\n            enum: EventController.events,\r\n          },\r\n        },\r\n      },\r\n      required: ['enabled'],\r\n    },\r\n  },\r\n};\r\n","import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import crypto from 'crypto';\nexport default {\n  randomUUID: crypto.randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { EventDto } from '@api/integrations/event/event.dto';\r\nimport { PrismaRepository } from '@api/repository/repository.service';\r\nimport { WAMonitoringService } from '@api/services/monitor.service';\r\nimport { wa } from '@api/types/wa.types';\r\n\r\nexport type EmitData = {\r\n  instanceName: string;\r\n  origin: string;\r\n  event: string;\r\n  data: any;\r\n  serverUrl: string;\r\n  dateTime: string;\r\n  sender: string;\r\n  apiKey?: string;\r\n  local?: boolean;\r\n  integration?: string[];\r\n};\r\n\r\nexport interface EventControllerInterface {\r\n  set(instanceName: string, data: any): Promise<any>;\r\n  get(instanceName: string): Promise<any>;\r\n  emit({ instanceName, origin, event, data, serverUrl, dateTime, sender, apiKey, local }: EmitData): Promise<void>;\r\n}\r\n\r\nexport class EventController {\r\n  public prismaRepository: PrismaRepository;\r\n  protected waMonitor: WAMonitoringService;\r\n  private integrationStatus: boolean;\r\n  private integrationName: string;\r\n\r\n  constructor(\r\n    prismaRepository: PrismaRepository,\r\n    waMonitor: WAMonitoringService,\r\n    integrationStatus: boolean,\r\n    integrationName: string,\r\n  ) {\r\n    this.prisma = prismaRepository;\r\n    this.monitor = waMonitor;\r\n    this.status = integrationStatus;\r\n    this.name = integrationName;\r\n  }\r\n\r\n  public set prisma(prisma: PrismaRepository) {\r\n    this.prismaRepository = prisma;\r\n  }\r\n\r\n  public get prisma() {\r\n    return this.prismaRepository;\r\n  }\r\n\r\n  public set monitor(waMonitor: WAMonitoringService) {\r\n    this.waMonitor = waMonitor;\r\n  }\r\n\r\n  public get monitor() {\r\n    return this.waMonitor;\r\n  }\r\n\r\n  public set name(name: string) {\r\n    this.integrationName = name;\r\n  }\r\n\r\n  public get name() {\r\n    return this.integrationName;\r\n  }\r\n\r\n  public set status(status: boolean) {\r\n    this.integrationStatus = status;\r\n  }\r\n\r\n  public get status() {\r\n    return this.integrationStatus;\r\n  }\r\n\r\n  public async set(instanceName: string, data: EventDto): Promise<wa.LocalEvent> {\r\n    if (!this.status) {\r\n      return;\r\n    }\r\n\r\n    if (!data[this.name]?.enabled) {\r\n      data[this.name].events = [];\r\n    } else {\r\n      if (0 === data[this.name].events.length) {\r\n        data[this.name].events = EventController.events;\r\n      }\r\n    }\r\n\r\n    return this.prisma[this.name].upsert({\r\n      where: {\r\n        instanceId: this.monitor.waInstances[instanceName].instanceId,\r\n      },\r\n      update: {\r\n        enabled: data[this.name]?.enabled,\r\n        events: data[this.name].events,\r\n      },\r\n      create: {\r\n        enabled: data[this.name]?.enabled,\r\n        events: data[this.name].events,\r\n        instanceId: this.monitor.waInstances[instanceName].instanceId,\r\n      },\r\n    });\r\n  }\r\n\r\n  public async get(instanceName: string): Promise<wa.LocalEvent> {\r\n    if (!this.status) {\r\n      return;\r\n    }\r\n\r\n    if (undefined === this.monitor.waInstances[instanceName]) {\r\n      return null;\r\n    }\r\n\r\n    const data = await this.prisma[this.name].findUnique({\r\n      where: {\r\n        instanceId: this.monitor.waInstances[instanceName].instanceId,\r\n      },\r\n    });\r\n\r\n    if (!data) {\r\n      return null;\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  public static readonly events = [\r\n    'APPLICATION_STARTUP',\r\n    'QRCODE_UPDATED',\r\n    'MESSAGES_SET',\r\n    'MESSAGES_UPSERT',\r\n    'MESSAGES_EDITED',\r\n    'MESSAGES_UPDATE',\r\n    'MESSAGES_DELETE',\r\n    'SEND_MESSAGE',\r\n    'CONTACTS_SET',\r\n    'CONTACTS_UPSERT',\r\n    'CONTACTS_UPDATE',\r\n    'PRESENCE_UPDATE',\r\n    'CHATS_SET',\r\n    'CHATS_UPSERT',\r\n    'CHATS_UPDATE',\r\n    'CHATS_DELETE',\r\n    'GROUPS_UPSERT',\r\n    'GROUP_UPDATE',\r\n    'GROUP_PARTICIPANTS_UPDATE',\r\n    'CONNECTION_UPDATE',\r\n    'LABELS_EDIT',\r\n    'LABELS_ASSOCIATION',\r\n    'CALL',\r\n    'TYPEBOT_START',\r\n    'TYPEBOT_CHANGE_STATUS',\r\n    'REMOVE_INSTANCE',\r\n    'LOGOUT_INSTANCE',\r\n  ];\r\n}\r\n","import { JSONSchema7 } from 'json-schema';\r\nimport { v4 } from 'uuid';\r\n\r\nimport { EventController } from '../event.controller';\r\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\r\n  const properties = {};\r\n  propertyNames.forEach(\r\n    (property) =>\r\n      (properties[property] = {\r\n        minLength: 1,\r\n        description: `The \"${property}\" cannot be empty`,\r\n      }),\r\n  );\r\n  return {\r\n    if: {\r\n      propertyNames: {\r\n        enum: [...propertyNames],\r\n      },\r\n    },\r\n    then: { properties },\r\n  };\r\n};\r\nexport const pusherSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    pusher: {\r\n      type: 'object',\r\n      properties: {\r\n        enabled: { type: 'boolean' },\r\n        appId: { type: 'string' },\r\n        key: { type: 'string' },\r\n        secret: { type: 'string' },\r\n        cluster: { type: 'string' },\r\n        useTLS: { type: 'boolean' },\r\n        events: {\r\n          type: 'array',\r\n          minItems: 0,\r\n          items: {\r\n            type: 'string',\r\n            enum: EventController.events,\r\n          },\r\n        },\r\n      },\r\n      required: ['enabled', 'appId', 'key', 'secret', 'cluster', 'useTLS'],\r\n      ...isNotEmpty('enabled', 'appId', 'key', 'secret', 'cluster', 'useTLS'),\r\n    },\r\n  },\r\n  required: ['pusher'],\r\n};\r\n","import { JSONSchema7 } from 'json-schema';\r\nimport { v4 } from 'uuid';\r\n\r\nimport { EventController } from '../event.controller';\r\n\r\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\r\n  const properties = {};\r\n  propertyNames.forEach(\r\n    (property) =>\r\n      (properties[property] = {\r\n        minLength: 1,\r\n        description: `The \"${property}\" cannot be empty`,\r\n      }),\r\n  );\r\n  return {\r\n    if: {\r\n      propertyNames: {\r\n        enum: [...propertyNames],\r\n      },\r\n    },\r\n    then: { properties },\r\n  };\r\n};\r\n\r\nexport const webhookSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    webhook: {\r\n      type: 'object',\r\n      properties: {\r\n        enabled: { type: 'boolean' },\r\n        url: { type: 'string' },\r\n        headers: { type: 'object' },\r\n        byEvents: { type: 'boolean' },\r\n        base64: { type: 'boolean' },\r\n        events: {\r\n          type: 'array',\r\n          minItems: 0,\r\n          items: {\r\n            type: 'string',\r\n            enum: EventController.events,\r\n          },\r\n        },\r\n      },\r\n      required: ['enabled', 'url'],\r\n      ...isNotEmpty('enabled', 'url'),\r\n    },\r\n  },\r\n  required: ['webhook'],\r\n};\r\n"],"mappings":"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","names":["event_schema_exports","__export","eventSchema","pusherSchema","webhookSchema","__toCommonJS","import_crypto","rnds8Pool","poolPtr","rng","crypto","byteToHex","i","unsafeStringify","arr","offset","import_crypto","native_default","crypto","v4","options","buf","offset","native_default","rnds","rng","unsafeStringify","v4_default","_EventController","prismaRepository","waMonitor","integrationStatus","integrationName","prisma","name","status","instanceName","data","EventController","isNotEmpty","propertyNames","properties","property","pusherSchema","v4_default","EventController","isNotEmpty","propertyNames","properties","property","webhookSchema","v4_default","EventController","eventSchema","v4_default","EventController"]}