{"version":3,"sources":["../../../src/api/controllers/group.controller.ts"],"sourcesContent":["import {\r\n  AcceptGroupInvite,\r\n  CreateGroupDto,\r\n  GetParticipant,\r\n  GroupDescriptionDto,\r\n  GroupInvite,\r\n  GroupJid,\r\n  GroupPictureDto,\r\n  GroupSendInvite,\r\n  GroupSubjectDto,\r\n  GroupToggleEphemeralDto,\r\n  GroupUpdateParticipantDto,\r\n  GroupUpdateSettingDto,\r\n} from '@api/dto/group.dto';\r\nimport { InstanceDto } from '@api/dto/instance.dto';\r\nimport { WAMonitoringService } from '@api/services/monitor.service';\r\n\r\nexport class GroupController {\r\n  constructor(private readonly waMonitor: WAMonitoringService) {}\r\n\r\n  public async createGroup(instance: InstanceDto, create: CreateGroupDto) {\r\n    return await this.waMonitor.waInstances[instance.instanceName].createGroup(create);\r\n  }\r\n\r\n  public async updateGroupPicture(instance: InstanceDto, update: GroupPictureDto) {\r\n    return await this.waMonitor.waInstances[instance.instanceName].updateGroupPicture(update);\r\n  }\r\n\r\n  public async updateGroupSubject(instance: InstanceDto, update: GroupSubjectDto) {\r\n    return await this.waMonitor.waInstances[instance.instanceName].updateGroupSubject(update);\r\n  }\r\n\r\n  public async updateGroupDescription(instance: InstanceDto, update: GroupDescriptionDto) {\r\n    return await this.waMonitor.waInstances[instance.instanceName].updateGroupDescription(update);\r\n  }\r\n\r\n  public async findGroupInfo(instance: InstanceDto, groupJid: GroupJid) {\r\n    return await this.waMonitor.waInstances[instance.instanceName].findGroup(groupJid);\r\n  }\r\n\r\n  public async fetchAllGroups(instance: InstanceDto, getPaticipants: GetParticipant) {\r\n    return await this.waMonitor.waInstances[instance.instanceName].fetchAllGroups(getPaticipants);\r\n  }\r\n\r\n  public async inviteCode(instance: InstanceDto, groupJid: GroupJid) {\r\n    return await this.waMonitor.waInstances[instance.instanceName].inviteCode(groupJid);\r\n  }\r\n\r\n  public async inviteInfo(instance: InstanceDto, inviteCode: GroupInvite) {\r\n    return await this.waMonitor.waInstances[instance.instanceName].inviteInfo(inviteCode);\r\n  }\r\n\r\n  public async sendInvite(instance: InstanceDto, data: GroupSendInvite) {\r\n    return await this.waMonitor.waInstances[instance.instanceName].sendInvite(data);\r\n  }\r\n\r\n  public async acceptInviteCode(instance: InstanceDto, inviteCode: AcceptGroupInvite) {\r\n    return await this.waMonitor.waInstances[instance.instanceName].acceptInviteCode(inviteCode);\r\n  }\r\n\r\n  public async revokeInviteCode(instance: InstanceDto, groupJid: GroupJid) {\r\n    return await this.waMonitor.waInstances[instance.instanceName].revokeInviteCode(groupJid);\r\n  }\r\n\r\n  public async findParticipants(instance: InstanceDto, groupJid: GroupJid) {\r\n    return await this.waMonitor.waInstances[instance.instanceName].findParticipants(groupJid);\r\n  }\r\n\r\n  public async updateGParticipate(instance: InstanceDto, update: GroupUpdateParticipantDto) {\r\n    return await this.waMonitor.waInstances[instance.instanceName].updateGParticipant(update);\r\n  }\r\n\r\n  public async updateGSetting(instance: InstanceDto, update: GroupUpdateSettingDto) {\r\n    return await this.waMonitor.waInstances[instance.instanceName].updateGSetting(update);\r\n  }\r\n\r\n  public async toggleEphemeral(instance: InstanceDto, update: GroupToggleEphemeralDto) {\r\n    return await this.waMonitor.waInstances[instance.instanceName].toggleEphemeral(update);\r\n  }\r\n\r\n  public async leaveGroup(instance: InstanceDto, groupJid: GroupJid) {\r\n    return await this.waMonitor.waInstances[instance.instanceName].leaveGroup(groupJid);\r\n  }\r\n}\r\n"],"mappings":"4ZAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,qBAAAE,IAAA,eAAAC,EAAAH,GAiBO,IAAME,EAAN,KAAsB,CAC3B,YAA6BE,EAAgC,CAAhC,eAAAA,CAAiC,CAE9D,MAAa,YAAYC,EAAuBC,EAAwB,CACtE,OAAO,MAAM,KAAK,UAAU,YAAYD,EAAS,YAAY,EAAE,YAAYC,CAAM,CACnF,CAEA,MAAa,mBAAmBD,EAAuBE,EAAyB,CAC9E,OAAO,MAAM,KAAK,UAAU,YAAYF,EAAS,YAAY,EAAE,mBAAmBE,CAAM,CAC1F,CAEA,MAAa,mBAAmBF,EAAuBE,EAAyB,CAC9E,OAAO,MAAM,KAAK,UAAU,YAAYF,EAAS,YAAY,EAAE,mBAAmBE,CAAM,CAC1F,CAEA,MAAa,uBAAuBF,EAAuBE,EAA6B,CACtF,OAAO,MAAM,KAAK,UAAU,YAAYF,EAAS,YAAY,EAAE,uBAAuBE,CAAM,CAC9F,CAEA,MAAa,cAAcF,EAAuBG,EAAoB,CACpE,OAAO,MAAM,KAAK,UAAU,YAAYH,EAAS,YAAY,EAAE,UAAUG,CAAQ,CACnF,CAEA,MAAa,eAAeH,EAAuBI,EAAgC,CACjF,OAAO,MAAM,KAAK,UAAU,YAAYJ,EAAS,YAAY,EAAE,eAAeI,CAAc,CAC9F,CAEA,MAAa,WAAWJ,EAAuBG,EAAoB,CACjE,OAAO,MAAM,KAAK,UAAU,YAAYH,EAAS,YAAY,EAAE,WAAWG,CAAQ,CACpF,CAEA,MAAa,WAAWH,EAAuBK,EAAyB,CACtE,OAAO,MAAM,KAAK,UAAU,YAAYL,EAAS,YAAY,EAAE,WAAWK,CAAU,CACtF,CAEA,MAAa,WAAWL,EAAuBM,EAAuB,CACpE,OAAO,MAAM,KAAK,UAAU,YAAYN,EAAS,YAAY,EAAE,WAAWM,CAAI,CAChF,CAEA,MAAa,iBAAiBN,EAAuBK,EAA+B,CAClF,OAAO,MAAM,KAAK,UAAU,YAAYL,EAAS,YAAY,EAAE,iBAAiBK,CAAU,CAC5F,CAEA,MAAa,iBAAiBL,EAAuBG,EAAoB,CACvE,OAAO,MAAM,KAAK,UAAU,YAAYH,EAAS,YAAY,EAAE,iBAAiBG,CAAQ,CAC1F,CAEA,MAAa,iBAAiBH,EAAuBG,EAAoB,CACvE,OAAO,MAAM,KAAK,UAAU,YAAYH,EAAS,YAAY,EAAE,iBAAiBG,CAAQ,CAC1F,CAEA,MAAa,mBAAmBH,EAAuBE,EAAmC,CACxF,OAAO,MAAM,KAAK,UAAU,YAAYF,EAAS,YAAY,EAAE,mBAAmBE,CAAM,CAC1F,CAEA,MAAa,eAAeF,EAAuBE,EAA+B,CAChF,OAAO,MAAM,KAAK,UAAU,YAAYF,EAAS,YAAY,EAAE,eAAeE,CAAM,CACtF,CAEA,MAAa,gBAAgBF,EAAuBE,EAAiC,CACnF,OAAO,MAAM,KAAK,UAAU,YAAYF,EAAS,YAAY,EAAE,gBAAgBE,CAAM,CACvF,CAEA,MAAa,WAAWF,EAAuBG,EAAoB,CACjE,OAAO,MAAM,KAAK,UAAU,YAAYH,EAAS,YAAY,EAAE,WAAWG,CAAQ,CACpF,CACF","names":["group_controller_exports","__export","GroupController","__toCommonJS","waMonitor","instance","create","update","groupJid","getPaticipants","inviteCode","data"]}