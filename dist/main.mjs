var Ll=Object.create;var qo=Object.defineProperty;var Fl=Object.getOwnPropertyDescriptor;var Ul=Object.getOwnPropertyNames;var Jl=Object.getPrototypeOf,Wl=Object.prototype.hasOwnProperty;var Ho=p=>{throw TypeError(p)};var Vo=(p=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(p,{get:(i,e)=>(typeof require<"u"?require:i)[e]}):p)(function(p){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+p+'" is not supported')});var b=(p,i)=>()=>(p&&(i=p(p=0)),i);var Go=(p,i)=>()=>(i||p((i={exports:{}}).exports,i),i.exports);var $l=(p,i,e,t)=>{if(i&&typeof i=="object"||typeof i=="function")for(let s of Ul(i))!Wl.call(p,s)&&s!==e&&qo(p,s,{get:()=>i[s],enumerable:!(t=Fl(i,s))||t.enumerable});return p};var ql=(p,i,e)=>(e=p!=null?Ll(Jl(p)):{},$l(i||!p||!p.__esModule?qo(e,"default",{value:p,enumerable:!0}):e,p));var jo=(p,i,e)=>i.has(p)||Ho("Cannot "+e);var Wn=(p,i,e)=>(jo(p,i,"read from private field"),e?e.call(p):i.get(p)),Ko=(p,i,e)=>i.has(p)?Ho("Cannot add the same private member more than once"):i instanceof WeakSet?i.add(p):i.set(p,e),Yo=(p,i,e,t)=>(jo(p,i,"write to private field"),t?t.call(p,e):i.set(p,e),e);import*as zo from"@sentry/node";var Xo=Go(()=>{var Qo=process.env.SENTRY_DSN;Qo&&zo.init({dsn:Qo,environment:process.env.NODE_ENV||"development",tracesSampleRate:1,profilesSampleRate:1})});import{isBooleanString as Zo}from"class-validator";import Hl from"dotenv";var Xe,C,Z=b(()=>{Hl.config();Xe=class{constructor(){this.loadEnv()}get(i){return this.env[i]}loadEnv(){this.env=this.envProcess(),this.env.PRODUCTION=process.env?.NODE_ENV==="PROD",process.env?.DOCKER_ENV==="true"&&(this.env.SERVER.TYPE=process.env.SERVER_TYPE,this.env.SERVER.PORT=Number.parseInt(process.env.SERVER_PORT)||8080)}envProcess(){return{SERVER:{TYPE:process.env.SERVER_TYPE||"http",PORT:Number.parseInt(process.env.SERVER_PORT)||8080,URL:process.env.SERVER_URL,DISABLE_DOCS:process.env?.SERVER_DISABLE_DOCS==="true",DISABLE_MANAGER:process.env?.SERVER_DISABLE_MANAGER==="true"},CORS:{ORIGIN:process.env.CORS_ORIGIN?.split(",")||["*"],METHODS:process.env.CORS_METHODS?.split(",")||["POST","GET","PUT","DELETE"],CREDENTIALS:process.env?.CORS_CREDENTIALS==="true"},SSL_CONF:{PRIVKEY:process.env?.SSL_CONF_PRIVKEY||"",FULLCHAIN:process.env?.SSL_CONF_FULLCHAIN||""},PROVIDER:{ENABLED:process.env?.PROVIDER_ENABLED==="true",HOST:process.env.PROVIDER_HOST,PORT:process.env?.PROVIDER_PORT||"5656",PREFIX:process.env?.PROVIDER_PREFIX||"evolution"},DATABASE:{CONNECTION:{URI:process.env.DATABASE_CONNECTION_URI||"",CLIENT_NAME:process.env.DATABASE_CONNECTION_CLIENT_NAME||"evolution"},PROVIDER:process.env.DATABASE_PROVIDER||"postgresql",SAVE_DATA:{INSTANCE:process.env?.DATABASE_SAVE_DATA_INSTANCE==="true",NEW_MESSAGE:process.env?.DATABASE_SAVE_DATA_NEW_MESSAGE==="true",MESSAGE_UPDATE:process.env?.DATABASE_SAVE_MESSAGE_UPDATE==="true",CONTACTS:process.env?.DATABASE_SAVE_DATA_CONTACTS==="true",CHATS:process.env?.DATABASE_SAVE_DATA_CHATS==="true",HISTORIC:process.env?.DATABASE_SAVE_DATA_HISTORIC==="true",LABELS:process.env?.DATABASE_SAVE_DATA_LABELS==="true",IS_ON_WHATSAPP:process.env?.DATABASE_SAVE_IS_ON_WHATSAPP==="true",IS_ON_WHATSAPP_DAYS:Number.parseInt(process.env?.DATABASE_SAVE_IS_ON_WHATSAPP_DAYS??"7")},DELETE_DATA:{LOGICAL_MESSAGE_DELETE:process.env?.DATABASE_DELETE_MESSAGE==="true"}},RABBITMQ:{ENABLED:process.env?.RABBITMQ_ENABLED==="true",GLOBAL_ENABLED:process.env?.RABBITMQ_GLOBAL_ENABLED==="true",PREFIX_KEY:process.env?.RABBITMQ_PREFIX_KEY||"evolution",EXCHANGE_NAME:process.env?.RABBITMQ_EXCHANGE_NAME||"evolution_exchange",URI:process.env.RABBITMQ_URI||"",EVENTS:{APPLICATION_STARTUP:process.env?.RABBITMQ_EVENTS_APPLICATION_STARTUP==="true",INSTANCE_CREATE:process.env?.RABBITMQ_EVENTS_INSTANCE_CREATE==="true",INSTANCE_DELETE:process.env?.RABBITMQ_EVENTS_INSTANCE_DELETE==="true",QRCODE_UPDATED:process.env?.RABBITMQ_EVENTS_QRCODE_UPDATED==="true",MESSAGES_SET:process.env?.RABBITMQ_EVENTS_MESSAGES_SET==="true",MESSAGES_UPSERT:process.env?.RABBITMQ_EVENTS_MESSAGES_UPSERT==="true",MESSAGES_EDITED:process.env?.RABBITMQ_EVENTS_MESSAGES_EDITED==="true",MESSAGES_UPDATE:process.env?.RABBITMQ_EVENTS_MESSAGES_UPDATE==="true",MESSAGES_DELETE:process.env?.RABBITMQ_EVENTS_MESSAGES_DELETE==="true",SEND_MESSAGE:process.env?.RABBITMQ_EVENTS_SEND_MESSAGE==="true",CONTACTS_SET:process.env?.RABBITMQ_EVENTS_CONTACTS_SET==="true",CONTACTS_UPDATE:process.env?.RABBITMQ_EVENTS_CONTACTS_UPDATE==="true",CONTACTS_UPSERT:process.env?.RABBITMQ_EVENTS_CONTACTS_UPSERT==="true",PRESENCE_UPDATE:process.env?.RABBITMQ_EVENTS_PRESENCE_UPDATE==="true",CHATS_SET:process.env?.RABBITMQ_EVENTS_CHATS_SET==="true",CHATS_UPDATE:process.env?.RABBITMQ_EVENTS_CHATS_UPDATE==="true",CHATS_UPSERT:process.env?.RABBITMQ_EVENTS_CHATS_UPSERT==="true",CHATS_DELETE:process.env?.RABBITMQ_EVENTS_CHATS_DELETE==="true",CONNECTION_UPDATE:process.env?.RABBITMQ_EVENTS_CONNECTION_UPDATE==="true",LABELS_EDIT:process.env?.RABBITMQ_EVENTS_LABELS_EDIT==="true",LABELS_ASSOCIATION:process.env?.RABBITMQ_EVENTS_LABELS_ASSOCIATION==="true",GROUPS_UPSERT:process.env?.RABBITMQ_EVENTS_GROUPS_UPSERT==="true",GROUP_UPDATE:process.env?.RABBITMQ_EVENTS_GROUPS_UPDATE==="true",GROUP_PARTICIPANTS_UPDATE:process.env?.RABBITMQ_EVENTS_GROUP_PARTICIPANTS_UPDATE==="true",CALL:process.env?.RABBITMQ_EVENTS_CALL==="true",TYPEBOT_START:process.env?.RABBITMQ_EVENTS_TYPEBOT_START==="true",TYPEBOT_CHANGE_STATUS:process.env?.RABBITMQ_EVENTS_TYPEBOT_CHANGE_STATUS==="true"}},SQS:{ENABLED:process.env?.SQS_ENABLED==="true",ACCESS_KEY_ID:process.env.SQS_ACCESS_KEY_ID||"",SECRET_ACCESS_KEY:process.env.SQS_SECRET_ACCESS_KEY||"",ACCOUNT_ID:process.env.SQS_ACCOUNT_ID||"",REGION:process.env.SQS_REGION||""},WEBSOCKET:{ENABLED:process.env?.WEBSOCKET_ENABLED==="true",GLOBAL_EVENTS:process.env?.WEBSOCKET_GLOBAL_EVENTS==="true"},PUSHER:{ENABLED:process.env?.PUSHER_ENABLED==="true",GLOBAL:{ENABLED:process.env?.PUSHER_GLOBAL_ENABLED==="true",APP_ID:process.env?.PUSHER_GLOBAL_APP_ID||"",KEY:process.env?.PUSHER_GLOBAL_KEY||"",SECRET:process.env?.PUSHER_GLOBAL_SECRET||"",CLUSTER:process.env?.PUSHER_GLOBAL_CLUSTER||"",USE_TLS:process.env?.PUSHER_GLOBAL_USE_TLS==="true"},EVENTS:{APPLICATION_STARTUP:process.env?.PUSHER_EVENTS_APPLICATION_STARTUP==="true",INSTANCE_CREATE:process.env?.PUSHER_EVENTS_INSTANCE_CREATE==="true",INSTANCE_DELETE:process.env?.PUSHER_EVENTS_INSTANCE_DELETE==="true",QRCODE_UPDATED:process.env?.PUSHER_EVENTS_QRCODE_UPDATED==="true",MESSAGES_SET:process.env?.PUSHER_EVENTS_MESSAGES_SET==="true",MESSAGES_UPSERT:process.env?.PUSHER_EVENTS_MESSAGES_UPSERT==="true",MESSAGES_EDITED:process.env?.PUSHER_EVENTS_MESSAGES_EDITED==="true",MESSAGES_UPDATE:process.env?.PUSHER_EVENTS_MESSAGES_UPDATE==="true",MESSAGES_DELETE:process.env?.PUSHER_EVENTS_MESSAGES_DELETE==="true",SEND_MESSAGE:process.env?.PUSHER_EVENTS_SEND_MESSAGE==="true",CONTACTS_SET:process.env?.PUSHER_EVENTS_CONTACTS_SET==="true",CONTACTS_UPDATE:process.env?.PUSHER_EVENTS_CONTACTS_UPDATE==="true",CONTACTS_UPSERT:process.env?.PUSHER_EVENTS_CONTACTS_UPSERT==="true",PRESENCE_UPDATE:process.env?.PUSHER_EVENTS_PRESENCE_UPDATE==="true",CHATS_SET:process.env?.PUSHER_EVENTS_CHATS_SET==="true",CHATS_UPDATE:process.env?.PUSHER_EVENTS_CHATS_UPDATE==="true",CHATS_UPSERT:process.env?.PUSHER_EVENTS_CHATS_UPSERT==="true",CHATS_DELETE:process.env?.PUSHER_EVENTS_CHATS_DELETE==="true",CONNECTION_UPDATE:process.env?.PUSHER_EVENTS_CONNECTION_UPDATE==="true",LABELS_EDIT:process.env?.PUSHER_EVENTS_LABELS_EDIT==="true",LABELS_ASSOCIATION:process.env?.PUSHER_EVENTS_LABELS_ASSOCIATION==="true",GROUPS_UPSERT:process.env?.PUSHER_EVENTS_GROUPS_UPSERT==="true",GROUP_UPDATE:process.env?.PUSHER_EVENTS_GROUPS_UPDATE==="true",GROUP_PARTICIPANTS_UPDATE:process.env?.PUSHER_EVENTS_GROUP_PARTICIPANTS_UPDATE==="true",CALL:process.env?.PUSHER_EVENTS_CALL==="true",TYPEBOT_START:process.env?.PUSHER_EVENTS_TYPEBOT_START==="true",TYPEBOT_CHANGE_STATUS:process.env?.PUSHER_EVENTS_TYPEBOT_CHANGE_STATUS==="true"}},WA_BUSINESS:{TOKEN_WEBHOOK:process.env.WA_BUSINESS_TOKEN_WEBHOOK||"evolution",URL:process.env.WA_BUSINESS_URL||"https://graph.facebook.com",VERSION:process.env.WA_BUSINESS_VERSION||"v18.0",LANGUAGE:process.env.WA_BUSINESS_LANGUAGE||"en"},LOG:{LEVEL:process.env?.LOG_LEVEL?.split(",")||["ERROR","WARN","DEBUG","INFO","LOG","VERBOSE","DARK","WEBHOOKS","WEBSOCKET"],COLOR:process.env?.LOG_COLOR==="true",BAILEYS:process.env?.LOG_BAILEYS||"error"},DEL_INSTANCE:Zo(process.env?.DEL_INSTANCE)?process.env.DEL_INSTANCE==="true":Number.parseInt(process.env.DEL_INSTANCE)||!1,DEL_TEMP_INSTANCES:Zo(process.env?.DEL_TEMP_INSTANCES)?process.env.DEL_TEMP_INSTANCES==="true":!0,LANGUAGE:process.env?.LANGUAGE||"en",WEBHOOK:{GLOBAL:{URL:process.env?.WEBHOOK_GLOBAL_URL||"",ENABLED:process.env?.WEBHOOK_GLOBAL_ENABLED==="true",WEBHOOK_BY_EVENTS:process.env?.WEBHOOK_GLOBAL_WEBHOOK_BY_EVENTS==="true"},EVENTS:{APPLICATION_STARTUP:process.env?.WEBHOOK_EVENTS_APPLICATION_STARTUP==="true",INSTANCE_CREATE:process.env?.WEBHOOK_EVENTS_INSTANCE_CREATE==="true",INSTANCE_DELETE:process.env?.WEBHOOK_EVENTS_INSTANCE_DELETE==="true",QRCODE_UPDATED:process.env?.WEBHOOK_EVENTS_QRCODE_UPDATED==="true",MESSAGES_SET:process.env?.WEBHOOK_EVENTS_MESSAGES_SET==="true",MESSAGES_UPSERT:process.env?.WEBHOOK_EVENTS_MESSAGES_UPSERT==="true",MESSAGES_EDITED:process.env?.WEBHOOK_EVENTS_MESSAGES_EDITED==="true",MESSAGES_UPDATE:process.env?.WEBHOOK_EVENTS_MESSAGES_UPDATE==="true",MESSAGES_DELETE:process.env?.WEBHOOK_EVENTS_MESSAGES_DELETE==="true",SEND_MESSAGE:process.env?.WEBHOOK_EVENTS_SEND_MESSAGE==="true",CONTACTS_SET:process.env?.WEBHOOK_EVENTS_CONTACTS_SET==="true",CONTACTS_UPDATE:process.env?.WEBHOOK_EVENTS_CONTACTS_UPDATE==="true",CONTACTS_UPSERT:process.env?.WEBHOOK_EVENTS_CONTACTS_UPSERT==="true",PRESENCE_UPDATE:process.env?.WEBHOOK_EVENTS_PRESENCE_UPDATE==="true",CHATS_SET:process.env?.WEBHOOK_EVENTS_CHATS_SET==="true",CHATS_UPDATE:process.env?.WEBHOOK_EVENTS_CHATS_UPDATE==="true",CHATS_UPSERT:process.env?.WEBHOOK_EVENTS_CHATS_UPSERT==="true",CHATS_DELETE:process.env?.WEBHOOK_EVENTS_CHATS_DELETE==="true",CONNECTION_UPDATE:process.env?.WEBHOOK_EVENTS_CONNECTION_UPDATE==="true",LABELS_EDIT:process.env?.WEBHOOK_EVENTS_LABELS_EDIT==="true",LABELS_ASSOCIATION:process.env?.WEBHOOK_EVENTS_LABELS_ASSOCIATION==="true",GROUPS_UPSERT:process.env?.WEBHOOK_EVENTS_GROUPS_UPSERT==="true",GROUP_UPDATE:process.env?.WEBHOOK_EVENTS_GROUPS_UPDATE==="true",GROUP_PARTICIPANTS_UPDATE:process.env?.WEBHOOK_EVENTS_GROUP_PARTICIPANTS_UPDATE==="true",CALL:process.env?.WEBHOOK_EVENTS_CALL==="true",TYPEBOT_START:process.env?.WEBHOOK_EVENTS_TYPEBOT_START==="true",TYPEBOT_CHANGE_STATUS:process.env?.WEBHOOK_EVENTS_TYPEBOT_CHANGE_STATUS==="true",ERRORS:process.env?.WEBHOOK_EVENTS_ERRORS==="true",ERRORS_WEBHOOK:process.env?.WEBHOOK_EVENTS_ERRORS_WEBHOOK||""}},CONFIG_SESSION_PHONE:{CLIENT:process.env?.CONFIG_SESSION_PHONE_CLIENT||"Evolution API",NAME:process.env?.CONFIG_SESSION_PHONE_NAME||"Chrome",VERSION:process.env?.CONFIG_SESSION_PHONE_VERSION||null},QRCODE:{LIMIT:Number.parseInt(process.env.QRCODE_LIMIT)||30,COLOR:process.env.QRCODE_COLOR||"#198754"},TYPEBOT:{ENABLED:process.env?.TYPEBOT_ENABLED==="true",API_VERSION:process.env?.TYPEBOT_API_VERSION||"old",SEND_MEDIA_BASE64:process.env?.TYPEBOT_SEND_MEDIA_BASE64==="true"},CHATWOOT:{ENABLED:process.env?.CHATWOOT_ENABLED==="true",MESSAGE_DELETE:process.env.CHATWOOT_MESSAGE_DELETE==="true",MESSAGE_READ:process.env.CHATWOOT_MESSAGE_READ==="true",BOT_CONTACT:!process.env.CHATWOOT_BOT_CONTACT||process.env.CHATWOOT_BOT_CONTACT==="true",IMPORT:{DATABASE:{CONNECTION:{URI:process.env.CHATWOOT_IMPORT_DATABASE_CONNECTION_URI||""}},PLACEHOLDER_MEDIA_MESSAGE:process.env?.CHATWOOT_IMPORT_PLACEHOLDER_MEDIA_MESSAGE==="true"}},OPENAI:{ENABLED:process.env?.OPENAI_ENABLED==="true",API_KEY_GLOBAL:process.env?.OPENAI_API_KEY_GLOBAL||null},DIFY:{ENABLED:process.env?.DIFY_ENABLED==="true"},CACHE:{REDIS:{ENABLED:process.env?.CACHE_REDIS_ENABLED==="true",URI:process.env?.CACHE_REDIS_URI||"",PREFIX_KEY:process.env?.CACHE_REDIS_PREFIX_KEY||"evolution-cache",TTL:Number.parseInt(process.env?.CACHE_REDIS_TTL)||604800,SAVE_INSTANCES:process.env?.CACHE_REDIS_SAVE_INSTANCES==="true"},LOCAL:{ENABLED:process.env?.CACHE_LOCAL_ENABLED==="true",TTL:Number.parseInt(process.env?.CACHE_REDIS_TTL)||86400}},S3:{ACCESS_KEY:process.env?.S3_ACCESS_KEY,SECRET_KEY:process.env?.S3_SECRET_KEY,ENDPOINT:process.env?.S3_ENDPOINT,BUCKET_NAME:process.env?.S3_BUCKET,ENABLE:process.env?.S3_ENABLED==="true",PORT:Number.parseInt(process.env?.S3_PORT||"9000"),USE_SSL:process.env?.S3_USE_SSL==="true",REGION:process.env?.S3_REGION},AUTHENTICATION:{API_KEY:{KEY:process.env.AUTHENTICATION_API_KEY||"BQYHJGJHJ"},EXPOSE_IN_FETCH_INSTANCES:process.env?.AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES==="true"}}}},C=new Xe});import Vl from"dayjs";import Gl from"fs";var jl,er,He,tr,sr,ir,A,_=b(()=>{Z();jl=JSON.parse(Gl.readFileSync("./package.json","utf8")),er=p=>Vl(p).toDate().toString().replace(/\sGMT.+/,""),He=(r=>(r.LOG="\x1B[32m",r.INFO="\x1B[34m",r.WARN="\x1B[33m",r.ERROR="\x1B[31m",r.DEBUG="\x1B[36m",r.VERBOSE="\x1B[37m",r.DARK="\x1B[30m",r))(He||{}),tr=(r=>(r.LOG="\x1B[32m%s\x1B[0m",r.DARK="\x1B[30m%s\x1B[0m",r.INFO="\x1B[34m%s\x1B[0m",r.WARN="\x1B[33m%s\x1B[0m",r.ERROR="\x1B[31m%s\x1B[0m",r.DEBUG="\x1B[36m%s\x1B[0m",r.VERBOSE="\x1B[37m%s\x1B[0m",r))(tr||{}),sr=(r=>(r.LOG="LOG",r.WARN="WARN",r.INFO="INFO",r.DARK="DARK",r.ERROR="ERROR",r.DEBUG="DEBUG",r.VERBOSE="VERBOSE",r))(sr||{}),ir=(r=>(r.LOG="\x1B[42m",r.INFO="\x1B[44m",r.WARN="\x1B[43m",r.DARK="\x1B[40m",r.ERROR="\x1B[41m",r.DEBUG="\x1B[46m",r.VERBOSE="\x1B[47m",r))(ir||{}),A=class{constructor(i="Logger"){this.configService=C;this.instance=null;this.context=i}setContext(i){this.context=i}setInstance(i){this.instance=i}console(i,e){let t=[];this.configService.get("LOG").LEVEL.forEach(o=>t.push(sr[o]));let s=typeof i;t.includes(e)&&(C.get("LOG").COLOR?(console.log("\x1B[1m"+tr[e],"[Evolution API]","\x1B[1m"+He[e],this.instance?`[${this.instance}]`:"","\x1B[1m"+He[e],`v${jl.version}`,"\x1B[1m"+He[e],process.pid.toString(),"\x1B[0m","\x1B[1m"+He[e],"-","\x1B[1m\x1B[37m",`${er(Date.now())}  `,"\x1B[0m",He[e]+ir[e]+"\x1B[1m",`${e} \x1B[0m`,"\x1B[33m\x1B[1m",`[${this.context}]\x1B[0m`,He[e]+"\x1B[1m",`[${s}]\x1B[0m`,He[e],s!=="object"?i:"","\x1B[0m"),s==="object"&&console.log(i,`
`)):console.log("[Evolution API]",this.instance?`[${this.instance}]`:"",process.pid.toString(),"-",`${er(Date.now())}  `,`${e} `,`[${this.context}]`,`[${s}]`,i))}log(i){this.console(i,"LOG")}info(i){this.console(i,"INFO")}warn(i){this.console(i,"WARN")}error(i){this.console(i,"ERROR")}verbose(i){this.console(i,"VERBOSE")}debug(i){this.console(i,"DEBUG")}dark(i){this.console(i,"DARK")}}});import Ve from"axios";import{execSync as Kl}from"child_process";var ut,$n=b(()=>{_();ut=class{constructor(i){this.configService=i;this.logger=new A("ProviderFiles");this.config=Object.freeze(this.configService.get("PROVIDER"));this.baseUrl=`http://${this.config.HOST}:${this.config.PORT}/session/${this.config.PREFIX}`,this.globalApiToken=this.configService.get("AUTHENTICATION").API_KEY.KEY}get isEnabled(){return!!this.config?.ENABLED}async onModuleInit(){if(this.config.ENABLED){let i=`http://${this.config.HOST}:${this.config.PORT}`;try{if((await Ve.options(i+"/ping"))?.data!="pong")throw new Error("Offline file provider.");await Ve.post(`${i}/session`,{group:this.config.PREFIX},{headers:{apikey:this.globalApiToken}})}catch(e){this.logger.error(["Failed to connect to the file server",e?.message,e?.stack]);let t=process.pid;Kl(`kill -9 ${t}`)}}}async onModuleDestroy(){}async create(i){try{let e=await Ve.post(`${this.baseUrl}`,{instance:i},{headers:{apikey:this.globalApiToken}});return[{status:e.status,data:e?.data}]}catch(e){return[{status:e?.response?.status,data:e?.response?.data},e]}}async write(i,e,t){try{let s=await Ve.post(`${this.baseUrl}/${i}/${e}`,t,{headers:{apikey:this.globalApiToken}});return[{status:s.status,data:s?.data}]}catch(s){return[{status:s?.response?.status,data:s?.response?.data},s]}}async read(i,e){try{let t=await Ve.get(`${this.baseUrl}/${i}/${e}`,{headers:{apikey:this.globalApiToken}});return[{status:t.status,data:t?.data}]}catch(t){return[{status:t?.response?.status,data:t?.response?.data},t]}}async delete(i,e){try{let t=await Ve.delete(`${this.baseUrl}/${i}/${e}`,{headers:{apikey:this.globalApiToken}});return[{status:t.status,data:t?.data}]}catch(t){return[{status:t?.response?.status,data:t?.response?.data},t]}}async allInstances(){try{let i=await Ve.get(`${this.baseUrl}/list-instances`,{headers:{apikey:this.globalApiToken}});return[{status:i.status,data:i?.data}]}catch(i){return[{status:i?.response?.status,data:i?.response?.data},i]}}async removeSession(i){try{let e=await Ve.delete(`${this.baseUrl}/${i}`,{headers:{apikey:this.globalApiToken}});return[{status:e.status,data:e?.data}]}catch(e){return[{status:e?.response?.status,data:e?.response?.data},e]}}}});import{PrismaClient as Yl}from"@prisma/client";var Ze,dt,zt=b(()=>{_();Ze=class{},dt=class extends Yl{constructor(e){super();this.configService=e;this.logger=new A("PrismaRepository")}async onModuleInit(){await this.$connect(),this.logger.info("Repository:Prisma - ON")}async onModuleDestroy(){await this.$disconnect(),this.logger.warn("Repository:Prisma - OFF")}}});import{BufferJSON as nr}from"baileys";import Ql from"node-cache";var he,Xt,or=b(()=>{_();he=class he{constructor(i,e){this.configService=i;this.module=e;this.logger=new A("LocalCache");this.conf=this.configService.get("CACHE")?.LOCAL}async get(i){return he.localCache.get(this.buildKey(i))}async set(i,e,t){return he.localCache.set(this.buildKey(i),e,t||this.conf.TTL)}async has(i){return he.localCache.has(this.buildKey(i))}async delete(i){return he.localCache.del(this.buildKey(i))}async deleteAll(i){let e=await this.keys(i);return e?.length?he.localCache.del(e):0}async keys(i){let e=`${this.buildKey("")}${i?`${i}:`:""}`;return he.localCache.keys().filter(t=>t.substring(0,e.length)===e)}buildKey(i){return`${this.module}:${i}`}async hGet(i,e){try{let t=he.localCache.get(this.buildKey(i));return t&&e in t?JSON.parse(t[e],nr.reviver):null}catch(t){this.logger.error(t)}}async hSet(i,e,t){try{let s=JSON.stringify(t,nr.replacer),o=he.localCache.get(this.buildKey(i));o||(o={}),o[e]=s,he.localCache.set(this.buildKey(i),o)}catch(s){this.logger.error(s)}}async hDelete(i,e){try{let t=he.localCache.get(this.buildKey(i));return t&&e in t?(delete t[e],he.localCache.set(this.buildKey(i),t),1):0}catch(t){this.logger.error(t)}}};he.localCache=new Ql;Xt=he});import{createClient as zl}from"redis";var qn,rr,ar=b(()=>{Z();_();qn=class{constructor(){this.logger=new A("Redis");this.client=null;this.connected=!1;this.conf=C.get("CACHE")?.REDIS}getConnection(){if(this.connected)return this.client;this.client=zl({url:this.conf.URI}),this.client.on("connect",()=>{this.logger.verbose("redis connecting")}),this.client.on("ready",()=>{this.logger.verbose("redis ready"),this.connected=!0}),this.client.on("error",()=>{this.logger.error("redis disconnected"),this.connected=!1}),this.client.on("end",()=>{this.logger.verbose("redis connection ended"),this.connected=!1});try{this.client.connect(),this.connected=!0}catch(i){return this.connected=!1,this.logger.error("redis connect exception caught: "+i),null}return this.client}},rr=new qn});import{BufferJSON as cr}from"baileys";var Zt,pr=b(()=>{_();ar();Zt=class{constructor(i,e){this.configService=i;this.module=e;this.logger=new A("RedisCache");this.conf=this.configService.get("CACHE")?.REDIS,this.client=rr.getConnection()}async get(i){try{return JSON.parse(await this.client.get(this.buildKey(i)))}catch(e){this.logger.error(e)}}async hGet(i,e){try{let t=await this.client.hGet(this.buildKey(i),e);return t?JSON.parse(t,cr.reviver):null}catch(t){this.logger.error(t)}}async set(i,e,t){try{await this.client.setEx(this.buildKey(i),t||this.conf?.TTL,JSON.stringify(e))}catch(s){this.logger.error(s)}}async hSet(i,e,t){try{let s=JSON.stringify(t,cr.replacer);await this.client.hSet(this.buildKey(i),e,s)}catch(s){this.logger.error(s)}}async has(i){try{return await this.client.exists(this.buildKey(i))>0}catch(e){this.logger.error(e)}}async delete(i){try{return await this.client.del(this.buildKey(i))}catch(e){this.logger.error(e)}}async hDelete(i,e){try{return await this.client.hDel(this.buildKey(i),e)}catch(t){this.logger.error(t)}}async deleteAll(i){try{let e=await this.keys(i);return e?.length?await this.client.del(e):0}catch(e){this.logger.error(e)}}async keys(i){try{let e=`${this.buildKey("")}${i?`${i}:`:""}*`,t=[];for await(let s of this.client.scanIterator({MATCH:e,COUNT:100}))t.push(s);return[...new Set(t)]}catch(e){this.logger.error(e)}}buildKey(i){return`${this.conf?.PREFIX_KEY}:${this.module}:${i}`}}});var lr,Ne,es=b(()=>{_();or();pr();lr=new A("CacheEngine"),Ne=class{constructor(i,e){this.configService=i;let t=i.get("CACHE");t?.REDIS?.ENABLED&&t?.REDIS?.URI!==""?(lr.verbose(`RedisCache initialized for ${e}`),this.engine=new Zt(i,e)):t?.LOCAL?.ENABLED&&(lr.verbose(`LocalCache initialized for ${e}`),this.engine=new Xt(i,e))}getEngine(){return this.engine}}});import Xl from"eventemitter2";var Zl,Hn,ur=b(()=>{Zl=parseInt(process.env.EVENT_EMITTER_MAX_LISTENERS,10)||50,Hn=new Xl({delimiter:".",newListener:!1,ignoreErrors:!1,maxListeners:Zl})});var ts,dr=b(()=>{ts=class{constructor(i){this.waMonitor=i}async offerCall({instanceName:i},e){return await this.waMonitor.waInstances[i].offerCall(e)}}});var ss,gr=b(()=>{ss=class{constructor(i){this.waMonitor=i}async whatsappNumber({instanceName:i},e){return await this.waMonitor.waInstances[i].whatsappNumber(e)}async readMessage({instanceName:i},e){return await this.waMonitor.waInstances[i].markMessageAsRead(e)}async archiveChat({instanceName:i},e){return await this.waMonitor.waInstances[i].archiveChat(e)}async markChatUnread({instanceName:i},e){return await this.waMonitor.waInstances[i].markChatUnread(e)}async deleteMessage({instanceName:i},e){return await this.waMonitor.waInstances[i].deleteMessage(e)}async fetchProfilePicture({instanceName:i},e){return await this.waMonitor.waInstances[i].profilePicture(e.number)}async fetchProfile({instanceName:i},e){return await this.waMonitor.waInstances[i].fetchProfile(i,e.number)}async fetchContacts({instanceName:i},e){return await this.waMonitor.waInstances[i].fetchContacts(e)}async getBase64FromMediaMessage({instanceName:i},e){return await this.waMonitor.waInstances[i].getBase64FromMediaMessage(e)}async fetchMessages({instanceName:i},e){return await this.waMonitor.waInstances[i].fetchMessages(e)}async fetchStatusMessage({instanceName:i},e){return await this.waMonitor.waInstances[i].fetchStatusMessage(e)}async fetchChats({instanceName:i},e){return await this.waMonitor.waInstances[i].fetchChats(e)}async sendPresence({instanceName:i},e){return await this.waMonitor.waInstances[i].sendPresence(e)}async fetchPrivacySettings({instanceName:i}){return await this.waMonitor.waInstances[i].fetchPrivacySettings()}async updatePrivacySettings({instanceName:i},e){return await this.waMonitor.waInstances[i].updatePrivacySettings(e)}async fetchBusinessProfile({instanceName:i},e){return await this.waMonitor.waInstances[i].fetchBusinessProfile(e.number)}async updateProfileName({instanceName:i},e){return await this.waMonitor.waInstances[i].updateProfileName(e.name)}async updateProfileStatus({instanceName:i},e){return await this.waMonitor.waInstances[i].updateProfileStatus(e.status)}async updateProfilePicture({instanceName:i},e){return await this.waMonitor.waInstances[i].updateProfilePicture(e.picture)}async removeProfilePicture({instanceName:i}){return await this.waMonitor.waInstances[i].removeProfilePicture()}async updateMessage({instanceName:i},e){return await this.waMonitor.waInstances[i].updateMessage(e)}async blockUser({instanceName:i},e){return await this.waMonitor.waInstances[i].blockUser(e)}}});var is,mr=b(()=>{is=class{constructor(i){this.waMonitor=i}async createGroup(i,e){return await this.waMonitor.waInstances[i.instanceName].createGroup(e)}async updateGroupPicture(i,e){return await this.waMonitor.waInstances[i.instanceName].updateGroupPicture(e)}async updateGroupSubject(i,e){return await this.waMonitor.waInstances[i.instanceName].updateGroupSubject(e)}async updateGroupDescription(i,e){return await this.waMonitor.waInstances[i.instanceName].updateGroupDescription(e)}async findGroupInfo(i,e){return await this.waMonitor.waInstances[i.instanceName].findGroup(e)}async fetchAllGroups(i,e){return await this.waMonitor.waInstances[i.instanceName].fetchAllGroups(e)}async inviteCode(i,e){return await this.waMonitor.waInstances[i.instanceName].inviteCode(e)}async inviteInfo(i,e){return await this.waMonitor.waInstances[i.instanceName].inviteInfo(e)}async sendInvite(i,e){return await this.waMonitor.waInstances[i.instanceName].sendInvite(e)}async acceptInviteCode(i,e){return await this.waMonitor.waInstances[i.instanceName].acceptInviteCode(e)}async revokeInviteCode(i,e){return await this.waMonitor.waInstances[i.instanceName].revokeInviteCode(e)}async findParticipants(i,e){return await this.waMonitor.waInstances[i.instanceName].findParticipants(e)}async updateGParticipate(i,e){return await this.waMonitor.waInstances[i.instanceName].updateGParticipant(e)}async updateGSetting(i,e){return await this.waMonitor.waInstances[i.instanceName].updateGSetting(e)}async toggleEphemeral(i,e){return await this.waMonitor.waInstances[i.instanceName].toggleEphemeral(e)}async leaveGroup(i,e){return await this.waMonitor.waInstances[i.instanceName].leaveGroup(e)}}});var hr,fr,N,ge=b(()=>{hr=["imageMessage","documentMessage","audioMessage","videoMessage","stickerMessage","ptvMessage"],fr=["ephemeralMessage","documentWithCaptionMessage","viewOnceMessage","viewOnceMessageV2"],N={WHATSAPP_BUSINESS:"WHATSAPP-BUSINESS",WHATSAPP_BAILEYS:"WHATSAPP-BAILEYS",EVOLUTION:"EVOLUTION"}});var f,yr=b(()=>{j();f=class{constructor(...i){throw{status:400,error:"Bad Request",message:i.length>0?i:void 0}}}});var et,wr=b(()=>{j();et=class{constructor(...i){throw{status:401,error:"Unauthorized",message:i.length>0?i:"Unauthorized"}}}});var gt,br=b(()=>{j();gt=class{constructor(...i){throw{status:403,error:"Forbidden",message:i.length>0?i:void 0}}}});var H,Sr=b(()=>{j();H=class{constructor(...i){throw{status:404,error:"Not Found",message:i.length>0?i:void 0}}}});var U,Er=b(()=>{j();U=class{constructor(...i){throw{status:500,error:"Internal Server Error",message:i.length>0?i:void 0}}}});var ne=b(()=>{yr();wr();br();Sr();Er()});import eu from"crypto";function Vn(){return ns>os.length-16&&(eu.randomFillSync(os),ns=0),os.slice(ns,ns+=16)}var os,ns,Ir=b(()=>{os=new Uint8Array(256),ns=os.length});function Mr(p,i=0){return ce[p[i+0]]+ce[p[i+1]]+ce[p[i+2]]+ce[p[i+3]]+"-"+ce[p[i+4]]+ce[p[i+5]]+"-"+ce[p[i+6]]+ce[p[i+7]]+"-"+ce[p[i+8]]+ce[p[i+9]]+"-"+ce[p[i+10]]+ce[p[i+11]]+ce[p[i+12]]+ce[p[i+13]]+ce[p[i+14]]+ce[p[i+15]]}var ce,Tr=b(()=>{ce=[];for(let p=0;p<256;++p)ce.push((p+256).toString(16).slice(1))});import tu from"crypto";var Gn,Cr=b(()=>{Gn={randomUUID:tu.randomUUID}});function su(p,i,e){if(Gn.randomUUID&&!i&&!p)return Gn.randomUUID();p=p||{};let t=p.random||(p.rng||Vn)();if(t[6]=t[6]&15|64,t[8]=t[8]&63|128,i){e=e||0;for(let s=0;s<16;++s)i[e+s]=t[s];return i}return Mr(t)}var T,vr=b(()=>{Cr();Ir();Tr();T=su});var ee=b(()=>{vr()});import{delay as Ar}from"baileys";import{isArray as Rr,isURL as iu}from"class-validator";var rs,Pr=b(()=>{F();ge();_();ne();ee();rs=class{constructor(i,e,t,s,o,n,r,a,c,l,d){this.waMonitor=i;this.configService=e;this.prismaRepository=t;this.eventEmitter=s;this.chatwootService=o;this.settingsService=n;this.proxyService=r;this.cache=a;this.chatwootCache=c;this.baileysCache=l;this.providerFiles=d;this.logger=new A("InstanceController")}async createInstance(i){try{let e=as.init(i,{configService:this.configService,eventEmitter:this.eventEmitter,prismaRepository:this.prismaRepository,cache:this.cache,chatwootCache:this.chatwootCache,baileysCache:this.baileysCache,providerFiles:this.providerFiles});if(!e)throw new f("Invalid integration");let t=T();i.instanceId=t;let s;if(i.token?s=i.token:s=T().toUpperCase(),await this.waMonitor.saveInstance({instanceId:t,integration:i.integration,instanceName:i.instanceName,ownerJid:i.ownerJid,profileName:i.profileName,profilePicUrl:i.profilePicUrl,hash:s,number:i.number,businessId:i.businessId,status:i.status}),e.setInstance({instanceName:i.instanceName,instanceId:t,integration:i.integration,token:s,number:i.number,businessId:i.businessId}),this.waMonitor.waInstances[e.instanceName]=e,this.waMonitor.delInstanceTime(e.instanceName),await se.setInstance(e.instanceName,i),e.sendDataWebhook("instance.create",{instanceName:i.instanceName,instanceId:t}),i.proxyHost&&i.proxyPort&&i.proxyProtocol){if(!await this.proxyService.testProxy({host:i.proxyHost,port:i.proxyPort,protocol:i.proxyProtocol,username:i.proxyUsername,password:i.proxyPassword}))throw new f("Invalid proxy");await this.proxyService.createProxy(e,{enabled:!0,host:i.proxyHost,port:i.proxyPort,protocol:i.proxyProtocol,username:i.proxyUsername,password:i.proxyPassword})}let o={rejectCall:i.rejectCall===!0,msgCall:i.msgCall||"",groupsIgnore:i.groupsIgnore===!0,alwaysOnline:i.alwaysOnline===!0,readMessages:i.readMessages===!0,readStatus:i.readStatus===!0,syncFullHistory:i.syncFullHistory===!0,wavoipToken:i.wavoipToken||""};await this.settingsService.create(e,o);let n=null,r="";if(i.integration===N.WHATSAPP_BUSINESS){if(!i.number)throw new f("number is required");n=`${this.configService.get("SERVER").URL}/webhook/meta`,r=this.configService.get("WA_BUSINESS").TOKEN_WEBHOOK}if(!i.chatwootAccountId||!i.chatwootToken||!i.chatwootUrl){let c;return i.qrcode&&i.integration===N.WHATSAPP_BAILEYS&&(await e.connectToWhatsapp(i.number),await Ar(5e3),c=e.qrCode),{instance:{instanceName:e.instanceName,instanceId:t,integration:i.integration,webhookWaBusiness:n,accessTokenWaBusiness:r,status:e.connectionStatus.state},hash:s,webhook:{webhookUrl:i?.webhook?.url,webhookHeaders:i?.webhook?.headers,webhookByEvents:i?.webhook?.byEvents,webhookBase64:i?.webhook?.base64},websocket:{enabled:i?.websocket?.enabled},rabbitmq:{enabled:i?.rabbitmq?.enabled},sqs:{enabled:i?.sqs?.enabled},settings:o,qrcode:c}}if(!this.configService.get("CHATWOOT").ENABLED)throw new f("Chatwoot is not enabled");if(!i.chatwootAccountId)throw new f("accountId is required");if(!i.chatwootToken)throw new f("token is required");if(!i.chatwootUrl)throw new f("url is required");if(!iu(i.chatwootUrl,{require_tld:!1}))throw new f('Invalid "url" property in chatwoot');if(i.chatwootSignMsg!==!0&&i.chatwootSignMsg!==!1)throw new f("signMsg is required");if(i.chatwootReopenConversation!==!0&&i.chatwootReopenConversation!==!1)throw new f("reopenConversation is required");if(i.chatwootConversationPending!==!0&&i.chatwootConversationPending!==!1)throw new f("conversationPending is required");let a=this.configService.get("SERVER").URL;try{this.chatwootService.create(e,{enabled:!0,accountId:i.chatwootAccountId,token:i.chatwootToken,url:i.chatwootUrl,signMsg:i.chatwootSignMsg||!1,nameInbox:i.chatwootNameInbox??e.instanceName.split("-cwId-")[0],number:i.number,reopenConversation:i.chatwootReopenConversation||!1,conversationPending:i.chatwootConversationPending||!1,importContacts:i.chatwootImportContacts??!0,mergeBrazilContacts:i.chatwootMergeBrazilContacts??!1,importMessages:i.chatwootImportMessages??!0,daysLimitImportMessages:i.chatwootDaysLimitImportMessages??60,organization:i.chatwootOrganization,logo:i.chatwootLogo,autoCreate:i.chatwootAutoCreate!==!1})}catch(c){this.logger.log(c)}return{instance:{instanceName:e.instanceName,instanceId:t,integration:i.integration,webhookWaBusiness:n,accessTokenWaBusiness:r,status:e.connectionStatus.state},hash:s,webhook:{webhookUrl:i?.webhook?.url,webhookHeaders:i?.webhook?.headers,webhookByEvents:i?.webhook?.byEvents,webhookBase64:i?.webhook?.base64},websocket:{enabled:i?.websocket?.enabled},rabbitmq:{enabled:i?.rabbitmq?.enabled},sqs:{enabled:i?.sqs?.enabled},settings:o,chatwoot:{enabled:!0,accountId:i.chatwootAccountId,token:i.chatwootToken,url:i.chatwootUrl,signMsg:i.chatwootSignMsg||!1,reopenConversation:i.chatwootReopenConversation||!1,conversationPending:i.chatwootConversationPending||!1,mergeBrazilContacts:i.chatwootMergeBrazilContacts??!1,importContacts:i.chatwootImportContacts??!0,importMessages:i.chatwootImportMessages??!0,daysLimitImportMessages:i.chatwootDaysLimitImportMessages||60,number:i.number,nameInbox:i.chatwootNameInbox??e.instanceName,webhookUrl:`${a}/chatwoot/webhook/${encodeURIComponent(e.instanceName)}`}}}catch(e){throw this.waMonitor.deleteInstance(i.instanceName),this.logger.error(Rr(e.message)?e.message[0]:e.message),new f(Rr(e.message)?e.message[0]:e.message)}}async connectToWhatsapp({instanceName:i,number:e=null}){try{let t=this.waMonitor.waInstances[i],s=t?.connectionStatus?.state;if(!s)throw new f('The "'+i+'" instance does not exist');return s=="open"?await this.connectionState({instanceName:i}):s=="connecting"?t.qrCode:s=="close"?(await t.connectToWhatsapp(e),await Ar(2e3),t.qrCode):{instance:{instanceName:i,status:s},qrcode:t?.qrCode}}catch(t){return this.logger.error(t),{error:!0,message:t.toString()}}}async restartInstance({instanceName:i}){try{let e=this.waMonitor.waInstances[i],t=e?.connectionStatus?.state;if(!t)throw new f('The "'+i+'" instance does not exist');if(t=="close")throw new f('The "'+i+'" instance is not connected');if(t=="open")return this.configService.get("CHATWOOT").ENABLED&&e.clearCacheChatwoot(),this.logger.info("restarting instance"+i),e.client?.ws?.close(),e.client?.end(new Error("restart")),await this.connectToWhatsapp({instanceName:i});if(t=="connecting")return e.client?.ws?.close(),e.client?.end(new Error("restart")),await this.connectToWhatsapp({instanceName:i})}catch(e){return this.logger.error(e),{error:!0,message:e.toString()}}}async connectionState({instanceName:i}){return{instance:{instanceName:i,state:this.waMonitor.waInstances[i]?.connectionStatus?.state}}}async fetchInstances({instanceName:i,instanceId:e,number:t},s){if(this.configService.get("AUTHENTICATION").API_KEY.KEY!==s){let r=await this.prismaRepository.instance.findMany({where:{token:s,name:i||void 0,id:e||void 0}});if(r.length>0){let a=r.map(c=>c.name);return this.waMonitor.instanceInfo(a)}else throw new et}if(e||t)return this.waMonitor.instanceInfoById(e,t);let n=i?[i]:null;return this.waMonitor.instanceInfo(n)}async setPresence({instanceName:i},e){return await this.waMonitor.waInstances[i].setPresence(e)}async logout({instanceName:i}){let{instance:e}=await this.connectionState({instanceName:i});if(e.state==="close")throw new f('The "'+i+'" instance is not connected');try{return this.waMonitor.waInstances[i]?.logoutInstance(),{status:"SUCCESS",error:!1,response:{message:"Instance logged out"}}}catch(t){throw new U(t.toString())}}async deleteInstance({instanceName:i}){let{instance:e}=await this.connectionState({instanceName:i});try{let t=this.waMonitor.waInstances[i];this.configService.get("CHATWOOT").ENABLED&&t?.clearCacheChatwoot(),(e.state==="connecting"||e.state==="open")&&await this.logout({instanceName:i});try{t?.sendDataWebhook("instance.delete",{instanceName:i,instanceId:t.instanceId})}catch(s){this.logger.error(s)}return this.eventEmitter.emit("remove.instance",i,"inner"),{status:"SUCCESS",error:!1,response:{message:"Instance deleted"}}}catch(t){throw new f(t.toString())}}}});var cs,Dr=b(()=>{cs=class{constructor(i){this.waMonitor=i}async fetchLabels({instanceName:i}){return await this.waMonitor.waInstances[i].fetchLabels()}async handleLabel({instanceName:i},e){return await this.waMonitor.waInstances[i].handleLabel(e)}}});import{HttpsProxyAgent as xr}from"https-proxy-agent";function Pe(p){if(typeof p=="string")return new xr(p);let{host:i,password:e,port:t,protocol:s,username:o}=p,n=`${s}://${i}:${t}`;return o&&e&&(n=`${s}://${o}:${e}@${i}:${t}`),new xr(n)}var jn=b(()=>{});import ps from"axios";var Kn,ls,Or=b(()=>{_();ne();jn();Kn=new A("ProxyController"),ls=class{constructor(i,e){this.proxyService=i;this.waMonitor=e}async createProxy(i,e){if(!this.waMonitor.waInstances[i.instanceName])throw new H(`The "${i.instanceName}" instance does not exist`);if(e?.enabled||(e.host="",e.port="",e.protocol="",e.username="",e.password=""),e.host&&!await this.testProxy(e))throw new f("Invalid proxy");return this.proxyService.create(i,e)}async findProxy(i){if(!this.waMonitor.waInstances[i.instanceName])throw new H(`The "${i.instanceName}" instance does not exist`);return this.proxyService.find(i)}async testProxy(i){try{let e=await ps.get("https://icanhazip.com/");return(await ps.get("https://icanhazip.com/",{httpsAgent:Pe(i)}))?.data!==e?.data}catch(e){return ps.isAxiosError(e)&&e.response?.data?Kn.error("testProxy error: "+e.response.data):(ps.isAxiosError(e),Kn.error("testProxy error: ")),!1}}}});import{isBase64 as Mt,isURL as us}from"class-validator";var ds,Nr=b(()=>{ne();ds=class{constructor(i){this.waMonitor=i}async sendTemplate({instanceName:i},e){return await this.waMonitor.waInstances[i].templateMessage(e)}async sendText({instanceName:i},e){return await this.waMonitor.waInstances[i].textMessage(e)}async sendMedia({instanceName:i},e,t){if(Mt(e?.media)&&!e?.fileName&&e?.mediatype==="document")throw new f("For base64 the file name must be informed.");if(t||us(e?.media)||Mt(e?.media))return await this.waMonitor.waInstances[i].mediaMessage(e,t);throw new f("Owned media must be a url or base64")}async sendPtv({instanceName:i},e,t){if(t||us(e?.video)||Mt(e?.video))return await this.waMonitor.waInstances[i].ptvMessage(e,t);throw new f("Owned media must be a url or base64")}async sendSticker({instanceName:i},e,t){if(t||us(e.sticker)||Mt(e.sticker))return await this.waMonitor.waInstances[i].mediaSticker(e,t);throw new f("Owned media must be a url or base64")}async sendWhatsAppAudio({instanceName:i},e,t){if(t?.buffer||us(e.audio)||Mt(e.audio))return await this.waMonitor.waInstances[i].audioWhatsapp(e,t);throw console.error("El archivo no tiene buffer o el audio no es una URL o Base64 v\xE1lida"),new f("Owned media must be a url, base64, or valid file with buffer")}async sendButtons({instanceName:i},e){return await this.waMonitor.waInstances[i].buttonMessage(e)}async sendLocation({instanceName:i},e){return await this.waMonitor.waInstances[i].locationMessage(e)}async sendList({instanceName:i},e){return await this.waMonitor.waInstances[i].listMessage(e)}async sendContact({instanceName:i},e){return await this.waMonitor.waInstances[i].contactMessage(e)}async sendReaction({instanceName:i},e){if(!e.reaction.match(/[^()\w\sà-ú"-+]+/))throw new f('"reaction" must be an emoji');return await this.waMonitor.waInstances[i].reactionMessage(e)}async sendPoll({instanceName:i},e){return await this.waMonitor.waInstances[i].pollMessage(e)}async sendStatus({instanceName:i},e,t){return await this.waMonitor.waInstances[i].statusMessage(e,t)}}});var gs,kr=b(()=>{gs=class{constructor(i){this.settingsService=i}async createSettings(i,e){return this.settingsService.create(i,e)}async findSettings(i){return this.settingsService.find(i)}}});var ms,_r=b(()=>{ms=class{constructor(i){this.templateService=i}async createTemplate(i,e){return this.templateService.create(i,e)}async findTemplate(i){return this.templateService.find(i)}}});import*as Br from"minio";import{join as Lr}from"path";var hs,st,De,Ge,nu,ou,ru,it,Ue,Tt=b(()=>{Z();_();ne();hs=new A("S3 Service"),st=new Xe().get("S3"),De=(()=>{if(st?.ENABLE)return new Br.Client({endPoint:st.ENDPOINT,port:st.PORT,useSSL:st.USE_SSL,accessKey:st.ACCESS_KEY,secretKey:st.SECRET_KEY,region:st.REGION})})(),Ge=process.env.S3_BUCKET,nu=async()=>{if(De)try{return(await De.listBuckets()).find(i=>i.name===Ge)}catch{return!1}},ou=async()=>{if(De){let p={Version:"2012-10-17",Statement:[{Effect:"Allow",Principal:"*",Action:["s3:GetObject"],Resource:[`arn:aws:s3:::${Ge}/*`]}]};await De.setBucketPolicy(Ge,JSON.stringify(p))}},ru=async()=>{if(De)try{return await nu()||await De.makeBucket(Ge),await ou(),hs.info(`S3 Bucket ${Ge} - ON`),!0}catch(p){return hs.error("S3 ERROR:"),hs.error(p),!1}};ru();it=async(p,i,e,t)=>{if(De){let s=Lr("evolution-api",p);try{return t["custom-header-application"]="evolution-api",await De.putObject(Ge,s,i,e,t)}catch(o){return hs.error(o),o}}},Ue=async(p,i)=>{if(De)try{let e=Lr("evolution-api",p);return i?await De.presignedGetObject(Ge,e,i):await De.presignedGetObject(Ge,e)}catch(e){throw new f(e?.message)}}});import au from"pg";var cu,Qn,ke,zn=b(()=>{Z();_();({Pool:cu}=au),Qn=class{constructor(){this.logger=new A("Postgres");this.connected=!1}getConnection(i){if(this.connected)return this.pool;this.pool=new cu({connectionString:i,ssl:{rejectUnauthorized:!1}}),this.pool.on("error",()=>{this.logger.error("postgres disconnected"),this.connected=!1});try{this.connected=!0}catch(e){return this.connected=!1,this.logger.error("postgres connect exception caught: "+e),null}return this.pool}getChatwootConnection(){let i=C.get("CHATWOOT").IMPORT.DATABASE.CONNECTION.URI;return this.getConnection(i)}},ke=new Qn});var Xn,pe,Zn=b(()=>{zn();Z();_();Xn=class{constructor(){this.logger=new A("ChatwootImport");this.repositoryMessagesCache=new Map;this.historyMessages=new Map;this.historyContacts=new Map}getRepositoryMessagesCache(i){return this.repositoryMessagesCache.has(i.instanceName)?this.repositoryMessagesCache.get(i.instanceName):null}setRepositoryMessagesCache(i,e){this.repositoryMessagesCache.set(i.instanceName,e)}deleteRepositoryMessagesCache(i){this.repositoryMessagesCache.delete(i.instanceName)}addHistoryMessages(i,e){let t=this.historyMessages.has(i.instanceName)?this.historyMessages.get(i.instanceName):[];this.historyMessages.set(i.instanceName,[...t,...e])}addHistoryContacts(i,e){let t=this.historyContacts.has(i.instanceName)?this.historyContacts.get(i.instanceName):[];this.historyContacts.set(i.instanceName,t.concat(e))}deleteHistoryMessages(i){this.historyMessages.delete(i.instanceName)}deleteHistoryContacts(i){this.historyContacts.delete(i.instanceName)}clearAll(i){this.deleteRepositoryMessagesCache(i),this.deleteHistoryMessages(i),this.deleteHistoryContacts(i)}getHistoryMessagesLenght(i){return this.historyMessages.get(i.instanceName)?.length??0}async importHistoryContacts(i,e){try{if(this.getHistoryMessagesLenght(i)>0)return;let t=ke.getChatwootConnection(),s=0,o=this.historyContacts.get(i.instanceName)||[];if(o.length===0)return 0;let n=this.sliceIntoChunks(o,3e3);for(;n.length>0;){let r=`SELECT id FROM labels WHERE title = '${e.nameInbox}' AND account_id = ${e.accountId} LIMIT 1`,a=(await t.query(r))?.rows[0]?.id;if(!a){let y=`INSERT INTO labels (title, color, show_on_sidebar, account_id, created_at, updated_at) VALUES ('${e.nameInbox}', '#34039B', true, ${e.accountId}, NOW(), NOW()) RETURNING id`;a=(await t.query(y))?.rows[0]?.id}let c=`INSERT INTO contacts
          (name, phone_number, account_id, identifier, created_at, updated_at) VALUES `,l=[e.accountId];for(let y of n){l.push(y.pushName);let w=`$${l.length}`;l.push(`+${y.remoteJid.split("@")[0]}`);let E=`$${l.length}`;l.push(y.remoteJid);let I=`$${l.length}`;c+=`(${w}, ${E}, $1, ${I}, NOW(), NOW()),`}c.slice(-1)===","&&(c=c.slice(0,-1)),c+=` ON CONFLICT (identifier, account_id)
                       DO UPDATE SET
                        name = EXCLUDED.name,
                        phone_number = EXCLUDED.phone_number,
                        identifier = EXCLUDED.identifier`,s+=(await t.query(c,l))?.rowCount??0;let d=`SELECT id FROM tags WHERE name = '${e.nameInbox}' LIMIT 1`,g=(await t.query(d))?.rows[0]?.id,m=`INSERT INTO tags (name, taggings_count) VALUES ('${e.nameInbox}', ${s}) ON CONFLICT (name) DO UPDATE SET taggings_count = tags.taggings_count + ${s} RETURNING id`;g=(await t.query(m))?.rows[0]?.id,await t.query(m);let h="INSERT INTO taggings (tag_id, taggable_type, taggable_id, context, created_at) VALUES ";n.forEach(y=>{let w=`(SELECT id FROM contacts WHERE identifier = '${y.remoteJid}' AND account_id = ${e.accountId})`;h+=`($1, $2, ${w}, $3, NOW()),`}),h.slice(-1)===","&&(h=h.slice(0,-1)),await t.query(h,[g,"Contact","labels"]),n=this.sliceIntoChunks(o,3e3)}return this.deleteHistoryContacts(i),s}catch(t){this.logger.error(`Error on import history contacts: ${t.toString()}`)}}async getExistingSourceIds(i){try{let e=new Set;if(i.length===0)return e;let t=i.map(r=>`WAID:${r.replace("WAID:","")}`),n=await ke.getChatwootConnection().query("SELECT source_id FROM messages WHERE source_id = ANY($1)",[t]);for(let r of n.rows)e.add(r.source_id);return e}catch{return null}}async importHistoryMessages(i,e,t,s){try{let o=ke.getChatwootConnection(),n=await this.getChatwootUser(s);if(!n)throw new Error("User not found to import messages.");let r=0,a=this.historyMessages.get(i.instanceName)||[];if(a.length===0)return 0;a.sort((h,y)=>{let w=h.key,E=y.key,I=h.messageTimestamp,M=y.messageTimestamp;return parseInt(w.remoteJid)-parseInt(E.remoteJid)||I-M});let c=this.createMessagesMapByPhoneNumber(a),l=new Map;c.forEach((h,y)=>{l.set(y,{first:h[0]?.messageTimestamp,last:h[h.length-1]?.messageTimestamp})});let d=await this.getExistingSourceIds(a.map(h=>h.key.id));a=a.filter(h=>!d.has(h.key.id));let u=4e3,g=this.sliceIntoChunks(a,u);for(;g.length>0;){let h=this.createMessagesMapByPhoneNumber(g);if(h.size>0){let y=await this.selectOrCreateFksFromChatwoot(s,t,l,h),w=`INSERT INTO messages
            (content, processed_message_content, account_id, inbox_id, conversation_id, message_type, private, content_type,
            sender_type, sender_id, source_id, created_at, updated_at) VALUES `,E=[s.accountId,t.id];h.forEach((I,M)=>{let S=y.get(M);I.forEach(v=>{if(!v.message||!S?.conversation_id||!S?.contact_id)return;let O=this.getContentMessage(e,v);if(!O)return;E.push(O);let k=`$${E.length}`;E.push(S.conversation_id);let D=`$${E.length}`;E.push(v.key.fromMe?"1":"0");let L=`$${E.length}`;E.push(v.key.fromMe?n.user_type:"Contact");let $=`$${E.length}`;E.push(v.key.fromMe?n.user_id:S.contact_id);let K=`$${E.length}`;E.push("WAID:"+v.key.id);let Q=`$${E.length}`;E.push(v.messageTimestamp);let G=`$${E.length}`;w+=`(${k}, ${k}, $1, $2, ${D}, ${L}, FALSE, 0,
                  ${$},${K},${Q}, to_timestamp(${G}), to_timestamp(${G})),`})}),E.length>2&&(w.slice(-1)===","&&(w=w.slice(0,-1)),r+=(await o.query(w,E))?.rowCount??0)}g=this.sliceIntoChunks(a,u)}this.deleteHistoryMessages(i),this.deleteRepositoryMessagesCache(i);let m={...s,ignoreJids:Array.isArray(s.ignoreJids)?s.ignoreJids.map(h=>String(h)):[]};return this.importHistoryContacts(i,m),r}catch(o){this.logger.error(`Error on import history messages: ${o.toString()}`),this.deleteHistoryMessages(i),this.deleteRepositoryMessagesCache(i)}}async selectOrCreateFksFromChatwoot(i,e,t,s){let o=ke.getChatwootConnection(),n=[i.accountId,e.id],a=`WITH
              phone_number AS (
                SELECT phone_number, created_at::INTEGER, last_activity_at::INTEGER FROM (
                  VALUES 
                   ${Array.from(s.keys()).map(l=>{let d=t.get(l);if(d){n.push(l);let u=`($${n.length},`;return n.push(d.first),u+=`$${n.length},`,n.push(d.last),`${u}$${n.length})`}}).join(",")}
                 ) as t (phone_number, created_at, last_activity_at)
              ),

              only_new_phone_number AS (
                SELECT * FROM phone_number
                WHERE phone_number NOT IN (
                  SELECT phone_number
                  FROM contacts
                    JOIN contact_inboxes ci ON ci.contact_id = contacts.id AND ci.inbox_id = $2
                    JOIN conversations con ON con.contact_inbox_id = ci.id 
                      AND con.account_id = $1
                      AND con.inbox_id = $2
                      AND con.contact_id = contacts.id
                  WHERE contacts.account_id = $1
                )
              ),

              new_contact AS (
                INSERT INTO contacts (name, phone_number, account_id, identifier, created_at, updated_at)
                SELECT REPLACE(p.phone_number, '+', ''), p.phone_number, $1, CONCAT(REPLACE(p.phone_number, '+', ''),
                  '@s.whatsapp.net'), to_timestamp(p.created_at), to_timestamp(p.last_activity_at)
                FROM only_new_phone_number AS p
                ON CONFLICT(identifier, account_id) DO UPDATE SET updated_at = EXCLUDED.updated_at
                RETURNING id, phone_number, created_at, updated_at
              ),

              new_contact_inbox AS (
                INSERT INTO contact_inboxes (contact_id, inbox_id, source_id, created_at, updated_at)
                SELECT new_contact.id, $2, gen_random_uuid(), new_contact.created_at, new_contact.updated_at
                FROM new_contact 
                RETURNING id, contact_id, created_at, updated_at
              ),

              new_conversation AS (
                INSERT INTO conversations (account_id, inbox_id, status, contact_id,
                  contact_inbox_id, uuid, last_activity_at, created_at, updated_at)
                SELECT $1, $2, 0, new_contact_inbox.contact_id, new_contact_inbox.id, gen_random_uuid(),
                  new_contact_inbox.updated_at, new_contact_inbox.created_at, new_contact_inbox.updated_at
                FROM new_contact_inbox
                RETURNING id, contact_id
              )

              SELECT new_contact.phone_number, new_conversation.contact_id, new_conversation.id AS conversation_id
              FROM new_conversation 
              JOIN new_contact ON new_conversation.contact_id = new_contact.id

              UNION

              SELECT p.phone_number, c.id contact_id, con.id conversation_id
                FROM phone_number p
              JOIN contacts c ON c.phone_number = p.phone_number
              JOIN contact_inboxes ci ON ci.contact_id = c.id AND ci.inbox_id = $2
              JOIN conversations con ON con.contact_inbox_id = ci.id AND con.account_id = $1
                AND con.inbox_id = $2 AND con.contact_id = c.id`,c=await o.query(a,n);return new Map(c.rows.map(l=>[l.phone_number,l]))}async getChatwootUser(i){try{return(await ke.getChatwootConnection().query(`SELECT owner_type AS user_type, owner_id AS user_id
                         FROM access_tokens
                       WHERE token = $1`,[i.token]))?.rows[0]||!1}catch(e){this.logger.error(`Error on getChatwootUser: ${e.toString()}`)}}createMessagesMapByPhoneNumber(i){return i.reduce((e,t)=>{let s=t?.key;if(!this.isIgnorePhoneNumber(s?.remoteJid)){let o=s?.remoteJid?.split("@")[0];if(o){let n=`+${o}`,r=e.has(n)?e.get(n):[];r.push(t),e.set(n,r)}}return e},new Map)}async getContactsOrderByRecentConversations(i,e,t=50){try{return(await ke.getChatwootConnection().query(`SELECT contacts.id, contacts.identifier, contacts.phone_number
                     FROM conversations
                   JOIN contacts ON contacts.id = conversations.contact_id
                   WHERE conversations.account_id = $1
                     AND inbox_id = $2
                   ORDER BY conversations.last_activity_at DESC
                   LIMIT $3`,[e.accountId,i.id,t]))?.rows}catch(s){this.logger.error(`Error on get recent conversations: ${s.toString()}`)}}getContentMessage(i,e){let t=i.getConversationMessage(e.message);if(t)return t;if(!C.get("CHATWOOT").IMPORT.PLACEHOLDER_MEDIA_MESSAGE)return"";let s={documentMessage:e.message.documentMessage,documentWithCaptionMessage:e.message.documentWithCaptionMessage?.message?.documentMessage,imageMessage:e.message.imageMessage,videoMessage:e.message.videoMessage,audioMessage:e.message.audioMessage,stickerMessage:e.message.stickerMessage,templateMessage:e.message.templateMessage?.hydratedTemplate?.hydratedContentText};switch(Object.keys(s).find(n=>s[n]!==void 0)){case"documentMessage":return`_<File: ${e.message.documentMessage.fileName}${e.message.documentMessage.caption?` ${e.message.documentMessage.caption}`:""}>_`;case"documentWithCaptionMessage":return`_<File: ${e.message.documentWithCaptionMessage.message.documentMessage.fileName}${e.message.documentWithCaptionMessage.message.documentMessage.caption?` ${e.message.documentWithCaptionMessage.message.documentMessage.caption}`:""}>_`;case"templateMessage":return e.message.templateMessage.hydratedTemplate.hydratedTitleText?`*${e.message.templateMessage.hydratedTemplate.hydratedTitleText}*\\n`:""+e.message.templateMessage.hydratedTemplate.hydratedContentText;case"imageMessage":return"_<Image Message>_";case"videoMessage":return"_<Video Message>_";case"audioMessage":return"_<Audio Message>_";case"stickerMessage":return"_<Sticker Message>_";default:return""}}sliceIntoChunks(i,e){return i.splice(0,e)}isGroup(i){return i.includes("@g.us")}isIgnorePhoneNumber(i){return this.isGroup(i)||i==="status@broadcast"||i==="0@s.whatsapp.net"}updateMessageSourceID(i,e){return ke.getChatwootConnection().query("UPDATE messages SET source_id = $1, status = 0, created_at = NOW(), updated_at = NOW() WHERE id = $2;",[`WAID:${e}`,i])}},pe=new Xn});import pu from"fs";import Fr from"i18next";import Ur from"path";var lu,uu,du,Jr,W,Wr=b(()=>{Z();lu=["en","pt-BR","es"],uu=Ur.join(__dirname,"translations"),du=new Xe,Jr={};lu.forEach(p=>{let i=Ur.join(uu,`${p}.json`);pu.existsSync(i)&&(Jr[p]={translation:Vo(i)})});Fr.init({resources:Jr,fallbackLng:"en",lng:du.get("LANGUAGE"),debug:!1,interpolation:{escapeValue:!1}});W=Fr});import gu from"axios";import mu from"fs";var hu,V,je=b(()=>{hu=JSON.parse(mu.readFileSync("./package.json","utf8")),V=async p=>{if(!(process.env.TELEMETRY_ENABLED===void 0||process.env.TELEMETRY_ENABLED==="true")||p==="/")return;let e={route:p,apiVersion:`${hu.version}`,timestamp:new Date},t=process.env.TELEMETRY_URL&&process.env.TELEMETRY_URL!==""?process.env.TELEMETRY_URL:"https://log.evolution-api.com/telemetry";gu.post(t,e).then(()=>{}).catch(()=>{})}});import fu from"@figuro/chatwoot-sdk";import{request as eo}from"@figuro/chatwoot-sdk/dist/core/request";import fs from"axios";import yu from"dayjs";import $r from"form-data";import qr from"jimp";import Hr from"long";import Ct from"mime-types";import Vr from"path";import{Readable as to}from"stream";var _e,ys=b(()=>{zn();Zn();ge();_();Wr();je();_e=class{constructor(i,e,t,s){this.waMonitor=i;this.configService=e;this.prismaRepository=t;this.cache=s;this.logger=new A("ChatwootService");this.pgClient=ke.getChatwootConnection()}async getProvider(i){let e=`${i.instanceName}:getProvider`;if(await this.cache.has(e))return await this.cache.get(e);let t=await this.waMonitor.waInstances[i.instanceName]?.findChatwoot();return t?(this.cache.set(e,t),t):(this.logger.warn("provider not found"),null)}async clientCw(i){let e=await this.getProvider(i);return e?(this.provider=e,new fu({config:this.getClientCwConfig()})):(this.logger.error("provider not found"),null)}getClientCwConfig(){return{basePath:this.provider.url,with_credentials:!0,credentials:"include",token:this.provider.token,nameInbox:this.provider.nameInbox,mergeBrazilContacts:this.provider.mergeBrazilContacts}}getCache(){return this.cache}async create(i,e){if(await this.waMonitor.waInstances[i.instanceName].setChatwoot(e),e.autoCreate){this.logger.log("Auto create chatwoot instance");let t=this.configService.get("SERVER").URL;await this.initInstanceChatwoot(i,e.nameInbox??i.instanceName.split("-cwId-")[0],`${t}/chatwoot/webhook/${encodeURIComponent(i.instanceName)}`,!0,e.number,e.organization,e.logo)}return e}async find(i){try{return await this.waMonitor.waInstances[i.instanceName].findChatwoot()}catch{return this.logger.error("chatwoot not found"),{enabled:null,url:""}}}async getContact(i,e){let t=await this.clientCw(i);if(!t)return this.logger.warn("client not found"),null;if(!e)return this.logger.warn("id is required"),null;let s=await t.contact.getContactable({accountId:this.provider.accountId,id:e});return s||(this.logger.warn("contact not found"),null)}async initInstanceChatwoot(i,e,t,s,o,n,r){let a=await this.clientCw(i);if(!a)return this.logger.warn("client not found"),null;let c=await a.inboxes.list({accountId:this.provider.accountId}),l=c.payload.map(m=>m.name).includes(e),d;if(this.logger.log("Creating chatwoot inbox"),l){let m=c.payload.find(h=>h.name===e);if(!m)return this.logger.warn("inbox not found"),null;d=m.id}else{let m={type:"api",webhook_url:t},h=await a.inboxes.create({accountId:this.provider.accountId,data:{name:e,channel:m}});if(!h)return this.logger.warn("inbox not found"),null;d=h.id}if(this.logger.log(`Inbox created - inboxId: ${d}`),!this.configService.get("CHATWOOT").BOT_CONTACT)return this.logger.log("Chatwoot bot contact is disabled"),!0;this.logger.log("Creating chatwoot bot contact");let u=await this.findContact(i,"123456")||await this.createContact(i,"123456",d,!1,n||"EvolutionAPI",r||"https://evolution-api.com/files/evolution-api-favicon.png");if(!u)return this.logger.warn("contact not found"),null;let g=u.id||u.payload.contact.id;if(this.logger.log(`Contact created - contactId: ${g}`),s){this.logger.log("QR code enabled");let m={contact_id:g.toString(),inbox_id:d.toString()},h=await a.conversations.create({accountId:this.provider.accountId,data:m});if(!h)return this.logger.warn("conversation not found"),null;let y="init";if(o&&(y=`init:${o}`),!await a.messages.create({accountId:this.provider.accountId,conversationId:h.id,data:{content:y,message_type:"outgoing"}}))return this.logger.warn("conversation not found"),null;this.logger.log("Init message sent")}return!0}async createContact(i,e,t,s,o,n,r){let a=await this.clientCw(i);if(!a)return this.logger.warn("client not found"),null;let c={};s?c={inbox_id:t,name:o||e,identifier:e,avatar_url:n}:(c={inbox_id:t,name:o||e,identifier:r,avatar_url:n},(r&&r.includes("@")||!r)&&(c.phone_number=`+${e}`));let l=await a.contacts.create({accountId:this.provider.accountId,data:c});if(!l)return this.logger.warn("contact not found"),null;let u=(await this.findContact(i,e))?.id;return await this.addLabelToContact(this.provider.nameInbox,u),l}async updateContact(i,e,t){let s=await this.clientCw(i);if(!s)return this.logger.warn("client not found"),null;if(!e)return this.logger.warn("id is required"),null;try{return await s.contacts.update({accountId:this.provider.accountId,id:e,data:t})}catch{return null}}async addLabelToContact(i,e){try{if(!this.configService.get("CHATWOOT").IMPORT.DATABASE.CONNECTION.URI)return!1;let o=(await this.pgClient.query("SELECT id, taggings_count FROM tags WHERE name = $1 LIMIT 1",[i]))?.rows[0],n=o?.id,r=o?.taggings_count||0;return n=(await this.pgClient.query(`INSERT INTO tags (name, taggings_count) 
                      VALUES ($1, $2) 
                      ON CONFLICT (name) 
                      DO UPDATE SET taggings_count = tags.taggings_count + 1 
                      RETURNING id`,[i,r+1]))?.rows[0]?.id,(await this.pgClient.query(`SELECT 1 FROM taggings 
                               WHERE tag_id = $1 AND taggable_type = 'Contact' AND taggable_id = $2 AND context = 'labels' LIMIT 1`,[n,e]))?.rowCount>0||await this.pgClient.query(`INSERT INTO taggings (tag_id, taggable_type, taggable_id, context, created_at) 
                                VALUES ($1, 'Contact', $2, 'labels', NOW())`,[n,e]),!0}catch{return!1}}async findContact(i,e){let t=await this.clientCw(i);if(!t)return this.logger.warn("client not found"),null;let s,o=e.includes("@g.us");o?s=e:s=`+${e}`;let n;return o?n=await t.contacts.search({accountId:this.provider.accountId,q:s}):n=await eo(this.getClientCwConfig(),{method:"POST",url:`/api/v1/accounts/${this.provider.accountId}/contacts/filter`,body:{payload:this.getFilterPayload(s)}}),!n&&n?.payload?.length===0?(this.logger.warn("contact not found"),null):o?n.payload.find(r=>r.identifier===s):n.payload.length>1?this.findContactInContactList(n.payload,s):n.payload[0]}async mergeBrazilianContacts(i){try{return await eo(this.getClientCwConfig(),{method:"POST",url:`/api/v1/accounts/${this.provider.accountId}/actions/contact_merge`,body:{base_contact_id:i.find(t=>t.phone_number.length===14)?.id,mergee_contact_id:i.find(t=>t.phone_number.length===13)?.id}})}catch{return this.logger.error("Error merging contacts"),null}}findContactInContactList(i,e){let t=this.getNumbers(e),s=this.getSearchableFields();if(i.length===2&&this.getClientCwConfig().mergeBrazilContacts&&e.startsWith("+55")){let r=this.mergeBrazilianContacts(i);if(r)return r}let o=t.reduce((r,a)=>a.length>r.length?a:r,""),n=i.find(r=>r.phone_number===o);if(n)return n;for(let r of i)for(let a of s)if(r[a]&&t.includes(r[a]))return r;return null}getNumbers(i){let e=[];if(e.push(i),i.startsWith("+55")&&i.length===14){let t=i.slice(0,5)+i.slice(6);e.push(t)}else if(i.startsWith("+55")&&i.length===13){let t=i.slice(0,5)+"9"+i.slice(5);e.push(t)}return e}getSearchableFields(){return["phone_number"]}getFilterPayload(i){let e=[],t=this.getNumbers(i),s=this.getSearchableFields();return s.forEach((o,n)=>{t.forEach((r,a)=>{let c=s.length-1===n&&t.length-1===a?null:"OR";e.push({attribute_key:o,filter_operator:"equal_to",values:[r.replace("+","")],query_operator:c})})}),e}async createConversation(i,e){try{this.logger.verbose("--- Start createConversation ---"),this.logger.verbose(`Instance: ${JSON.stringify(i)}`);let t=await this.clientCw(i);if(!t)return this.logger.warn(`Client not found for instance: ${JSON.stringify(i)}`),null;let s=`${i.instanceName}:createConversation-${e.key.remoteJid}`;if(this.logger.verbose(`Cache key: ${s}`),await this.cache.has(s)){this.logger.verbose(`Cache hit for key: ${s}`);let h=await this.cache.get(s);this.logger.verbose(`Cached conversation ID: ${h}`);let y;try{y=await t.conversations.get({accountId:this.provider.accountId,conversationId:h}),this.logger.verbose(`Conversation exists: ${JSON.stringify(y)}`)}catch(w){this.logger.error(`Error getting conversation: ${w}`),y=!1}return y?h:(this.logger.verbose("Conversation does not exist, re-calling createConversation"),this.cache.delete(s),await this.createConversation(i,e))}let o=e.key.remoteJid.includes("@g.us");this.logger.verbose(`Is group: ${o}`);let n=o?e.key.remoteJid:e.key.remoteJid.split("@")[0];this.logger.verbose(`Chat ID: ${n}`);let r;r=e.key.fromMe?n:e.pushName,this.logger.verbose(`Name contact: ${r}`);let a=await this.getInbox(i);if(!a)return this.logger.warn(`Inbox not found for instance: ${JSON.stringify(i)}`),null;if(o){this.logger.verbose("Processing group conversation");let h=await this.waMonitor.waInstances[i.instanceName].client.groupMetadata(n);this.logger.verbose(`Group metadata: ${JSON.stringify(h)}`),r=`${h.subject} (GROUP)`;let y=await this.waMonitor.waInstances[i.instanceName].profilePicture(e.key.participant.split("@")[0]);this.logger.verbose(`Participant profile picture URL: ${JSON.stringify(y)}`);let w=await this.findContact(i,e.key.participant.split("@")[0]);this.logger.verbose(`Found participant: ${JSON.stringify(w)}`),w?(!w.name||w.name===n)&&await this.updateContact(i,w.id,{name:e.pushName,avatar_url:y.profilePictureUrl||null}):await this.createContact(i,e.key.participant.split("@")[0],a.id,!1,e.pushName,y.profilePictureUrl||null,e.key.participant)}let c=await this.waMonitor.waInstances[i.instanceName].profilePicture(n);this.logger.verbose(`Contact profile picture URL: ${JSON.stringify(c)}`);let l=await this.findContact(i,n);if(this.logger.verbose(`Found contact: ${JSON.stringify(l)}`),l){if(!e.key.fromMe){let h=c?.profilePictureUrl?.split("#")[0].split("?")[0].split("/").pop()||"",y=l?.thumbnail?.split("#")[0].split("?")[0].split("/").pop()||"",w=h!==y,E=!l.name||l.name===n||(`+${n}`.startsWith("+55")?this.getNumbers(`+${n}`).some(I=>l.name===I||l.name===I.substring(3)||l.name===I.substring(1)):!1);this.logger.verbose(`Picture needs update: ${w}`),this.logger.verbose(`Name needs update: ${E}`),(w||E)&&(l=await this.updateContact(i,l.id,{...E&&{name:r},...h===""&&{avatar:null},...w&&{avatar_url:c?.profilePictureUrl}}))}}else{let h=e.key.remoteJid;l=await this.createContact(i,n,a.id,o,r,c.profilePictureUrl||null,h)}if(!l)return this.logger.warn("Contact not created or found"),null;let d=l?.payload?.id||l?.payload?.contact?.id||l?.id;this.logger.verbose(`Contact ID: ${d}`);let u=await t.contacts.listConversations({accountId:this.provider.accountId,id:d});if(this.logger.verbose(`Contact conversations: ${JSON.stringify(u)}`),!u||!u.payload)return this.logger.error("No conversations found or payload is undefined"),null;if(u.payload.length){let h;if(this.provider.reopenConversation?(h=u.payload.find(y=>y.inbox_id==a.id),this.logger.verbose(`Found conversation in reopenConversation mode: ${JSON.stringify(h)}`),this.provider.conversationPending&&h.status!=="open"&&h&&await t.conversations.toggleStatus({accountId:this.provider.accountId,conversationId:h.id,data:{status:"pending"}})):(h=u.payload.find(y=>y.status!=="resolved"&&y.inbox_id==a.id),this.logger.verbose(`Found conversation: ${JSON.stringify(h)}`)),h)return this.logger.verbose(`Returning existing conversation ID: ${h.id}`),this.cache.set(s,h.id),h.id}let g={contact_id:d.toString(),inbox_id:a.id.toString()};this.provider.conversationPending&&(g.status="pending");let m=await t.conversations.create({accountId:this.provider.accountId,data:g});return m?(this.logger.verbose(`New conversation created with ID: ${m.id}`),this.cache.set(s,m.id),m.id):(this.logger.warn("Conversation not created or found"),null)}catch(t){this.logger.error(`Error in createConversation: ${t}`)}}async getInbox(i){let e=`${i.instanceName}:getInbox`;if(await this.cache.has(e))return await this.cache.get(e);let t=await this.clientCw(i);if(!t)return this.logger.warn("client not found"),null;let s=await t.inboxes.list({accountId:this.provider.accountId});if(!s)return this.logger.warn("inbox not found"),null;let o=s.payload.find(n=>n.name===this.getClientCwConfig().nameInbox);return o?(this.cache.set(e,o),o):(this.logger.warn("inbox not found"),null)}async createMessage(i,e,t,s,o,n,r,a,c){let l=await this.clientCw(i);if(!l)return this.logger.warn("client not found"),null;let d=await this.getReplyToIds(r,i),u=c?.chatwootMessageId||null,g=await l.messages.create({accountId:this.provider.accountId,conversationId:e,data:{content:t,message_type:s,attachments:n,private:o||!1,source_id:a,content_attributes:{...d},source_reply_id:u?u.toString():null}});return g||(this.logger.warn("message not found"),null)}async getOpenConversationByContact(i,e,t){let s=await this.clientCw(i);return s?(await s.contacts.listConversations({accountId:this.provider.accountId,id:t.id})).payload.find(n=>n.inbox_id===e.id&&n.status==="open")||void 0:(this.logger.warn("client not found"),null)}async createBotMessage(i,e,t,s){let o=await this.clientCw(i);if(!o)return this.logger.warn("client not found"),null;let n=await this.findContact(i,"123456");if(!n)return this.logger.warn("contact not found"),null;let r=await this.getInbox(i);if(!r)return this.logger.warn("inbox not found"),null;let a=await this.getOpenConversationByContact(i,r,n);if(!a){this.logger.warn("conversation not found");return}let c=await o.messages.create({accountId:this.provider.accountId,conversationId:a.id,data:{content:e,message_type:t,attachments:s}});return c||(this.logger.warn("message not found"),null)}async sendData(i,e,t,s,o,n,r,a,c){if(a&&this.isImportHistoryAvailable()){let g=await pe.getExistingSourceIds([a]);if(g&&g.size>0)return this.logger.warn("Message already saved on chatwoot"),null}let l=new $r;o&&l.append("content",o),l.append("message_type",s),l.append("attachments[]",e,{filename:t});let d=c?.chatwootMessageId||null;if(r&&n){let g=await this.getReplyToIds(r,n);if(g.in_reply_to||g.in_reply_to_external_id){let m=JSON.stringify({...g});l.append("content_attributes",m)}}d&&l.append("source_reply_id",d.toString()),a&&l.append("source_id",a);let u={method:"post",maxBodyLength:1/0,url:`${this.provider.url}/api/v1/accounts/${this.provider.accountId}/conversations/${i}/messages`,headers:{api_access_token:this.provider.token,...l.getHeaders()},data:l};try{let{data:g}=await fs.request(u);return g}catch(g){this.logger.error(g)}}async createBotQr(i,e,t,s,o){if(!await this.clientCw(i))return this.logger.warn("client not found"),null;if(!this.configService.get("CHATWOOT").BOT_CONTACT)return this.logger.log("Chatwoot bot contact is disabled"),!0;let r=await this.findContact(i,"123456");if(!r)return this.logger.warn("contact not found"),null;let a=await this.getInbox(i);if(!a)return this.logger.warn("inbox not found"),null;let c=await this.getOpenConversationByContact(i,a,r);if(!c){this.logger.warn("conversation not found");return}let l=new $r;e&&l.append("content",e),l.append("message_type",t),s&&o&&l.append("attachments[]",s,{filename:o});let d={method:"post",maxBodyLength:1/0,url:`${this.provider.url}/api/v1/accounts/${this.provider.accountId}/conversations/${c.id}/messages`,headers:{api_access_token:this.provider.token,...l.getHeaders()},data:l};try{let{data:u}=await fs.request(d);return u}catch(u){this.logger.error(u)}}async sendAttachment(i,e,t,s,o){try{let n=Vr.parse(decodeURIComponent(t)),r=Ct.lookup(n?.ext)||"",a=n?.name+n?.ext;if(!r){let u=t.split("/");a=decodeURIComponent(u[u.length-1]),r=(await fs.get(t,{responseType:"arraybuffer"})).headers["content-type"]}let c="document";switch(r.split("/")[0]){case"image":c="image";break;case"video":c="video";break;case"audio":c="audio";break;default:c="document";break}if(c==="audio"){let u={number:e,audio:t,delay:1200,quoted:o?.quoted};return V("/message/sendWhatsAppAudio"),await i?.audioWhatsapp(u,!0)}c==="image"&&n&&n?.ext===".gif"&&(c="document");let l={number:e,mediatype:c,fileName:a,media:t,delay:1200,quoted:o?.quoted};return V("/message/sendMedia"),s&&(l.caption=s),await i?.mediaMessage(l,null,!0)}catch(n){this.logger.error(n)}}async onSendMessageError(i,e,t){this.logger.verbose(`onSendMessageError ${JSON.stringify(t)}`);let s=await this.clientCw(i);if(s){if(t&&t?.status===400&&t?.message[0]?.exists===!1){s.messages.create({accountId:this.provider.accountId,conversationId:e,data:{content:`${W.t("cw.message.numbernotinwhatsapp")}`,message_type:"outgoing",private:!0}});return}s.messages.create({accountId:this.provider.accountId,conversationId:e,data:{content:W.t("cw.message.notsent",{error:t?`_${t.toString()}_`:""}),message_type:"outgoing",private:!0}})}}async receiveWebhook(i,e){try{if(await new Promise(c=>setTimeout(c,500)),!await this.clientCw(i))return this.logger.warn("client not found"),null;if(this.provider.reopenConversation===!1&&e.event==="conversation_status_changed"&&e.status==="resolved"&&e.meta?.sender?.identifier){let c=`${i.instanceName}:createConversation-${e.meta.sender.identifier}`;this.cache.delete(c)}if(!e?.conversation||e.private||e.event==="message_updated"&&!e.content_attributes?.deleted)return{message:"bot"};let s=e.conversation.meta.sender?.identifier||e.conversation.meta.sender?.phone_number.replace("+",""),o=e.content?e.content.replaceAll(/(?<!\*)\*((?!\s)([^\n*]+?)(?<!\s))\*(?!\*)/g,"_$1_").replaceAll(/\*{2}((?!\s)([^\n*]+?)(?<!\s))\*{2}/g,"*$1*").replaceAll(/~{2}((?!\s)([^\n*]+?)(?<!\s))~{2}/g,"~$1~").replaceAll(/(?<!`)`((?!\s)([^`*]+?)(?<!\s))`(?!`)/g,"```$1```"):e.content,n=e?.conversation?.messages[0]?.sender?.available_name||e?.sender?.name,r=this.waMonitor.waInstances[i.instanceName];if(e.event==="message_updated"&&e.content_attributes?.deleted){let c=await this.prismaRepository.message.findFirst({where:{chatwootMessageId:e.id,instanceId:i.instanceId}});if(c){let l=c.key;await r?.client.sendMessage(l.remoteJid,{delete:l}),await this.prismaRepository.message.deleteMany({where:{instanceId:i.instanceId,chatwootMessageId:e.id}})}return{message:"bot"}}let a=this.configService.get("CHATWOOT").BOT_CONTACT;if(s==="123456"&&e.message_type==="outgoing"){let c=o.replace("/","");if(a&&(c.includes("init")||c.includes("iniciar")))if(r?.connectionStatus?.state!=="open"){let d=c.split(":")[1];await r.connectToWhatsapp(d)}else await this.createBotMessage(i,W.t("cw.inbox.alreadyConnected",{inboxName:e.inbox.name}),"incoming");if(c==="clearcache"&&(r.clearCacheChatwoot(),await this.createBotMessage(i,W.t("cw.inbox.clearCache",{inboxName:e.inbox.name}),"incoming")),c==="status"){let l=r?.connectionStatus?.state;l||await this.createBotMessage(i,W.t("cw.inbox.notFound",{inboxName:e.inbox.name}),"incoming"),l&&await this.createBotMessage(i,W.t("cw.inbox.status",{inboxName:e.inbox.name,state:l}),"incoming")}if(a&&(c==="disconnect"||c==="desconectar")){let l=W.t("cw.inbox.disconnect",{inboxName:e.inbox.name});await this.createBotMessage(i,l,"incoming"),await r?.client?.logout("Log out instance: "+i.instanceName),await r?.client?.ws?.close()}}if(e.message_type==="outgoing"&&e?.conversation?.messages?.length&&s!=="123456"){if(e?.conversation?.messages[0]?.source_id?.substring(0,5)==="WAID:")return{message:"bot"};if(!r&&e.conversation?.id)return this.onSendMessageError(i,e.conversation?.id,"Instance not found"),{message:"bot"};let c;if(n==null)c=o;else{let d=this.provider.signDelimiter?this.provider.signDelimiter.replaceAll("\\n",`
`):`
`,u=this.provider.signMsg?[`*${n}:*`]:[];u.push(o),c=u.join(d)}for(let d of e.conversation.messages)if(d.attachments&&d.attachments.length>0)for(let u of d.attachments){o||(c=null);let g={quoted:await this.getQuotedMessage(e,i)},m=await this.sendAttachment(r,s,u.data_url,c,g);!m&&e.conversation?.id&&this.onSendMessageError(i,e.conversation?.id),await this.updateChatwootMessageId({...m,owner:i.instanceName},{messageId:e.id,inboxId:e.inbox?.id,conversationId:e.conversation?.id,contactInboxSourceId:e.conversation?.contact_inbox?.source_id},i)}else{let u={number:s,text:c,delay:1200,quoted:await this.getQuotedMessage(e,i)};V("/message/sendText");let g;try{if(g=await r?.textMessage(u,!0),!g)throw new Error("Message not sent");Hr.isLong(g?.messageTimestamp)&&(g.messageTimestamp=g.messageTimestamp?.toNumber()),await this.updateChatwootMessageId({...g,instanceId:i.instanceId},{messageId:e.id,inboxId:e.inbox?.id,conversationId:e.conversation?.id,contactInboxSourceId:e.conversation?.contact_inbox?.source_id},i)}catch(m){throw!g&&e.conversation?.id&&this.onSendMessageError(i,e.conversation?.id,m),m}}if(this.configService.get("CHATWOOT").MESSAGE_READ){let d=await this.prismaRepository.message.findFirst({where:{key:{path:["fromMe"],equals:!1},instanceId:i.instanceId}});if(d&&!d.chatwootIsRead){let u=d.key;r?.markMessageAsRead({readMessages:[{id:u.id,fromMe:u.fromMe,remoteJid:u.remoteJid}]});let g={chatwootMessageId:d.chatwootMessageId,chatwootConversationId:d.chatwootConversationId,chatwootInboxId:d.chatwootInboxId,chatwootContactInboxSourceId:d.chatwootContactInboxSourceId,chatwootIsRead:!0};await this.prismaRepository.message.updateMany({where:{instanceId:i.instanceId,key:{path:["id"],equals:u.id}},data:g})}}}if(e.message_type==="template"&&e.event==="message_created"){let c={number:s,text:e.content.replace(/\\\r\n|\\\n|\n/g,`
`),delay:1200};V("/message/sendText"),await r?.textMessage(c)}return{message:"bot"}}catch(t){return this.logger.error(t),{message:"bot"}}}async updateChatwootMessageId(i,e,t){let s=i.key;!e.messageId||!s?.id||(await this.prismaRepository.message.updateMany({where:{key:{path:["id"],equals:s.id},instanceId:t.instanceId},data:{chatwootMessageId:e.messageId,chatwootConversationId:e.conversationId,chatwootInboxId:e.inboxId,chatwootContactInboxSourceId:e.contactInboxSourceId,chatwootIsRead:e.isRead}}),this.isImportHistoryAvailable()&&pe.updateMessageSourceID(e.messageId,s.id))}async getMessageByKeyId(i,e){return await this.prismaRepository.message.findFirst({where:{key:{path:["id"],equals:e},instanceId:i.instanceId}})||null}async getReplyToIds(i,e){let t=null,s=null;if(i&&(s=i.message?.extendedTextMessage?.contextInfo?.stanzaId??i.contextInfo?.stanzaId,s)){let o=await this.getMessageByKeyId(e,s);o?.chatwootMessageId&&(t=o.chatwootMessageId)}return{in_reply_to:t,in_reply_to_external_id:s}}async getQuotedMessage(i,e){if(i?.content_attributes?.in_reply_to){let t=await this.prismaRepository.message.findFirst({where:{chatwootMessageId:i?.content_attributes?.in_reply_to,instanceId:e.instanceId}}),s=t?.key;if(t&&s?.id)return{key:t.key,message:t.message}}return null}isMediaMessage(i){let e=["imageMessage","documentMessage","documentWithCaptionMessage","audioMessage","videoMessage","stickerMessage","viewOnceMessageV2"];return Object.keys(i).some(o=>e.includes(o))}getAdsMessage(i){return{title:i.extendedTextMessage?.contextInfo?.externalAdReply?.title||i.contextInfo?.externalAdReply?.title,body:i.extendedTextMessage?.contextInfo?.externalAdReply?.body||i.contextInfo?.externalAdReply?.body,thumbnailUrl:i.extendedTextMessage?.contextInfo?.externalAdReply?.thumbnailUrl||i.contextInfo?.externalAdReply?.thumbnailUrl,sourceUrl:i.extendedTextMessage?.contextInfo?.externalAdReply?.sourceUrl||i.contextInfo?.externalAdReply?.sourceUrl}}getReactionMessage(i){return i?.reactionMessage}getTypeMessage(i){return{conversation:i.conversation,imageMessage:i.imageMessage?.caption,videoMessage:i.videoMessage?.caption,extendedTextMessage:i.extendedTextMessage?.text,messageContextInfo:i.messageContextInfo?.stanzaId,stickerMessage:void 0,documentMessage:i.documentMessage?.caption,documentWithCaptionMessage:i.documentWithCaptionMessage?.message?.documentMessage?.caption,audioMessage:i.audioMessage?.caption,contactMessage:i.contactMessage?.vcard,contactsArrayMessage:i.contactsArrayMessage,locationMessage:i.locationMessage,liveLocationMessage:i.liveLocationMessage,listMessage:i.listMessage,listResponseMessage:i.listResponseMessage,viewOnceMessageV2:i?.message?.viewOnceMessageV2?.message?.imageMessage?.url||i?.message?.viewOnceMessageV2?.message?.videoMessage?.url||i?.message?.viewOnceMessageV2?.message?.audioMessage?.url}}getMessageContent(i){let e=Object.keys(i).find(s=>i[s]!==void 0),t=e?i[e]:void 0;if(t&&typeof t=="string"&&t.includes("externalAdReplyBody|")&&(t=t.split("externalAdReplyBody|").filter(Boolean).join("")),e==="locationMessage"||e==="liveLocationMessage"){let s=t.degreesLatitude,o=t.degreesLongitude,n=t?.name,r=t?.address;return`*${W.t("cw.locationMessage.location")}:*

_${W.t("cw.locationMessage.latitude")}:_ ${s} 
_${W.t("cw.locationMessage.longitude")}:_ ${o} 
`+(n?`_${W.t("cw.locationMessage.locationName")}:_ ${n}
`:"")+(r?`_${W.t("cw.locationMessage.locationAddress")}:_ ${r} 
`:"")+`_${W.t("cw.locationMessage.locationUrl")}:_ https://www.google.com/maps/search/?api=1&query=${s},${o}`}if(e==="contactMessage"){let s=t.split(`
`),o={};s.forEach(a=>{let[c,l]=a.split(":");c&&l&&(o[c]=l)});let n=`*${W.t("cw.contactMessage.contact")}:*

_${W.t("cw.contactMessage.name")}:_ ${o.FN}`,r=1;return Object.keys(o).forEach(a=>{if(a.startsWith("item")&&a.includes("TEL")){let c=o[a];n+=`
_${W.t("cw.contactMessage.number")} (${r}):_ ${c}`,r++}else if(a.includes("TEL")){let c=o[a];n+=`
_${W.t("cw.contactMessage.number")} (${r}):_ ${c}`,r++}}),n}if(e==="contactsArrayMessage")return t.contacts.map(n=>{let r=n.vcard.split(`
`),a={};r.forEach(d=>{let[u,g]=d.split(":");u&&g&&(a[u]=g)});let c=`*${W.t("cw.contactMessage.contact")}:*

_${W.t("cw.contactMessage.name")}:_ ${n.displayName}`,l=1;return Object.keys(a).forEach(d=>{if(d.startsWith("item")&&d.includes("TEL")){let u=a[d];c+=`
_${W.t("cw.contactMessage.number")} (${l}):_ ${u}`,l++}else if(d.includes("TEL")){let u=a[d];c+=`
_${W.t("cw.contactMessage.number")} (${l}):_ ${u}`,l++}}),c}).join(`

`);if(e==="listMessage"){let s=t?.title||"Unknown",o=t?.description||"Unknown",n=t?.footerText||"Unknown",r=`*List Menu:*

_Title_: `+s+`
_Description_: `+o+`
_Footer_: `+n;return t.sections&&t.sections.length>0?t.sections.forEach((a,c)=>{r+=`

*Section `+(c+1)+":* "+a.title||`Unknown
`,a.rows&&a.rows.length>0?a.rows.forEach((l,d)=>{r+=`
*Line `+(d+1)+`:*
`,r+="_\u25AA\uFE0F Title:_ "+(l.title||"Unknown")+`
`,r+="_\u25AA\uFE0F Description:_ "+(l.description||"Unknown")+`
`,r+="_\u25AA\uFE0F ID:_ "+(l.rowId||"Unknown")+`
`}):r+=`
No lines found in this section.
`}):r+=`
No sections found.
`,r}if(e==="listResponseMessage"){let s=t?.title||"Unknown",o=t?.description||"Unknown",n=t?.singleSelectReply?.selectedRowId||"Unknown";return`*List Response:*

_Title_: `+s+`
_Description_: `+o+`
_ID_: `+n}return t}getConversationMessage(i){let e=this.getTypeMessage(i);return this.getMessageContent(e)}async eventWhatsapp(i,e,t){try{let s=this.waMonitor.waInstances[e.instanceName];if(!s)return this.logger.warn("wa instance not found"),null;let o=await this.clientCw(e);if(!o)return this.logger.warn("client not found"),null;if(this.provider?.ignoreJids&&this.provider?.ignoreJids.length>0){let n=this.provider?.ignoreJids,r=!1,a=!1;if(n.includes("@g.us")&&(r=!0),n.includes("@s.whatsapp.net")&&(a=!0),r&&t?.key?.remoteJid.endsWith("@g.us")){this.logger.warn("Ignoring message from group: "+t?.key?.remoteJid);return}if(a&&t?.key?.remoteJid.endsWith("@s.whatsapp.net")){this.logger.warn("Ignoring message from contact: "+t?.key?.remoteJid);return}if(n.includes(t?.key?.remoteJid)){this.logger.warn("Ignoring message from jid: "+t?.key?.remoteJid);return}}if(i==="messages.upsert"||i==="send.message"){if(t.key.remoteJid==="status@broadcast")return;t.message?.ephemeralMessage?.message&&(t.message={...t.message?.ephemeralMessage?.message});let n=await this.getConversationMessage(t.message),r=n&&n.replaceAll(/\*((?!\s)([^\n*]+?)(?<!\s))\*/g,"**$1**").replaceAll(/_((?!\s)([^\n_]+?)(?<!\s))_/g,"*$1*").replaceAll(/~((?!\s)([^\n~]+?)(?<!\s))~/g,"~~$1~~");if(r&&r.includes("Por favor, classifique esta conversa, http"))return;let a=t.contextInfo?.stanzaId||t.message?.contextInfo?.stanzaId,c=null;a&&(c=await this.prismaRepository.message.findFirst({where:{key:{path:["id"],equals:a},chatwootMessageId:{not:null}}}));let l=this.isMediaMessage(t.message),d=this.getAdsMessage(t),u=this.getReactionMessage(t.message);if(!r&&!l&&!u){this.logger.warn("no body message found");return}let g=await this.createConversation(e,t);if(!g){this.logger.warn("conversation not found");return}let m=t.key.fromMe?"outgoing":"incoming";if(l){let y=await s?.getBase64FromMediaMessage({message:{...t}}),w,E=t?.message[t?.messageType],I=E?.fileName||E?.filename||E?.message?.documentMessage?.fileName;if(I){let v=Vr.parse(I);v.name&&v.ext&&(w=`${v.name}-${Math.floor(Math.random()*90+10)}${v.ext}`)}w||(w=`${Math.random().toString(36).substring(7)}.${Ct.extension(y.mimetype)||""}`);let M=Buffer.from(y.base64,"base64"),S=new to;if(S._read=()=>{},S.push(M),S.push(null),t.key.remoteJid.includes("@g.us")){let v=t.pushName,O=t.key.participant.split("@")[0],k=O.match(/^(\d{2})(\d{2})(\d{4})(\d{4})$/),D;k?D=`+${k[1]} (${k[2]}) ${k[3]}-${k[4]}`:D=`+${O}`;let L;t.key.fromMe?L=`${r}`:L=`**${D} - ${v}:**

${r}`;let $=await this.sendData(g,S,w,m,L,e,t,"WAID:"+t.key.id,c);if(!$){this.logger.warn("message not sent");return}return $}else{let v=await this.sendData(g,S,w,m,r,e,t,"WAID:"+t.key.id,c);if(!v){this.logger.warn("message not sent");return}return v}}if(u){if(u.text&&!await this.createMessage(e,g,u.text,m,!1,[],{message:{extendedTextMessage:{contextInfo:{stanzaId:u.key.id}}}},"WAID:"+t.key.id,c)){this.logger.warn("message not sent");return}return}if(d&&d.title||d.body||d.thumbnailUrl){let y=await fs.get(d.thumbnailUrl,{responseType:"arraybuffer"}),w=Ct.extension(y.headers["content-type"]),E=w&&Ct.lookup(w);if(!E){this.logger.warn("mimetype of Ads message not found");return}let M=`${Math.random().toString(36).substring(7)}.${Ct.extension(E)}`,S=Buffer.from(y.data,"binary"),v=await qr.read(S);await v.cover(320,180);let O=await v.getBufferAsync(qr.MIME_PNG),k=new to;k._read=()=>{},k.push(O),k.push(null);let D=(Q,G)=>Q?Q.length>G?Q.substring(0,G)+"...":Q:"",L=D(d.title,40),$=D(d?.body,75),K=await this.sendData(g,k,M,m,`${r}


**${L}**
${$}
${d.sourceUrl}`,e,t,"WAID:"+t.key.id);if(!K){this.logger.warn("message not sent");return}return K}if(t.key.remoteJid.includes("@g.us")){let y=t.pushName,w=t.key.participant.split("@")[0],E=w.match(/^(\d{2})(\d{2})(\d{4})(\d{4})$/),I;E?I=`+${E[1]} (${E[2]}) ${E[3]}-${E[4]}`:I=`+${w}`;let M;t.key.fromMe?M=`${r}`:M=`**${I} - ${y}:**

${r}`;let S=await this.createMessage(e,g,M,m,!1,[],t,"WAID:"+t.key.id,c);if(!S){this.logger.warn("message not sent");return}return S}else{let y=await this.createMessage(e,g,r,m,!1,[],t,"WAID:"+t.key.id,c);if(!y){this.logger.warn("message not sent");return}return y}}if(i==="messages.delete"&&this.configService.get("CHATWOOT").MESSAGE_DELETE===!0){if(!t?.key?.id){this.logger.warn("message id not found");return}let r=await this.getMessageByKeyId(e,t.key.id);if(r?.chatwootMessageId&&r?.chatwootConversationId)return await this.prismaRepository.message.deleteMany({where:{key:{path:["id"],equals:t.key.id},instanceId:e.instanceId}}),await o.messages.delete({accountId:this.provider.accountId,conversationId:r.chatwootConversationId,messageId:r.chatwootMessageId})}if(i==="messages.edit"){let n=`${t?.editedMessage?.conversation||t?.editedMessage?.extendedTextMessage?.text}

_\`${W.t("cw.message.edited")}.\`_`,r=await this.getMessageByKeyId(e,t?.key?.id),a=r.key,c=a?.fromMe?"outgoing":"incoming";if(r&&r.chatwootConversationId&&!await this.createMessage(e,r.chatwootConversationId,n,c,!1,[],{message:{extendedTextMessage:{contextInfo:{stanzaId:a.id}}}},"WAID:"+t.key.id,null)){this.logger.warn("edited message not sent");return}return}if(i==="messages.read"){if(!t?.key?.id||!t?.key?.remoteJid){this.logger.warn("message id not found");return}let n=await this.getMessageByKeyId(e,t.key.id),r=n?.chatwootConversationId,a=n?.chatwootContactInboxSourceId;if(r){let c=a,l=await this.getInbox(e);if(!c&&l&&(c=(await o.conversations.get({accountId:this.provider.accountId,conversationId:r})).last_non_activity_message?.conversation?.contact_inbox?.source_id),c&&l?.inbox_identifier){let d=`/public/api/v1/inboxes/${l.inbox_identifier}/contacts/${c}/conversations/${r}/update_last_seen`;eo(this.getClientCwConfig(),{method:"POST",url:d})}}return}if(i==="status.instance"){let n=t,r=await this.getInbox(e);if(!r){this.logger.warn("inbox not found");return}let a=W.t("cw.inbox.status",{inboxName:r.name,state:n.status});await this.createBotMessage(e,a,"incoming")}if(i==="connection.update"&&t.status==="open"&&this.waMonitor.waInstances[e.instanceName].qrCode.count>0){let n=W.t("cw.inbox.connected");await this.createBotMessage(e,n,"incoming"),this.waMonitor.waInstances[e.instanceName].qrCode.count=0,pe.clearAll(e)}if(i==="qrcode.updated")if(t.statusCode===500){let n=`\u{1F6A8} ${W.t("qrlimitreached")}`;return await this.createBotMessage(e,n,"incoming")}else{let n=Buffer.from(t?.qrcode.base64.replace("data:image/png;base64,",""),"base64"),r=new to;r._read=()=>{},r.push(n),r.push(null),await this.createBotQr(e,W.t("qrgeneratedsuccesfully"),"incoming",r,`${e.instanceName}.png`);let a=`\u26A1\uFE0F${W.t("qrgeneratedsuccesfully")}

${W.t("scanqr")}`;t?.qrcode?.pairingCode&&(a=a+`

*Pairing Code:* ${t.qrcode.pairingCode.substring(0,4)}-${t.qrcode.pairingCode.substring(4,8)}`),await this.createBotMessage(e,a,"incoming")}}catch(s){this.logger.error(s)}}getNumberFromRemoteJid(i){return i.replace(/:\d+/,"").split("@")[0]}startImportHistoryMessages(i){this.isImportHistoryAvailable()&&this.createBotMessage(i,W.t("cw.import.startImport"),"incoming")}isImportHistoryAvailable(){let i=this.configService.get("CHATWOOT").IMPORT.DATABASE.CONNECTION.URI;return i&&i!=="postgres://user:password@hostname:port/dbname"}addHistoryMessages(i,e){this.isImportHistoryAvailable()&&pe.addHistoryMessages(i,e)}addHistoryContacts(i,e){if(this.isImportHistoryAvailable())return pe.addHistoryContacts(i,e)}async importHistoryMessages(i){if(!this.isImportHistoryAvailable())return;this.createBotMessage(i,W.t("cw.import.importingMessages"),"incoming");let e=await pe.importHistoryMessages(i,this,await this.getInbox(i),this.provider);this.updateContactAvatarInRecentConversations(i);let t=Number.isInteger(e)?W.t("cw.import.messagesImported",{totalMessagesImported:e}):W.t("cw.import.messagesException");return this.createBotMessage(i,t,"incoming"),e}async updateContactAvatarInRecentConversations(i,e=100){try{if(!this.isImportHistoryAvailable())return;let t=await this.clientCw(i);if(!t)return this.logger.warn("client not found"),null;let s=await this.getInbox(i);if(!s)return this.logger.warn("inbox not found"),null;let o=await pe.getContactsOrderByRecentConversations(s,this.provider,e),n=o.map(a=>a.identifier).filter(a=>a!==null),r=(await this.prismaRepository.contact.findMany({where:{instanceId:i.instanceId,id:{in:n},profilePicUrl:{not:null}}})).reduce((a,c)=>a.set(c.id,c),new Map);o.forEach(async a=>{r.has(a.identifier)&&t.contacts.update({accountId:this.provider.accountId,id:a.id,data:{avatar_url:r.get(a.identifier).profilePictureUrl||null}})})}catch(t){this.logger.error(`Error on update avatar in recent conversations: ${t.toString()}`)}}async syncLostMessages(i,e,t){try{if(!this.isImportHistoryAvailable()||!this.configService.get("DATABASE").SAVE_DATA.MESSAGE_UPDATE)return;let s=await this.getInbox(i),o=`select * from messages m
      where account_id = ${e.accountId}
      and inbox_id = ${s.id}
      and created_at >= now() - interval '6h'
      order by created_at desc`,r=((await this.pgClient.query(o))?.rows).filter(u=>!!u.source_id).map(u=>u.source_id.replace("WAID:","")),c=(await this.prismaRepository.message.findMany({where:{Instance:{name:i.instanceName},messageTimestamp:{gte:yu().subtract(6,"hours").unix()},AND:r.map(u=>({key:{path:["id"],not:u}}))}})).filter(u=>!pe.isIgnorePhoneNumber(u.key?.remoteJid)),l=[];for(let u of c)!u.message||!u.key||!u.messageTimestamp||(Hr.isLong(u?.messageTimestamp)&&(u.messageTimestamp=u.messageTimestamp?.toNumber()),l.push(t(u)));this.addHistoryMessages(i,l.filter(u=>!pe.isIgnorePhoneNumber(u.key?.remoteJid))),await pe.importHistoryMessages(i,this,s,this.provider),this.waMonitor.waInstances[i.instanceName].clearCacheChatwoot()}catch{return}}}});import ws from"axios";var mt,so=b(()=>{ge();_();je();mt=class{constructor(i,e,t){this.waMonitor=i;this.configService=e;this.prismaRepository=t;this.logger=new A("DifyService")}async createNewSession(i,e){try{return{session:await this.prismaRepository.integrationSession.create({data:{remoteJid:e.remoteJid,pushName:e.pushName,sessionId:e.remoteJid,status:"opened",awaitUser:!1,botId:e.botId,instanceId:i.instanceId,type:"dify"}})}}catch(t){this.logger.error(t);return}}isImageMessage(i){return i.includes("imageMessage")}isJSON(i){try{return JSON.parse(i),!0}catch{return!1}}async sendMessageToBot(i,e,t,s,o,n,r){try{let a=s.apiUrl;if(s.botType==="chatBot"){a+="/chat-messages";let c={inputs:{remoteJid:o,pushName:n,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY},query:r,response_mode:"blocking",conversation_id:e.sessionId===o?void 0:e.sessionId,user:o};if(this.isImageMessage(r)){let g=r.split("|");c.files=[{type:"image",transfer_method:"remote_url",url:g[1].split("?")[0]}],c.query=g[2]||r}i.integration===N.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(o),await i.client.sendPresenceUpdate("composing",o));let l=await ws.post(a,c,{headers:{Authorization:`Bearer ${s.apiKey}`}});i.integration===N.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",o);let d=l?.data?.answer,u=l?.data?.conversation_id;await this.sendMessageWhatsApp(i,o,d,t),await this.prismaRepository.integrationSession.update({where:{id:e.id},data:{status:"opened",awaitUser:!0,sessionId:e.sessionId===o?u:e.sessionId}})}if(s.botType==="textGenerator"){a+="/completion-messages";let c={inputs:{query:r,pushName:n,remoteJid:o,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY},response_mode:"blocking",conversation_id:e.sessionId===o?void 0:e.sessionId,user:o};if(this.isImageMessage(r)){let g=r.split("|");c.files=[{type:"image",transfer_method:"remote_url",url:g[1].split("?")[0]}],c.inputs.query=g[2]||r}i.integration===N.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(o),await i.client.sendPresenceUpdate("composing",o));let l=await ws.post(a,c,{headers:{Authorization:`Bearer ${s.apiKey}`}});i.integration===N.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",o);let d=l?.data?.answer,u=l?.data?.conversation_id;await this.sendMessageWhatsApp(i,o,d,t),await this.prismaRepository.integrationSession.update({where:{id:e.id},data:{status:"opened",awaitUser:!0,sessionId:e.sessionId===o?u:e.sessionId}})}if(s.botType==="agent"){a+="/chat-messages";let c={inputs:{remoteJid:o,pushName:n,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY},query:r,response_mode:"streaming",conversation_id:e.sessionId===o?void 0:e.sessionId,user:o};if(this.isImageMessage(r)){let y=r.split("|");c.files=[{type:"image",transfer_method:"remote_url",url:y[1].split("?")[0]}],c.query=y[2]||r}i.integration===N.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(o),await i.client.sendPresenceUpdate("composing",o));let l=await ws.post(a,c,{headers:{Authorization:`Bearer ${s.apiKey}`}}),d,u="",m=l.data.replaceAll("data: ","").split(`
`).filter(y=>y.trim()!=="");for(let y of m)if(y.trim().startsWith("{")){let w=JSON.parse(y);w?.event==="agent_message"&&(console.log("event:",w),d=d??w?.conversation_id,u+=w?.answer)}i.integration===N.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",o);let h=u;await this.sendMessageWhatsApp(i,o,h,t),await this.prismaRepository.integrationSession.update({where:{id:e.id},data:{status:"opened",awaitUser:!0,sessionId:d}});return}if(s.botType==="workflow"){a+="/workflows/run";let c={inputs:{query:r,remoteJid:o,pushName:n,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY},response_mode:"blocking",user:o};if(this.isImageMessage(r)){let u=r.split("|");c.files=[{type:"image",transfer_method:"remote_url",url:u[1].split("?")[0]}],c.inputs.query=u[2]||r}i.integration===N.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(o),await i.client.sendPresenceUpdate("composing",o));let l=await ws.post(a,c,{headers:{Authorization:`Bearer ${s.apiKey}`}});i.integration===N.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",o);let d=l?.data?.data.outputs.text;await this.sendMessageWhatsApp(i,o,d,t),await this.prismaRepository.integrationSession.update({where:{id:e.id},data:{status:"opened",awaitUser:!0}});return}}catch(a){this.logger.error(a.response?.data||a);return}}async sendMessageWhatsApp(i,e,t,s){let o=/(!?)\[(.*?)\]\((.*?)\)/g,n="",r=0,a,c=m=>{let h=m.split(".").pop()?.toLowerCase(),y=["jpg","jpeg","png","gif","bmp","webp"],w=["mp3","wav","aac","ogg"],E=["mp4","avi","mkv","mov"],I=["pdf","doc","docx","xls","xlsx","ppt","pptx","txt"];return y.includes(h||"")?"image":w.includes(h||"")?"audio":E.includes(h||"")?"video":I.includes(h||"")?"document":null};for(;(a=o.exec(t))!==null;){let[m,h,y,w]=a,E=c(w),I=t.slice(r,a.index);if(I&&(n+=I),E){let M=s.splitMessages??!1,S=s.timePerChar??0,v=1e3,O=2e4;if(n.trim()){if(M){let k=n.trim().split(`

`);for(let D=0;D<k.length;D++){let L=k[D],$=Math.min(Math.max(L.length*S,v),O);i.integration===N.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e)),await new Promise(K=>{setTimeout(async()=>{await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:L},!1),K()},$)}),i.integration===N.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e)}}else await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:n.trim()},!1);n=""}E==="audio"?await i.audioWhatsapp({number:e.split("@")[0],delay:s?.delayMessage||1e3,audio:w,caption:y}):await i.mediaMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,mediatype:E,media:w,caption:y},null,!1)}else n+=`[${y}](${w})`;r=o.lastIndex}if(r<t.length){let m=t.slice(r);m.trim()&&(n+=m)}let l=s.splitMessages??!1,d=s.timePerChar??0,u=1e3,g=2e4;if(n.trim())if(l){let m=n.trim().split(`

`);for(let h=0;h<m.length;h++){let y=m[h],w=Math.min(Math.max(y.length*d,u),g);i.integration===N.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e)),await new Promise(E=>{setTimeout(async()=>{await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:y},!1),E()},w)}),i.integration===N.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e)}}else await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:n.trim()},!1);V("/message/sendText")}async initNewSession(i,e,t,s,o,n,r){let a=await this.createNewSession(i,{remoteJid:e,pushName:r,botId:t.id});a.session&&(o=a.session),await this.sendMessageToBot(i,o,s,t,e,r,n)}async processDify(i,e,t,s,o,n,r){if(!(s&&s.status!=="opened")){if(s&&o.expire&&o.expire>0){let a=Date.now(),c=new Date(s.updatedAt).getTime(),l=a-c;if(Math.floor(l/1e3/60)>o.expire){o.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:t.id,remoteJid:e}}),await this.initNewSession(i,e,t,o,s,n,r);return}}if(!s){await this.initNewSession(i,e,t,o,s,n,r);return}if(await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"opened",awaitUser:!1}}),!n){o.unknownMessage&&(this.waMonitor.waInstances[i.instanceName].textMessage({number:e.split("@")[0],delay:o.delayMessage||1e3,text:o.unknownMessage},!1),V("/message/sendText"));return}if(o.keywordFinish&&n.toLowerCase()===o.keywordFinish.toLowerCase()){o.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:t.id,remoteJid:e}});return}await this.sendMessageToBot(i,s,o,t,e,r,n)}}}});import io from"axios";import{downloadMediaMessage as wu}from"baileys";import bu from"form-data";import bs from"openai";import Su from"pino";var ht,no=b(()=>{ge();_();je();ht=class{constructor(i,e,t){this.waMonitor=i;this.configService=e;this.prismaRepository=t;this.logger=new A("OpenaiService")}async sendMessageToBot(i,e,t,s){let n=e.systemMessages.map(h=>({role:"system",content:h})),a=e.assistantMessages.map(h=>({role:"assistant",content:h})),l=e.userMessages.map(h=>({role:"user",content:h})),d={role:"user",content:[{type:"text",text:s}]};if(this.isImageMessage(s)){let h=s.split("|"),y=h[1].split("?")[0];d.content=[{type:"text",text:h[2]||s},{type:"image_url",image_url:{url:y}}]}let u=[...n,...a,...l,d];i.integration===N.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(t),await i.client.sendPresenceUpdate("composing",t));let g=await this.client.chat.completions.create({model:e.model,messages:u,max_tokens:e.maxTokens});return i.integration===N.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",t),g.choices[0].message.content}async sendMessageToAssistant(i,e,t,s,o,n,r){let a={role:o?"assistant":"user",content:[{type:"text",text:n}]};if(this.isImageMessage(n)){let u=n.split("|"),g=u[1].split("?")[0];a.content=[{type:"text",text:u[2]||n},{type:"image_url",image_url:{url:g}}]}if(await this.client.beta.threads.messages.create(r,a),o){V("/message/sendText");return}let c=await this.client.beta.threads.runs.create(r,{assistant_id:e.assistantId});i.integration===N.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(t),await i.client.sendPresenceUpdate("composing",t));let l=await this.getAIResponse(r,c.id,e.functionUrl,t,s);return i.integration===N.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",t),l?.data[0].content[0].text.value}async sendMessageWhatsapp(i,e,t,s,o){let n=/(!?)\[(.*?)\]\((.*?)\)/g,r="",a=0,c,l=h=>{let y=h.split(".").pop()?.toLowerCase(),w=["jpg","jpeg","png","gif","bmp","webp"],E=["mp3","wav","aac","ogg"],I=["mp4","avi","mkv","mov"],M=["pdf","doc","docx","xls","xlsx","ppt","pptx","txt"];return w.includes(y||"")?"image":E.includes(y||"")?"audio":I.includes(y||"")?"video":M.includes(y||"")?"document":null};for(;(c=n.exec(o))!==null;){let[h,y,w,E]=c,I=l(E),M=o.slice(a,c.index);if(M&&(r+=M),I){let S=s.splitMessages??!1,v=s.timePerChar??0,O=1e3,k=2e4;if(r.trim()){if(S){let D=r.trim().split(`

`);for(let L=0;L<D.length;L++){let $=D[L],K=Math.min(Math.max($.length*v,O),k);i.integration===N.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(t),await i.client.sendPresenceUpdate("composing",t)),await new Promise(Q=>{setTimeout(async()=>{await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:$},!1),Q()},K)}),i.integration===N.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",t)}}else await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:r.trim()},!1);r=""}I==="audio"?await i.audioWhatsapp({number:t.split("@")[0],delay:s?.delayMessage||1e3,audio:E,caption:w}):await i.mediaMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,mediatype:I,media:E,caption:w},null,!1)}else r+=`[${w}](${E})`;a=n.lastIndex}if(a<o.length){let h=o.slice(a);h.trim()&&(r+=h)}let d=s.splitMessages??!1,u=s.timePerChar??0,g=1e3,m=2e4;if(r.trim()){if(d){let h=r.trim().split(`

`);for(let y=0;y<h.length;y++){let w=h[y],E=Math.min(Math.max(w.length*u,g),m);i.integration===N.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(t),await i.client.sendPresenceUpdate("composing",t)),await new Promise(I=>{setTimeout(async()=>{await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:w},!1),I()},E)}),i.integration===N.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",t)}}else await i.textMessage({number:t.split("@")[0],delay:s?.delayMessage||1e3,text:r.trim()},!1);r=""}V("/message/sendText"),await this.prismaRepository.integrationSession.update({where:{id:e.id},data:{status:"opened",awaitUser:!0}})}async createAssistantNewSession(i,e){if(e.remoteJid==="status@broadcast")return;let t=await this.prismaRepository.openaiCreds.findFirst({where:{id:e.openaiCredsId}});if(!t)throw new Error("Openai Creds not found");try{this.client=new bs({apiKey:t.apiKey});let s=(await this.client.beta.threads.create({})).id,o=null;return s&&(o=await this.prismaRepository.integrationSession.create({data:{remoteJid:e.remoteJid,pushName:e.pushName,sessionId:s,status:"opened",awaitUser:!1,botId:e.botId,instanceId:i.instanceId,type:"openai"}})),{session:o}}catch(s){this.logger.error(s);return}}async initAssistantNewSession(i,e,t,s,o,n,r,a){let c=await this.createAssistantNewSession(i,{remoteJid:e,pushName:t,openaiCredsId:o.openaiCredsId,botId:o.id});c.session&&(r=c.session);let l=await this.sendMessageToAssistant(i,o,e,t,s,a,r.sessionId);await this.sendMessageWhatsapp(i,r,e,n,l)}isJSON(i){try{return JSON.parse(i),!0}catch{return!1}}async getAIResponse(i,e,t,s,o){let n=await this.client.beta.threads.runs.retrieve(i,e),r;switch(n.status){case"requires_action":if(r=n?.required_action?.submit_tool_outputs?.tool_calls,r)for(let a of r){let c=a.id,l=a?.function?.name,d=this.isJSON(a?.function?.arguments)?JSON.parse(a?.function?.arguments):a?.function?.arguments,u=null;try{let{data:g}=await io.post(t,{name:l,arguments:{...d,remoteJid:s,pushName:o}});u=JSON.stringify(g).replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t")}catch(g){u=JSON.stringify(g).replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t")}await this.client.beta.threads.runs.submitToolOutputs(i,e,{tool_outputs:[{tool_call_id:c,output:u}]})}return this.getAIResponse(i,e,t,s,o);case"queued":return await new Promise(a=>setTimeout(a,1e3)),this.getAIResponse(i,e,t,s,o);case"in_progress":return await new Promise(a=>setTimeout(a,1e3)),this.getAIResponse(i,e,t,s,o);case"completed":return await this.client.beta.threads.messages.list(i,{run_id:e,limit:1})}}isImageMessage(i){return i.includes("imageMessage")}async processOpenaiAssistant(i,e,t,s,o,n,r,a){if(n&&n.status==="closed")return;if(n&&r.expire&&r.expire>0){let u=Date.now(),g=new Date(n.updatedAt).getTime(),m=u-g;if(Math.floor(m/1e3/60)>r.expire){r.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:o.id,remoteJid:e}}),await this.initAssistantNewSession(i,e,t,s,o,r,n,a);return}}if(!n){await this.initAssistantNewSession(i,e,t,s,o,r,n,a);return}if(n.status!=="paused"&&await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"opened",awaitUser:!1}}),!a){r.unknownMessage&&(this.waMonitor.waInstances[i.instanceName].textMessage({number:e.split("@")[0],delay:r.delayMessage||1e3,text:r.unknownMessage},!1),V("/message/sendText"));return}if(r.keywordFinish&&a.toLowerCase()===r.keywordFinish.toLowerCase()){r.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:o.id,remoteJid:e}});return}let c=await this.prismaRepository.openaiCreds.findFirst({where:{id:o.openaiCredsId}});if(!c)throw new Error("Openai Creds not found");this.client=new bs({apiKey:c.apiKey});let l=n.sessionId,d=await this.sendMessageToAssistant(i,o,e,t,s,a,l);await this.sendMessageWhatsapp(i,n,e,r,d)}async createChatCompletionNewSession(i,e){if(e.remoteJid==="status@broadcast")return;let t=Math.floor(Math.random()*1e10).toString(),s=await this.prismaRepository.openaiCreds.findFirst({where:{id:e.openaiCredsId}});if(!s)throw new Error("Openai Creds not found");try{return{session:await this.prismaRepository.integrationSession.create({data:{remoteJid:e.remoteJid,pushName:e.pushName,sessionId:t,status:"opened",awaitUser:!1,botId:e.botId,instanceId:i.instanceId,type:"openai"}}),creds:s}}catch(o){this.logger.error(o);return}}async initChatCompletionNewSession(i,e,t,s,o,n,r){let a=await this.createChatCompletionNewSession(i,{remoteJid:e,pushName:t,openaiCredsId:s.openaiCredsId,botId:s.id});n=a.session;let c=a.creds;this.client=new bs({apiKey:c.apiKey});let l=await this.sendMessageToBot(i,s,e,r);await this.sendMessageWhatsapp(i,n,e,o,l)}async processOpenaiChatCompletion(i,e,t,s,o,n,r){if(o&&o.status!=="opened")return;if(o&&n.expire&&n.expire>0){let l=Date.now(),d=new Date(o.updatedAt).getTime(),u=l-d;if(Math.floor(u/1e3/60)>n.expire){n.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:o.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:s.id,remoteJid:e}}),await this.initChatCompletionNewSession(i,e,t,s,n,o,r);return}}if(!o){await this.initChatCompletionNewSession(i,e,t,s,n,o,r);return}if(await this.prismaRepository.integrationSession.update({where:{id:o.id},data:{status:"opened",awaitUser:!1}}),!r){n.unknownMessage&&(this.waMonitor.waInstances[i.instanceName].textMessage({number:e.split("@")[0],delay:n.delayMessage||1e3,text:n.unknownMessage},!1),V("/message/sendText"));return}if(n.keywordFinish&&r.toLowerCase()===n.keywordFinish.toLowerCase()){n.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:o.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:s.id,remoteJid:e}});return}let a=await this.prismaRepository.openaiCreds.findFirst({where:{id:s.openaiCredsId}});if(!a)throw new Error("Openai Creds not found");this.client=new bs({apiKey:a.apiKey});let c=await this.sendMessageToBot(i,s,e,r);await this.sendMessageWhatsapp(i,o,e,n,c)}async speechToText(i,e,t){let s;e?.message?.mediaUrl?s=await io.get(e.message.mediaUrl,{responseType:"arraybuffer"}).then(a=>Buffer.from(a.data,"binary")):s=await wu({key:e.key,message:e?.message},"buffer",{},{logger:Su({level:"error"}),reuploadRequest:t});let o=this.configService.get("LANGUAGE").includes("pt")?"pt":this.configService.get("LANGUAGE"),n=new bu;return n.append("file",s,"audio.ogg"),n.append("model","whisper-1"),n.append("language",o),(await io.post("https://api.openai.com/v1/audio/transcriptions",n,{headers:{"Content-Type":"multipart/form-data",Authorization:`Bearer ${i.apiKey}`}}))?.data?.text}}});var Eu,Iu,Te,nt=b(()=>{Z();Eu=p=>{let i;C.get("S3").ENABLE?i=p.message.mediaUrl:i=p.key.id;let e={conversation:p?.message?.conversation,extendedTextMessage:p?.message?.extendedTextMessage?.text,contactMessage:p?.message?.contactMessage?.displayName,locationMessage:p?.message?.locationMessage?.degreesLatitude,viewOnceMessageV2:p?.message?.viewOnceMessageV2?.message?.imageMessage?.url||p?.message?.viewOnceMessageV2?.message?.videoMessage?.url||p?.message?.viewOnceMessageV2?.message?.audioMessage?.url,listResponseMessage:p?.message?.listResponseMessage?.title,responseRowId:p?.message?.listResponseMessage?.singleSelectReply?.selectedRowId,templateButtonReplyMessage:p?.message?.templateButtonReplyMessage?.selectedId||p?.message?.buttonsResponseMessage?.selectedButtonId,audioMessage:p?.message?.speechToText?p?.message?.speechToText:p?.message?.audioMessage?`audioMessage|${i}`:void 0,imageMessage:p?.message?.imageMessage?`imageMessage|${i}${p?.message?.imageMessage?.caption?`|${p?.message?.imageMessage?.caption}`:""}`:void 0,videoMessage:p?.message?.videoMessage?`videoMessage|${i}${p?.message?.videoMessage?.caption?`|${p?.message?.videoMessage?.caption}`:""}`:void 0,documentMessage:p?.message?.documentMessage?`documentMessage|${i}${p?.message?.documentMessage?.caption?`|${p?.message?.documentMessage?.caption}`:""}`:void 0,documentWithCaptionMessage:p?.message?.documentWithCaptionMessage?.message?.documentMessage?`documentWithCaptionMessage|${i}${p?.message?.documentWithCaptionMessage?.message?.documentMessage?.caption?`|${p?.message?.documentWithCaptionMessage?.message?.documentMessage?.caption}`:""}`:void 0,externalAdReplyBody:p?.contextInfo?.externalAdReply?.body?`externalAdReplyBody|${p.contextInfo.externalAdReply.body}`:void 0},t=Object.keys(e).find(s=>e[s]!==void 0)||"unknown";return{...e,messageType:t}},Iu=p=>{let i=Object.keys(p).find(t=>t!=="externalAdReplyBody"&&p[t]!==void 0),e=i?p[i]:void 0;return p.externalAdReplyBody&&(e=e?`${e}
${p.externalAdReplyBody}`:p.externalAdReplyBody),e},Te=p=>{let i=Eu(p);return Iu(i)}});import Ss from"axios";var ft,oo=b(()=>{_();nt();je();ft=class{constructor(i,e,t){this.waMonitor=i;this.configService=e;this.prismaRepository=t;this.logger=new A("TypebotService")}async createNewSession(i,e){if(e.remoteJid==="status@broadcast")return;let t=Math.floor(Math.random()*1e10).toString();try{let s=this.configService.get("TYPEBOT").API_VERSION,o,n;s==="latest"?(o=`${e.url}/api/v1/typebots/${e.typebot}/startChat`,n={prefilledVariables:{...e.prefilledVariables,remoteJid:e.remoteJid,pushName:e.pushName||e.prefilledVariables?.pushName||"",instanceName:i.name,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY,ownerJid:i.number}}):(o=`${e.url}/api/v1/sendMessage`,n={startParams:{publicId:e.typebot,prefilledVariables:{...e.prefilledVariables,remoteJid:e.remoteJid,pushName:e.pushName||e.prefilledVariables?.pushName||"",instanceName:i.name,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY,ownerJid:i.number}}});let r=await Ss.post(o,n),a=null;return r?.data?.sessionId&&(a=await this.prismaRepository.integrationSession.create({data:{remoteJid:e.remoteJid,pushName:e.pushName||"",sessionId:`${t}-${r.data.sessionId}`,status:"opened",parameters:{...e.prefilledVariables,remoteJid:e.remoteJid,pushName:e.pushName||"",instanceName:i.name,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY,ownerJid:i.number},awaitUser:!1,botId:e.botId,instanceId:i.id,type:"typebot"}})),{...r.data,session:a}}catch(s){this.logger.error(s);return}}async sendWAMessage(i,e,t,s,o,n,r){l(this.waMonitor.waInstances[i.name],e,t,o,n,r,c,this.prismaRepository).catch(d=>{console.error("Erro ao processar mensagens:",d)});function a(d,u){if(!d)return null;for(let g of d)if(g.lastBubbleBlockId===u)return g.wait?.secondsToWaitFor;return null}function c(d){let u="";if(d.text&&(u+=d.text),d.children&&d.type!=="a")for(let h of d.children)u+=c(h);d.type==="p"&&d.type!=="inline-variable"&&(u=u.trim()+`
`),d.type==="inline-variable"&&(u=u.trim()),d.type==="ol"&&(u=`
`+u.split(`
`).map((h,y)=>h?`${y+1}. ${h}`:"").join(`
`)),d.type==="li"&&(u=u.split(`
`).map(h=>h?`  ${h}`:"").join(`
`));let g="";d.bold&&(g+="*"),d.italic&&(g+="_"),d.underline&&(g+="~");let m=`${g}${u}${g.split("").reverse().join("")}`;return d.url&&(m=d.children[0]?.text?`[${m}]
(${d.url})`:`${d.url}`),m}async function l(d,u,g,m,h,y,w,E){for(let I of m){if(I.type==="text"){let S="";for(let v of I.content.richText){for(let O of v.children)S+=w(O);S+=`
`}if(S=S.replace(/\*\*/g,"").replace(/__/,"").replace(/~~/,"").replace(/\n$/,""),S=S.replace(/\n$/,""),S.includes("[list]")){let v={number:s.split("@")[0],title:"",description:"",buttonText:"",footerText:"",sections:[]},O=S.match(/\[title\]([\s\S]*?)(?=\[description\])/),k=S.match(/\[description\]([\s\S]*?)(?=\[buttonText\])/),D=S.match(/\[buttonText\]([\s\S]*?)(?=\[footerText\])/),L=S.match(/\[footerText\]([\s\S]*?)(?=\[menu\])/);O&&(v.title=O[1].trim()),k&&(v.description=k[1].trim()),D&&(v.buttonText=D[1].trim()),L&&(v.footerText=L[1].trim());let $=S.match(/\[menu\]([\s\S]*?)\[\/menu\]/)?.[1];if($){let K=$.match(/\[section\]([\s\S]*?)(?=\[section\]|\[\/section\]|\[\/menu\])/g);K&&K.forEach(Q=>{let G=Q.match(/title: (.*?)(?:\n|$)/)?.[1]?.trim(),q=Q.match(/\[row\]([\s\S]*?)(?=\[row\]|\[\/row\]|\[\/section\]|\[\/menu\])/g),ie={title:G,rows:q?.map(Jn=>({title:Jn.match(/title: (.*?)(?:\n|$)/)?.[1]?.trim(),description:Jn.match(/description: (.*?)(?:\n|$)/)?.[1]?.trim(),rowId:Jn.match(/rowId: (.*?)(?:\n|$)/)?.[1]?.trim()}))||[]};v.sections.push(ie)})}await d.listMessage(v)}else if(S.includes("[buttons]")){let v={number:s.split("@")[0],thumbnailUrl:void 0,title:"",description:"",footer:"",buttons:[]},O=S.match(/\[thumbnailUrl\]([\s\S]*?)(?=\[title\])/),k=S.match(/\[title\]([\s\S]*?)(?=\[description\])/),D=S.match(/\[description\]([\s\S]*?)(?=\[footer\])/),L=S.match(/\[footer\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url))/);k&&(v.title=k[1].trim()),O&&(v.thumbnailUrl=O[1].trim()),D&&(v.description=D[1].trim()),L&&(v.footer=L[1].trim());let $={reply:/\[reply\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,pix:/\[pix\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,copy:/\[copy\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,call:/\[call\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,url:/\[url\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g};for(let[K,Q]of Object.entries($)){let G;for(;(G=Q.exec(S))!==null;){let q=G[1].trim(),ie={type:K};switch(K){case"pix":ie.currency=q.match(/currency: (.*?)(?:\n|$)/)?.[1]?.trim(),ie.name=q.match(/name: (.*?)(?:\n|$)/)?.[1]?.trim(),ie.keyType=q.match(/keyType: (.*?)(?:\n|$)/)?.[1]?.trim(),ie.key=q.match(/key: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"reply":ie.displayText=q.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),ie.id=q.match(/id: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"copy":ie.displayText=q.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),ie.copyCode=q.match(/copyCode: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"call":ie.displayText=q.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),ie.phoneNumber=q.match(/phone: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"url":ie.displayText=q.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),ie.url=q.match(/url: (.*?)(?:\n|$)/)?.[1]?.trim();break}Object.keys(ie).length>1&&v.buttons.push(ie)}}await d.buttonMessage(v)}else await d.textMessage({number:s.split("@")[0],delay:g?.delayMessage||1e3,text:S},!1);V("/message/sendText")}I.type==="image"&&(await d.mediaMessage({number:s.split("@")[0],delay:g?.delayMessage||1e3,mediatype:"image",media:I.content.url},null,!1),V("/message/sendMedia")),I.type==="video"&&(await d.mediaMessage({number:s.split("@")[0],delay:g?.delayMessage||1e3,mediatype:"video",media:I.content.url},null,!1),V("/message/sendMedia")),I.type==="audio"&&(await d.audioWhatsapp({number:s.split("@")[0],delay:g?.delayMessage||1e3,encoding:!0,audio:I.content.url},!1),V("/message/sendWhatsAppAudio"));let M=a(y,I.id);M&&await new Promise(S=>setTimeout(S,M*1e3))}if(console.log("input",h),h){if(h.type==="choice input"){let I="",M=h.items;for(let S of M)I+=`\u25B6\uFE0F ${S.content}
`;if(I=I.replace(/\n$/,""),I.includes("[list]")){let S={number:s.split("@")[0],title:"",description:"",buttonText:"",footerText:"",sections:[]},v=I.match(/\[title\]([\s\S]*?)(?=\[description\])/),O=I.match(/\[description\]([\s\S]*?)(?=\[buttonText\])/),k=I.match(/\[buttonText\]([\s\S]*?)(?=\[footerText\])/),D=I.match(/\[footerText\]([\s\S]*?)(?=\[menu\])/);v&&(S.title=v[1].trim()),O&&(S.description=O[1].trim()),k&&(S.buttonText=k[1].trim()),D&&(S.footerText=D[1].trim());let L=I.match(/\[menu\]([\s\S]*?)\[\/menu\]/)?.[1];if(L){let $=L.match(/\[section\]([\s\S]*?)(?=\[section\]|\[\/section\]|\[\/menu\])/g);$&&$.forEach(K=>{let Q=K.match(/title: (.*?)(?:\n|$)/)?.[1]?.trim(),G=K.match(/\[row\]([\s\S]*?)(?=\[row\]|\[\/row\]|\[\/section\]|\[\/menu\])/g),q={title:Q,rows:G?.map(ie=>({title:ie.match(/title: (.*?)(?:\n|$)/)?.[1]?.trim(),description:ie.match(/description: (.*?)(?:\n|$)/)?.[1]?.trim(),rowId:ie.match(/rowId: (.*?)(?:\n|$)/)?.[1]?.trim()}))||[]};S.sections.push(q)})}await d.listMessage(S)}else if(I.includes("[buttons]")){let S={number:s.split("@")[0],thumbnailUrl:void 0,title:"",description:"",footer:"",buttons:[]},v=I.match(/\[thumbnailUrl\]([\s\S]*?)(?=\[title\])/),O=I.match(/\[title\]([\s\S]*?)(?=\[description\])/),k=I.match(/\[description\]([\s\S]*?)(?=\[footer\])/),D=I.match(/\[footer\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url))/);O&&(S.title=O[1].trim()),v&&(S.thumbnailUrl=v[1].trim()),k&&(S.description=k[1].trim()),D&&(S.footer=D[1].trim());let L={reply:/\[reply\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,pix:/\[pix\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,copy:/\[copy\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,call:/\[call\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g,url:/\[url\]([\s\S]*?)(?=\[(?:reply|pix|copy|call|url)|$)/g};for(let[$,K]of Object.entries(L)){let Q;for(;(Q=K.exec(I))!==null;){let G=Q[1].trim(),q={type:$};switch($){case"pix":q.currency=G.match(/currency: (.*?)(?:\n|$)/)?.[1]?.trim(),q.name=G.match(/name: (.*?)(?:\n|$)/)?.[1]?.trim(),q.keyType=G.match(/keyType: (.*?)(?:\n|$)/)?.[1]?.trim(),q.key=G.match(/key: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"reply":q.displayText=G.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),q.id=G.match(/id: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"copy":q.displayText=G.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),q.copyCode=G.match(/copyCode: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"call":q.displayText=G.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),q.phoneNumber=G.match(/phone: (.*?)(?:\n|$)/)?.[1]?.trim();break;case"url":q.displayText=G.match(/displayText: (.*?)(?:\n|$)/)?.[1]?.trim(),q.url=G.match(/url: (.*?)(?:\n|$)/)?.[1]?.trim();break}Object.keys(q).length>1&&S.buttons.push(q)}}await d.buttonMessage(S)}else await d.textMessage({number:s.split("@")[0],delay:g?.delayMessage||1e3,text:I},!1);V("/message/sendText")}await E.integrationSession.update({where:{id:u.id},data:{awaitUser:!0}})}else g?.keepOpen?await E.integrationSession.update({where:{id:u.id},data:{status:"closed"}}):await E.integrationSession.deleteMany({where:{id:u.id}})}}async processTypebot(i,e,t,s,o,n,r,a,c,l,d,u,g,m,h,y){if(s&&r&&r>0){let S=Date.now(),v=new Date(s.updatedAt).getTime(),O=S-v;if(Math.floor(O/1e3/60)>r){m?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:o.id,remoteJid:e}});let D=await this.createNewSession(i,{enabled:o?.enabled,url:n,typebot:a,expire:r,keywordFinish:c,delayMessage:l,unknownMessage:d,listeningFromMe:u,remoteJid:e,pushName:t.pushName,botId:o.id,prefilledVariables:y});if(D.session&&(s=D.session),D.messages.length===0){let L=Te(t.message);if(!L){d&&(this.waMonitor.waInstances[i.name].textMessage({number:e.split("@")[0],delay:l||1e3,text:d},!1),V("/message/sendText"));return}if(c&&L.toLowerCase()===c.toLowerCase()){m?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:o.id,remoteJid:e}});return}try{let $=this.configService.get("TYPEBOT").API_VERSION,K,Q;$==="latest"?(K=`${n}/api/v1/sessions/${D.sessionId}/continueChat`,Q={message:L}):(K=`${n}/api/v1/sendMessage`,Q={message:L,sessionId:D.sessionId});let G=await Ss.post(K,Q);await this.sendWAMessage(i,s,{expire:r,keywordFinish:c,delayMessage:l,unknownMessage:d,listeningFromMe:u,stopBotFromMe:g,keepOpen:m},e,G.data.messages,G.data.input,G.data.clientSideActions)}catch($){this.logger.error($);return}}await this.sendWAMessage(i,s,{expire:r,keywordFinish:c,delayMessage:l,unknownMessage:d,listeningFromMe:u,stopBotFromMe:g,keepOpen:m},e,D.messages,D.input,D.clientSideActions);return}}if(s&&s.status!=="opened")return;if(!s){let S=await this.createNewSession(i,{enabled:o?.enabled,url:n,typebot:a,expire:r,keywordFinish:c,delayMessage:l,unknownMessage:d,listeningFromMe:u,remoteJid:e,pushName:t?.pushName,botId:o.id,prefilledVariables:y});if(S?.session&&(s=S.session),await this.sendWAMessage(i,s,{expire:r,keywordFinish:c,delayMessage:l,unknownMessage:d,listeningFromMe:u,stopBotFromMe:g,keepOpen:m},e,S?.messages,S?.input,S?.clientSideActions),S.messages.length===0){if(!h){d&&(this.waMonitor.waInstances[i.name].textMessage({number:e.split("@")[0],delay:l||1e3,text:d},!1),V("/message/sendText"));return}if(c&&h.toLowerCase()===c.toLowerCase()){m?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:o.id,remoteJid:e}});return}let v;try{let O=this.configService.get("TYPEBOT").API_VERSION,k,D;O==="latest"?(k=`${n}/api/v1/sessions/${S.sessionId}/continueChat`,D={message:h}):(k=`${n}/api/v1/sendMessage`,D={message:h,sessionId:S.sessionId}),v=await Ss.post(k,D),await this.sendWAMessage(i,s,{expire:r,keywordFinish:c,delayMessage:l,unknownMessage:d,listeningFromMe:u,stopBotFromMe:g,keepOpen:m},e,v.data.messages,v.data.input,v.data.clientSideActions)}catch(O){this.logger.error(O);return}}return}if(await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"opened",awaitUser:!1}}),!h){d&&(this.waMonitor.waInstances[i.name].textMessage({number:e.split("@")[0],delay:l||1e3,text:d},!1),V("/message/sendText"));return}if(c&&h.toLowerCase()===c.toLowerCase()){m?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:o.id,remoteJid:e}});return}let w=this.configService.get("TYPEBOT").API_VERSION,E,I;w==="latest"?(E=`${n}/api/v1/sessions/${s.sessionId.split("-")[1]}/continueChat`,I={message:h}):(E=`${n}/api/v1/sendMessage`,I={message:h,sessionId:s.sessionId.split("-")[1]});let M=await Ss.post(E,I);await this.sendWAMessage(i,s,{expire:r,keywordFinish:c,delayMessage:l,unknownMessage:d,listeningFromMe:u,stopBotFromMe:g,keepOpen:m},e,M?.data?.messages,M?.data?.input,M?.data?.clientSideActions)}}});function Mu(p){let i=p.substring(0,2);return(Number(i)===52||Number(i)===54)&&p.length===13?i+p.substring(3):p}function Tu(p){let i=new RegExp(/^(\d{2})(\d{2})\d{1}(\d{8})$/);if(i.test(p)){let e=i.exec(p);if(e&&e[1]==="55"){let t=Number.parseInt(e[3][0]),s=Number.parseInt(e[2]);return t<7||s<31?e[0]:e[1]+e[2]+e[3]}return p}else return p}function X(p){return p=p.replace(/:\d+/,""),p.includes("@g.us")||p.includes("@s.whatsapp.net")||p.includes("@lid")||p.includes("@broadcast")?p:(p=p?.replace(/\s/g,"").replace(/\+/g,"").replace(/\(/g,"").replace(/\)/g,"").split(":")[0].split("@")[0],p.includes("-")&&p.length>=24?(p=p.replace(/[^\d-]/g,""),`${p}@g.us`):(p=p.replace(/\D/g,""),p.length>=18?(p=p.replace(/[^\d-]/g,""),`${p}@g.us`):(p=Mu(p),p=Tu(p),`${p}@s.whatsapp.net`)))}var vt=b(()=>{});import{Prisma as Es}from"@prisma/client";import{isArray as Cu}from"class-validator";var Ke,Is=b(()=>{ys();so();no();oo();F();ge();_();ne();vt();ee();Ke=class p{constructor(i,e,t,s){this.configService=i;this.eventEmitter=e;this.prismaRepository=t;this.chatwootCache=s;this.logger=new A("ChannelStartupService");this.instance={};this.localChatwoot={};this.localProxy={};this.localSettings={};this.localWebhook={};this.chatwootService=new _e(B,this.configService,this.prismaRepository,this.chatwootCache);this.typebotService=new ft(B,this.configService,this.prismaRepository);this.openaiService=new ht(B,this.configService,this.prismaRepository);this.difyService=new mt(B,this.configService,this.prismaRepository)}setInstance(i){this.logger.setInstance(i.instanceName),this.instance.name=i.instanceName,this.instance.id=i.instanceId,this.instance.integration=i.integration,this.instance.number=i.number,this.instance.token=i.token,this.instance.businessId=i.businessId,this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("status.instance",{instanceName:this.instance.name},{instance:this.instance.name,status:"created"})}set instanceName(i){if(this.logger.setInstance(i),!i){this.instance.name=T();return}this.instance.name=i}get instanceName(){return this.instance.name}set instanceId(i){if(!i){this.instance.id=T();return}this.instance.id=i}get instanceId(){return this.instance.id}set integration(i){this.instance.integration=i}get integration(){return this.instance.integration}set number(i){this.instance.number=i}get number(){return this.instance.number}set token(i){this.instance.token=i}get token(){return this.instance.token}get wuid(){return this.instance.wuid}async loadWebhook(){let i=await this.prismaRepository.webhook.findUnique({where:{instanceId:this.instanceId}});this.localWebhook.enabled=i?.enabled,this.localWebhook.webhookBase64=i?.webhookBase64}async loadSettings(){let i=await this.prismaRepository.setting.findUnique({where:{instanceId:this.instanceId}});this.localSettings.rejectCall=i?.rejectCall,this.localSettings.msgCall=i?.msgCall,this.localSettings.groupsIgnore=i?.groupsIgnore,this.localSettings.alwaysOnline=i?.alwaysOnline,this.localSettings.readMessages=i?.readMessages,this.localSettings.readStatus=i?.readStatus,this.localSettings.syncFullHistory=i?.syncFullHistory,this.localSettings.wavoipToken=i?.wavoipToken}async setSettings(i){await this.prismaRepository.setting.upsert({where:{instanceId:this.instanceId},update:{rejectCall:i.rejectCall,msgCall:i.msgCall,groupsIgnore:i.groupsIgnore,alwaysOnline:i.alwaysOnline,readMessages:i.readMessages,readStatus:i.readStatus,syncFullHistory:i.syncFullHistory,wavoipToken:i.wavoipToken},create:{rejectCall:i.rejectCall,msgCall:i.msgCall,groupsIgnore:i.groupsIgnore,alwaysOnline:i.alwaysOnline,readMessages:i.readMessages,readStatus:i.readStatus,syncFullHistory:i.syncFullHistory,wavoipToken:i.wavoipToken,instanceId:this.instanceId}}),this.localSettings.rejectCall=i?.rejectCall,this.localSettings.msgCall=i?.msgCall,this.localSettings.groupsIgnore=i?.groupsIgnore,this.localSettings.alwaysOnline=i?.alwaysOnline,this.localSettings.readMessages=i?.readMessages,this.localSettings.readStatus=i?.readStatus,this.localSettings.syncFullHistory=i?.syncFullHistory,this.localSettings.wavoipToken=i?.wavoipToken,this.localSettings.wavoipToken&&this.localSettings.wavoipToken.length>0&&(this.client.ws.close(),this.client.ws.connect())}async findSettings(){let i=await this.prismaRepository.setting.findUnique({where:{instanceId:this.instanceId}});return i?{rejectCall:i.rejectCall,msgCall:i.msgCall,groupsIgnore:i.groupsIgnore,alwaysOnline:i.alwaysOnline,readMessages:i.readMessages,readStatus:i.readStatus,syncFullHistory:i.syncFullHistory,wavoipToken:i.wavoipToken}:null}async loadChatwoot(){if(!this.configService.get("CHATWOOT").ENABLED)return;let i=await this.prismaRepository.chatwoot.findUnique({where:{instanceId:this.instanceId}});this.localChatwoot.enabled=i?.enabled,this.localChatwoot.accountId=i?.accountId,this.localChatwoot.token=i?.token,this.localChatwoot.url=i?.url,this.localChatwoot.nameInbox=i?.nameInbox,this.localChatwoot.signMsg=i?.signMsg,this.localChatwoot.signDelimiter=i?.signDelimiter,this.localChatwoot.number=i?.number,this.localChatwoot.reopenConversation=i?.reopenConversation,this.localChatwoot.conversationPending=i?.conversationPending,this.localChatwoot.mergeBrazilContacts=i?.mergeBrazilContacts,this.localChatwoot.importContacts=i?.importContacts,this.localChatwoot.importMessages=i?.importMessages,this.localChatwoot.daysLimitImportMessages=i?.daysLimitImportMessages}async setChatwoot(i){if(!this.configService.get("CHATWOOT").ENABLED)return;if(await this.prismaRepository.chatwoot.findUnique({where:{instanceId:this.instanceId}})){await this.prismaRepository.chatwoot.update({where:{instanceId:this.instanceId},data:{enabled:i?.enabled,accountId:i.accountId,token:i.token,url:i.url,nameInbox:i.nameInbox,signMsg:i.signMsg,signDelimiter:i.signMsg?i.signDelimiter:null,number:i.number,reopenConversation:i.reopenConversation,conversationPending:i.conversationPending,mergeBrazilContacts:i.mergeBrazilContacts,importContacts:i.importContacts,importMessages:i.importMessages,daysLimitImportMessages:i.daysLimitImportMessages,organization:i.organization,logo:i.logo,ignoreJids:i.ignoreJids}}),Object.assign(this.localChatwoot,{...i,signDelimiter:i.signMsg?i.signDelimiter:null}),this.clearCacheChatwoot();return}await this.prismaRepository.chatwoot.create({data:{enabled:i?.enabled,accountId:i.accountId,token:i.token,url:i.url,nameInbox:i.nameInbox,signMsg:i.signMsg,number:i.number,reopenConversation:i.reopenConversation,conversationPending:i.conversationPending,mergeBrazilContacts:i.mergeBrazilContacts,importContacts:i.importContacts,importMessages:i.importMessages,daysLimitImportMessages:i.daysLimitImportMessages,organization:i.organization,logo:i.logo,ignoreJids:i.ignoreJids,instanceId:this.instanceId}}),Object.assign(this.localChatwoot,{...i,signDelimiter:i.signMsg?i.signDelimiter:null}),this.clearCacheChatwoot()}async findChatwoot(){if(!this.configService.get("CHATWOOT").ENABLED)return null;let i=await this.prismaRepository.chatwoot.findUnique({where:{instanceId:this.instanceId}});if(!i)return null;let e=Array.isArray(i.ignoreJids)?i.ignoreJids.map(t=>String(t)):[];return{enabled:i?.enabled,accountId:i.accountId,token:i.token,url:i.url,nameInbox:i.nameInbox,signMsg:i.signMsg,signDelimiter:i.signDelimiter||null,reopenConversation:i.reopenConversation,conversationPending:i.conversationPending,mergeBrazilContacts:i.mergeBrazilContacts,importContacts:i.importContacts,importMessages:i.importMessages,daysLimitImportMessages:i.daysLimitImportMessages,organization:i.organization,logo:i.logo,ignoreJids:e}}clearCacheChatwoot(){this.localChatwoot?.enabled&&this.chatwootService.getCache()?.deleteAll(this.instanceName)}async loadProxy(){this.localProxy.enabled=!1,process.env.PROXY_HOST&&(this.localProxy.enabled=!0,this.localProxy.host=process.env.PROXY_HOST,this.localProxy.port=process.env.PROXY_PORT||"80",this.localProxy.protocol=process.env.PROXY_PROTOCOL||"http",this.localProxy.username=process.env.PROXY_USERNAME,this.localProxy.password=process.env.PROXY_PASSWORD);let i=await this.prismaRepository.proxy.findUnique({where:{instanceId:this.instanceId}});i?.enabled&&(this.localProxy.enabled=!0,this.localProxy.host=i?.host,this.localProxy.port=i?.port,this.localProxy.protocol=i?.protocol,this.localProxy.username=i?.username,this.localProxy.password=i?.password)}async setProxy(i){await this.prismaRepository.proxy.upsert({where:{instanceId:this.instanceId},update:{enabled:i?.enabled,host:i.host,port:i.port,protocol:i.protocol,username:i.username,password:i.password},create:{enabled:i?.enabled,host:i.host,port:i.port,protocol:i.protocol,username:i.username,password:i.password,instanceId:this.instanceId}}),Object.assign(this.localProxy,i)}async findProxy(){let i=await this.prismaRepository.proxy.findUnique({where:{instanceId:this.instanceId}});if(!i)throw new H("Proxy not found");return i}async sendDataWebhook(i,e,t=!0,s){let o=this.configService.get("SERVER").URL,n=new Date().getTimezoneOffset()*6e4,a=new Date(Date.now()-n).toISOString(),c=this.configService.get("AUTHENTICATION").EXPOSE_IN_FETCH_INSTANCES,l=this.token||"Apikey not found";await se.emit({instanceName:this.instance.name,origin:p.name,event:i,data:e,serverUrl:o,dateTime:a,sender:this.wuid,apiKey:c&&l?l:null,local:t,integration:s})}formatMXOrARNumber(i){let e=i.substring(0,2);return(Number(e)===52||Number(e)===54)&&i.length===13?e+i.substring(3):i}formatBRNumber(i){let e=new RegExp(/^(\d{2})(\d{2})\d{1}(\d{8})$/);if(e.test(i)){let t=e.exec(i);if(t&&t[1]==="55"){let s=Number.parseInt(t[3][0]),o=Number.parseInt(t[2]);return s<7||o<31?t[0]:t[1]+t[2]+t[3]}return i}else return i}async fetchContacts(i){let e=i?.where?.remoteJid?i?.where?.remoteJid.includes("@")?i.where?.remoteJid:X(i.where?.remoteJid):null,t={instanceId:this.instanceId};return e&&(t.remoteJid=e),await this.prismaRepository.contact.findMany({where:t})}cleanMessageData(i){if(!i)return i;let e={...i},t=e.message.mediaUrl;return delete e.message.base64,e.message&&(e.message.imageMessage&&(e.message.imageMessage={caption:e.message.imageMessage.caption}),e.message.videoMessage&&(e.message.videoMessage={caption:e.message.videoMessage.caption}),e.message.audioMessage&&(e.message.audioMessage={seconds:e.message.audioMessage.seconds}),e.message.stickerMessage&&(e.message.stickerMessage={}),e.message.documentMessage&&(e.message.documentMessage={caption:e.message.documentMessage.caption,name:e.message.documentMessage.name}),e.message.documentWithCaptionMessage&&(e.message.documentWithCaptionMessage={caption:e.message.documentWithCaptionMessage.caption,name:e.message.documentWithCaptionMessage.name})),t&&(e.message.mediaUrl=t),e}async fetchMessages(i){let e=i?.where?.key,t={};i?.where?.messageTimestamp&&i.where.messageTimestamp.gte&&i.where.messageTimestamp.lte&&(t.messageTimestamp={gte:Math.floor(new Date(i.where.messageTimestamp.gte).getTime()/1e3),lte:Math.floor(new Date(i.where.messageTimestamp.lte).getTime()/1e3)});let s=await this.prismaRepository.message.count({where:{instanceId:this.instanceId,id:i?.where?.id,source:i?.where?.source,messageType:i?.where?.messageType,...t,AND:[e?.id?{key:{path:["id"],equals:e?.id}}:{},e?.fromMe?{key:{path:["fromMe"],equals:e?.fromMe}}:{},e?.remoteJid?{key:{path:["remoteJid"],equals:e?.remoteJid}}:{},e?.participants?{key:{path:["participants"],equals:e?.participants}}:{}]}});i?.offset||(i.offset=50),i?.page||(i.page=1);let o=await this.prismaRepository.message.findMany({where:{instanceId:this.instanceId,id:i?.where?.id,source:i?.where?.source,messageType:i?.where?.messageType,...t,AND:[e?.id?{key:{path:["id"],equals:e?.id}}:{},e?.fromMe?{key:{path:["fromMe"],equals:e?.fromMe}}:{},e?.remoteJid?{key:{path:["remoteJid"],equals:e?.remoteJid}}:{},e?.participants?{key:{path:["participants"],equals:e?.participants}}:{}]},orderBy:{messageTimestamp:"desc"},skip:i.offset*(i?.page===1?0:i?.page-1),take:i.offset,select:{id:!0,key:!0,pushName:!0,messageType:!0,message:!0,messageTimestamp:!0,instanceId:!0,source:!0,contextInfo:!0,MessageUpdate:{select:{status:!0}}}});return{messages:{total:s,pages:Math.ceil(s/i.offset),currentPage:i.page,records:o}}}async fetchStatusMessage(i){return await this.prismaRepository.messageUpdate.findMany({where:{instanceId:this.instanceId,remoteJid:i.where?.remoteJid,keyId:i.where?.id},skip:i.offset*(i?.page===1?0:i?.page-1),take:i.offset})}async fetchChats(i){let e=i?.where?.remoteJid?i?.where?.remoteJid.includes("@")?i.where?.remoteJid:X(i.where?.remoteJid):null,t={instanceId:this.instanceId};e&&(t.remoteJid=e);let s=i?.where?.messageTimestamp?.gte&&i?.where?.messageTimestamp?.lte?Es.sql`
          AND "Message"."messageTimestamp" >= ${Math.floor(new Date(i.where.messageTimestamp.gte).getTime()/1e3)}
          AND "Message"."messageTimestamp" <= ${Math.floor(new Date(i.where.messageTimestamp.lte).getTime()/1e3)}`:Es.sql``,o=await this.prismaRepository.$queryRaw`
        WITH rankedMessages AS (
          SELECT DISTINCT ON ("Contact"."remoteJid")
            "Contact"."id",
            "Contact"."remoteJid",
            "Contact"."pushName",
            "Contact"."profilePicUrl",
            COALESCE(
              to_timestamp("Message"."messageTimestamp"::double precision), 
              "Contact"."updatedAt"
            ) as "updatedAt",
            "Chat"."createdAt" as "windowStart",
            "Chat"."createdAt" + INTERVAL '24 hours' as "windowExpires",
            CASE 
              WHEN "Chat"."createdAt" + INTERVAL '24 hours' > NOW() THEN true 
              ELSE false 
            END as "windowActive",
            "Message"."id" AS lastMessageId,
            "Message"."key" AS lastMessage_key,
            "Message"."pushName" AS lastMessagePushName,
            "Message"."participant" AS lastMessageParticipant,
            "Message"."messageType" AS lastMessageMessageType,
            "Message"."message" AS lastMessageMessage,
            "Message"."contextInfo" AS lastMessageContextInfo,
            "Message"."source" AS lastMessageSource,
            "Message"."messageTimestamp" AS lastMessageMessageTimestamp,
            "Message"."instanceId" AS lastMessageInstanceId,
            "Message"."sessionId" AS lastMessageSessionId,
            "Message"."status" AS lastMessageStatus
          FROM "Contact"
          INNER JOIN "Message" ON "Message"."key"->>'remoteJid' = "Contact"."remoteJid"
          LEFT JOIN "Chat" ON "Chat"."remoteJid" = "Contact"."remoteJid" 
            AND "Chat"."instanceId" = "Contact"."instanceId"
          WHERE 
            "Contact"."instanceId" = ${this.instanceId}
            AND "Message"."instanceId" = ${this.instanceId}
            ${e?Es.sql`AND "Contact"."remoteJid" = ${e}`:Es.sql``}
            ${s}
          ORDER BY 
            "Contact"."remoteJid",
            "Message"."messageTimestamp" DESC
        )
        SELECT * FROM rankedMessages
        ORDER BY "updatedAt" DESC NULLS LAST;
    `;return o&&Cu(o)&&o.length>0?o.map(r=>{let a=r.lastMessageId?{id:r.lastMessageId,key:r.lastMessageKey,pushName:r.lastMessagePushName,participant:r.lastMessageParticipant,messageType:r.lastMessageMessageType,message:r.lastMessageMessage,contextInfo:r.lastMessageContextInfo,source:r.lastMessageSource,messageTimestamp:r.lastMessageMessageTimestamp,instanceId:r.lastMessageInstanceId,sessionId:r.lastMessageSessionId,status:r.lastMessageStatus}:void 0;return{id:r.id,remoteJid:r.remoteJid,pushName:r.pushName,profilePicUrl:r.profilePicUrl,updatedAt:r.updatedAt,windowStart:r.windowStart,windowExpires:r.windowExpires,windowActive:r.windowActive,lastMessage:a?this.cleanMessageData(a):void 0}}):[]}}});import vu from"axios";import{isBase64 as Ms,isURL as ot}from"class-validator";import Au from"form-data";import Ts from"mime-types";import{join as Ru}from"path";var Cs,Gr=b(()=>{Tt();F();Is();ge();ne();vt();ee();Cs=class extends Ke{constructor(e,t,s,o,n){super(e,t,s,n);this.configService=e;this.eventEmitter=t;this.prismaRepository=s;this.cache=o;this.chatwootCache=n;this.stateConnection={state:"open"};this.client=null}get connectionStatus(){return this.stateConnection}async closeClient(){this.stateConnection={state:"close"}}get qrCode(){return{pairingCode:this.instance.qrcode?.pairingCode,code:this.instance.qrcode?.code,base64:this.instance.qrcode?.base64,count:this.instance.qrcode?.count}}async logoutInstance(){await this.closeClient()}setInstance(e){this.logger.setInstance(e.instanceId),this.instance.name=e.instanceName,this.instance.id=e.instanceId,this.instance.integration=e.integration,this.instance.number=e.number,this.instance.token=e.token,this.instance.businessId=e.businessId,this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("status.instance",{instanceName:this.instance.name,instanceId:this.instance.id,integration:e.integration},{instance:this.instance.name,status:"created"})}async profilePicture(e){return{wuid:X(e),profilePictureUrl:null}}async getProfileName(){return null}async profilePictureUrl(){return null}async getProfileStatus(){return null}async connectToWhatsapp(e){if(!e){this.loadChatwoot();return}try{this.eventHandler(e)}catch(t){throw this.logger.error(t),new U(t?.toString())}}async eventHandler(e){try{let t;if(e.message){t={key:{id:e.key.id||T(),remoteJid:e.key.remoteJid,fromMe:e.key.fromMe,profilePicUrl:e.profilePicUrl},pushName:e.pushName,message:e.message,messageType:e.messageType,messageTimestamp:Math.round(new Date().getTime()/1e3),source:"unknown",instanceId:this.instanceId};let o=e?.message?.audioMessage;if(this.configService.get("OPENAI").ENABLED&&o){let n=await this.prismaRepository.openaiSetting.findFirst({where:{instanceId:this.instanceId},include:{OpenaiCreds:!0}});n&&n.openaiCredsId&&n.speechToText&&e?.message?.audioMessage&&(t.message.speechToText=await this.openaiService.speechToText(n.OpenaiCreds,e,this.client.updateMediaMessage))}if(this.logger.log(t),this.sendDataWebhook("messages.upsert",t),await Je.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:t.key.remoteJid,msg:t,pushName:t.pushName}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled){let n=await this.chatwootService.eventWhatsapp("messages.upsert",{instanceName:this.instance.name,instanceId:this.instanceId},t);n?.id&&(t.chatwootMessageId=n.id,t.chatwootInboxId=n.id,t.chatwootConversationId=n.id)}await this.prismaRepository.message.create({data:t}),await this.updateContact({remoteJid:t.key.remoteJid,pushName:t.pushName,profilePicUrl:e.profilePicUrl})}}catch(t){this.logger.error(t)}}async updateContact(e){let t={remoteJid:e.remoteJid,pushName:e?.pushName,instanceId:this.instanceId,profilePicUrl:e?.profilePicUrl};await this.prismaRepository.contact.findFirst({where:{remoteJid:e.remoteJid,instanceId:this.instanceId}})?await this.prismaRepository.contact.updateMany({where:{remoteJid:e.remoteJid,instanceId:this.instanceId},data:t}):await this.prismaRepository.contact.create({data:t}),this.sendDataWebhook("contacts.upsert",t),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&await this.chatwootService.eventWhatsapp("contacts.update",{instanceName:this.instance.name,instanceId:this.instanceId,integration:this.instance.integration},t);let o=await this.prismaRepository.chat.findFirst({where:{instanceId:this.instanceId,remoteJid:e.remoteJid}});if(o){let r={remoteJid:e.remoteJid,instanceId:this.instanceId};this.sendDataWebhook("chats.update",r),await this.prismaRepository.chat.updateMany({where:{remoteJid:o.remoteJid},data:r})}let n={remoteJid:e.remoteJid,instanceId:this.instanceId};this.sendDataWebhook("chats.upsert",n),await this.prismaRepository.chat.create({data:n})}async sendMessageWithTyping(e,t,s,o,n=!1){try{let r,a;if(s?.quoted){let m=s?.quoted?.key;if(!m)throw"Message not found";r=m}s.delay&&await new Promise(g=>setTimeout(g,s.delay)),s?.webhookUrl&&(a=s.webhookUrl);let c,l=T(),d;if(t?.mediaType==="image"?d={key:{fromMe:!0,id:l,remoteJid:e},message:{base64:Ms(t.media)?t.media:void 0,mediaUrl:ot(t.media)?t.media:void 0,quoted:r},messageType:"imageMessage",messageTimestamp:Math.round(new Date().getTime()/1e3),webhookUrl:a,source:"unknown",instanceId:this.instanceId}:t?.mediaType==="video"?d={key:{fromMe:!0,id:l,remoteJid:e},message:{base64:Ms(t.media)?t.media:void 0,mediaUrl:ot(t.media)?t.media:void 0,quoted:r},messageType:"videoMessage",messageTimestamp:Math.round(new Date().getTime()/1e3),webhookUrl:a,source:"unknown",instanceId:this.instanceId}:t?.mediaType==="audio"?(d={key:{fromMe:!0,id:l,remoteJid:e},message:{base64:Ms(t.media)?t.media:void 0,mediaUrl:ot(t.media)?t.media:void 0,quoted:r},messageType:"audioMessage",messageTimestamp:Math.round(new Date().getTime()/1e3),webhookUrl:a,source:"unknown",instanceId:this.instanceId},c={buffer:Buffer.from(t.media,"base64"),mimetype:"audio/mp4",originalname:`${l}.mp4`}):t?.mediaType==="document"?d={key:{fromMe:!0,id:l,remoteJid:e},message:{base64:Ms(t.media)?t.media:void 0,mediaUrl:ot(t.media)?t.media:void 0,quoted:r},messageType:"documentMessage",messageTimestamp:Math.round(new Date().getTime()/1e3),webhookUrl:a,source:"unknown",instanceId:this.instanceId}:t.buttonMessage?d={key:{fromMe:!0,id:l,remoteJid:e},message:{...t.buttonMessage,buttons:t.buttonMessage.buttons,footer:t.buttonMessage.footer,body:t.buttonMessage.body,quoted:r},messageType:"buttonMessage",messageTimestamp:Math.round(new Date().getTime()/1e3),webhookUrl:a,source:"unknown",instanceId:this.instanceId}:t.listMessage?d={key:{fromMe:!0,id:l,remoteJid:e},message:{...t.listMessage,quoted:r},messageType:"listMessage",messageTimestamp:Math.round(new Date().getTime()/1e3),webhookUrl:a,source:"unknown",instanceId:this.instanceId}:d={key:{fromMe:!0,id:l,remoteJid:e},message:{...t,quoted:r},messageType:"conversation",messageTimestamp:Math.round(new Date().getTime()/1e3),webhookUrl:a,source:"unknown",instanceId:this.instanceId},d.message.contextInfo&&(d.contextInfo={...d.message.contextInfo}),d.contextInfo?.stanzaId){let g={id:d.contextInfo.stanzaId},m=await this.prismaRepository.message.findFirst({where:{instanceId:this.instanceId,key:g}});m&&(d.contextInfo.quotedMessage=m.message)}let u=d.message.base64;if(delete d.message.base64,(u||o||c)&&this.configService.get("S3").ENABLE)try{let g=c?.buffer||o?.buffer,m=u?Buffer.from(u,"base64"):g,h,y=c?.mimetype||o.mimetype;d.messageType==="documentMessage"?(h="document",y=y||"application/pdf"):d.messageType==="imageMessage"?(h="image",y=y||"image/png"):d.messageType==="audioMessage"?(h="audio",y=y||"audio/mp4"):d.messageType==="videoMessage"&&(h="video",y=y||"video/mp4");let w=`${d.key.id}.${y.split("/")[1]}`,E=m.byteLength,I=Ru(`${this.instance.id}`,d.key.remoteJid,h,w);await it(I,m,E,{"Content-Type":y});let M=await Ue(I);d.message.mediaUrl=M}catch(g){this.logger.error(["Error on upload file to minio",g?.message,g?.stack])}return this.logger.log(d),this.sendDataWebhook("send.message",d),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&!n&&this.chatwootService.eventWhatsapp("send.message",{instanceName:this.instance.name,instanceId:this.instanceId},d),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&n&&await Je.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:d.key.remoteJid,msg:d,pushName:d.pushName}),await this.prismaRepository.message.create({data:d}),d}catch(r){throw this.logger.error(r),new f(r.toString())}}async textMessage(e,t=!1){return await this.sendMessageWithTyping(e.number,{conversation:e.text},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},null,t)}async prepareMediaMessage(e){try{if(e.mediatype==="document"&&!e.fileName){let n=new RegExp(/.*\/(.+?)\./).exec(e.media);e.fileName=n[1]}e.mediatype==="image"&&!e.fileName&&(e.fileName="image.png"),e.mediatype==="video"&&!e.fileName&&(e.fileName="video.mp4");let t,s={caption:e?.caption,fileName:e.fileName,mediaType:e.mediatype,media:e.media,gifPlayback:!1};return ot(e.media)?t=Ts.lookup(e.media):t=Ts.lookup(e.fileName),s.mimetype=t,s}catch(t){throw this.logger.error(t),new U(t?.toString()||t)}}async mediaMessage(e,t,s=!1){let o={...e};t&&(o.media=t.buffer.toString("base64"));let n=await this.prepareMediaMessage(o);return await this.sendMessageWithTyping(e.number,{...n},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},t,s)}async processAudio(e,t,s){t=t.replace(/\D/g,"");let o=`${t}-${new Date().getTime()}`;if(process.env.API_AUDIO_CONVERTER)try{this.logger.verbose("Using audio converter API");let n=new Au;s?n.append("file",s.buffer,{filename:s.originalname,contentType:s.mimetype}):ot(e)?n.append("url",e):n.append("base64",e),n.append("format","mp4");let r=await vu.post(process.env.API_AUDIO_CONVERTER,n,{headers:{...n.getHeaders(),apikey:process.env.API_AUDIO_CONVERTER_KEY}});if(!r?.data?.audio)throw new U("Failed to convert audio");return{fileName:`${o}.mp4`,mediaType:"audio",media:r?.data?.audio,mimetype:"audio/mpeg"}}catch(n){throw this.logger.error(n?.response?.data||n),new U(n?.response?.data?.message||n?.toString()||n)}else{let n,r={fileName:`${o}.mp3`,mediaType:"audio",media:e,mimetype:"audio/mpeg"};return ot(e)?n=Ts.lookup(e).toString():n=Ts.lookup(r.fileName).toString(),r.mimetype=n,r}}async audioWhatsapp(e,t,s=!1){let o={...e};if(t?.buffer)o.audio=t.buffer.toString("base64");else throw console.error("El archivo o buffer no est\uFFFD definido correctamente."),new Error("File or buffer is undefined.");let n=await this.processAudio(o.audio,e.number,t);return await this.sendMessageWithTyping(e.number,{...n},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},t,s)}async buttonMessage(e,t=!1){return await this.sendMessageWithTyping(e.number,{buttonMessage:{title:e.title,description:e.description,footer:e.footer,buttons:e.buttons}},{delay:e?.delay,presence:"composing",quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},null,t)}async locationMessage(){throw new f("Method not available on Evolution Channel")}async listMessage(){throw new f("Method not available on Evolution Channel")}async templateMessage(){throw new f("Method not available on Evolution Channel")}async contactMessage(){throw new f("Method not available on Evolution Channel")}async reactionMessage(){throw new f("Method not available on Evolution Channel")}async getBase64FromMediaMessage(){throw new f("Method not available on Evolution Channel")}async deleteMessage(){throw new f("Method not available on Evolution Channel")}async mediaSticker(){throw new f("Method not available on Evolution Channel")}async pollMessage(){throw new f("Method not available on Evolution Channel")}async statusMessage(){throw new f("Method not available on Evolution Channel")}async reloadConnection(){throw new f("Method not available on Evolution Channel")}async whatsappNumber(){throw new f("Method not available on Evolution Channel")}async markMessageAsRead(){throw new f("Method not available on Evolution Channel")}async archiveChat(){throw new f("Method not available on Evolution Channel")}async markChatUnread(){throw new f("Method not available on Evolution Channel")}async fetchProfile(){throw new f("Method not available on Evolution Channel")}async offerCall(){throw new f("Method not available on WhatsApp Business API")}async sendPresence(){throw new f("Method not available on Evolution Channel")}async setPresence(){throw new f("Method not available on Evolution Channel")}async fetchPrivacySettings(){throw new f("Method not available on Evolution Channel")}async updatePrivacySettings(){throw new f("Method not available on Evolution Channel")}async fetchBusinessProfile(){throw new f("Method not available on Evolution Channel")}async updateProfileName(){throw new f("Method not available on Evolution Channel")}async updateProfileStatus(){throw new f("Method not available on Evolution Channel")}async updateProfilePicture(){throw new f("Method not available on Evolution Channel")}async removeProfilePicture(){throw new f("Method not available on Evolution Channel")}async blockUser(){throw new f("Method not available on Evolution Channel")}async updateMessage(){throw new f("Method not available on Evolution Channel")}async createGroup(){throw new f("Method not available on Evolution Channel")}async updateGroupPicture(){throw new f("Method not available on Evolution Channel")}async updateGroupSubject(){throw new f("Method not available on Evolution Channel")}async updateGroupDescription(){throw new f("Method not available on Evolution Channel")}async findGroup(){throw new f("Method not available on Evolution Channel")}async fetchAllGroups(){throw new f("Method not available on Evolution Channel")}async inviteCode(){throw new f("Method not available on Evolution Channel")}async inviteInfo(){throw new f("Method not available on Evolution Channel")}async sendInvite(){throw new f("Method not available on Evolution Channel")}async acceptInviteCode(){throw new f("Method not available on Evolution Channel")}async revokeInviteCode(){throw new f("Method not available on Evolution Channel")}async findParticipants(){throw new f("Method not available on Evolution Channel")}async updateGParticipant(){throw new f("Method not available on Evolution Channel")}async updateGSetting(){throw new f("Method not available on Evolution Channel")}async toggleEphemeral(){throw new f("Method not available on Evolution Channel")}async leaveGroup(){throw new f("Method not available on Evolution Channel")}async fetchLabels(){throw new f("Method not available on Evolution Channel")}async handleLabel(){throw new f("Method not available on Evolution Channel")}async receiveMobileCode(){throw new f("Method not available on Evolution Channel")}async fakeCall(){throw new f("Method not available on Evolution Channel")}}});var de,ro=b(()=>{de={0:"ERROR",1:"PENDING",2:"SERVER_ACK",3:"DELIVERY_ACK",4:"READ",5:"PLAYED"}});import rt from"axios";import{arrayUnique as ao,isURL as co}from"class-validator";import Pu from"form-data";import{createReadStream as Du}from"fs";import vs from"mime-types";import{join as xu}from"path";var As,jr=b(()=>{Tt();F();Is();ge();ne();vt();ro();As=class extends Ke{constructor(e,t,s,o,n,r,a){super(e,t,s,n);this.configService=e;this.eventEmitter=t;this.prismaRepository=s;this.cache=o;this.chatwootCache=n;this.baileysCache=r;this.providerFiles=a;this.stateConnection={state:"open"}}get connectionStatus(){return this.stateConnection}async closeClient(){this.stateConnection={state:"close"}}get qrCode(){return{pairingCode:this.instance.qrcode?.pairingCode,code:this.instance.qrcode?.code,base64:this.instance.qrcode?.base64,count:this.instance.qrcode?.count}}async logoutInstance(){await this.closeClient()}isMediaMessage(e){return e.document||e.image||e.audio||e.video}async post(e,t){try{let s=this.configService.get("WA_BUSINESS").URL,o=this.configService.get("WA_BUSINESS").VERSION;s=`${s}/${o}/${this.number}/${t}`;let n={"Content-Type":"application/json",Authorization:`Bearer ${this.token}`};return(await rt.post(s,e,{headers:n})).data}catch(s){return s.response?.data?.error}}async profilePicture(e){return{wuid:X(e),profilePictureUrl:null}}async getProfileName(){return null}async profilePictureUrl(){return null}async getProfileStatus(){return null}async setWhatsappBusinessProfile(e){let t={messaging_product:"whatsapp",about:e.about,address:e.address,description:e.description,vertical:e.vertical,email:e.email,websites:e.websites,profile_picture_handle:e.profilehandle};return await this.post(t,"whatsapp_business_profile")}async connectToWhatsapp(e){if(!e)return;let t=e.entry[0].changes[0].value;try{this.loadChatwoot(),this.eventHandler(t),this.phoneNumber=X(t.messages?t.messages[0].from:t.statuses[0]?.recipient_id)}catch(s){throw this.logger.error(s),new U(s?.toString())}}async downloadMediaMessage(e){try{let t=e[e.type].id,s=this.configService.get("WA_BUSINESS").URL,o=this.configService.get("WA_BUSINESS").VERSION;s=`${s}/${o}/${t}`;let n={"Content-Type":"application/json",Authorization:`Bearer ${this.token}`},r=await rt.get(s,{headers:n});return r=await rt.get(r.data.url,{headers:n,responseType:"arraybuffer"}),r.data}catch(t){this.logger.error(t)}}messageMediaJson(e){let t=e.messages[0],s=t.type+"Message";return s={[s]:t[t.type]},t.context&&(s={...s,contextInfo:{stanzaId:t.context.id}}),s}messageInteractiveJson(e){let t=e.messages[0],s={conversation:t.interactive[t.interactive.type].title};return t.context&&(s={...s,contextInfo:{stanzaId:t.context.id}}),s}messageButtonJson(e){let t=e.messages[0],s={conversation:e.messages[0].button?.text};return t.context&&(s={...s,contextInfo:{stanzaId:t.context.id}}),s}messageReactionJson(e){let t=e.messages[0],s={reactionMessage:{key:{id:t.reaction.message_id},text:t.reaction.emoji}};return t.context&&(s={...s,contextInfo:{stanzaId:t.context.id}}),s}messageTextJson(e){let t,s=e.messages[0];return s.from===e.metadata.phone_number_id?(t={extendedTextMessage:{text:s.text.body}},s.context&&(t={...t,contextInfo:{stanzaId:s.context.id}})):(t={conversation:s.text.body},s.context&&(t={...t,contextInfo:{stanzaId:s.context.id}})),t}messageContactsJson(e){let t=e.messages[0],s={},o=n=>{let r=`BEGIN:VCARD
VERSION:3.0
N:${n.name.formatted_name}
FN:${n.name.formatted_name}
`;return n.org&&(r+=`ORG:${n.org.company};
`),n.emails&&(r+=`EMAIL:${n.emails[0].email}
`),n.urls&&(r+=`URL:${n.urls[0].url}
`),n.phones[0]?.wa_id||(n.phones[0].wa_id=X(n.phones[0].phone)),r+=`item1.TEL;waid=${n.phones[0]?.wa_id}:${n.phones[0].phone}
item1.X-ABLabel:Celular
END:VCARD`,r};return t.contacts.length===1?s.contactMessage={displayName:t.contacts[0].name.formatted_name,vcard:o(t.contacts[0])}:s.contactsArrayMessage={displayName:`${t.length} contacts`,contacts:t.map(n=>({displayName:n.name.formatted_name,vcard:o(n)}))},t.context&&(s={...s,contextInfo:{stanzaId:t.context.id}}),s}renderMessageType(e){let t;switch(e){case"text":t="conversation";break;case"image":t="imageMessage";break;case"video":t="videoMessage";break;case"audio":t="audioMessage";break;case"document":t="documentMessage";break;case"template":t="conversation";break;default:t="conversation";break}return t}async messageHandle(e,t,s){try{let o,n;if(e.contacts&&(n=e.contacts[0].profile.name),e.messages){let r={id:e.messages[0].id,remoteJid:this.phoneNumber,fromMe:e.messages[0].from===e.metadata.phone_number_id};if(this.isMediaMessage(e?.messages[0]))if(o={key:r,pushName:n,message:this.messageMediaJson(e),contextInfo:this.messageMediaJson(e)?.contextInfo,messageType:this.renderMessageType(e.messages[0].type),messageTimestamp:parseInt(e.messages[0].timestamp),source:"unknown",instanceId:this.instanceId},this.configService.get("S3").ENABLE)try{let l=e,d=l.messages[0][l.messages[0].type].id,u=this.configService.get("WA_BUSINESS").URL,g=this.configService.get("WA_BUSINESS").VERSION;u=`${u}/${g}/${d}`;let m={"Content-Type":"application/json",Authorization:`Bearer ${this.token}`},h=await rt.get(u,{headers:m}),y=await rt.get(h.data.url,{headers:m,responseType:"arraybuffer"}),w;l.messages[0].document?w="document":l.messages[0].image?w="image":l.messages[0].audio?w="audio":w="video";let E=h.data?.mime_type||h.headers["content-type"],I=h.headers["content-disposition"],M=`${l.messages[0].id}.${E.split("/")[1]}`;if(I){let D=I.match(/filename="(.+?)"/);D&&(M=D[1])}let S=h.headers["content-length"]||y.data.byteLength,v=xu(`${this.instance.id}`,r.remoteJid,w,M);await it(v,y.data,S,{"Content-Type":E});let O=await this.prismaRepository.message.create({data:o});await this.prismaRepository.media.create({data:{messageId:O.id,instanceId:this.instanceId,type:w,fileName:v,mimetype:E}});let k=await Ue(v);o.message.mediaUrl=k,o.message.base64=y.data.toString("base64")}catch(l){this.logger.error(["Error on upload file to minio",l?.message,l?.stack])}else{let l=await this.downloadMediaMessage(e?.messages[0]);o.message.base64=l.toString("base64")}else e?.messages[0].interactive?o={key:r,pushName:n,message:{...this.messageInteractiveJson(e)},contextInfo:this.messageInteractiveJson(e)?.contextInfo,messageType:"interactiveMessage",messageTimestamp:parseInt(e.messages[0].timestamp),source:"unknown",instanceId:this.instanceId}:e?.messages[0].button?o={key:r,pushName:n,message:{...this.messageButtonJson(e)},contextInfo:this.messageButtonJson(e)?.contextInfo,messageType:"buttonMessage",messageTimestamp:parseInt(e.messages[0].timestamp),source:"unknown",instanceId:this.instanceId}:e?.messages[0].reaction?o={key:r,pushName:n,message:{...this.messageReactionJson(e)},contextInfo:this.messageReactionJson(e)?.contextInfo,messageType:"reactionMessage",messageTimestamp:parseInt(e.messages[0].timestamp),source:"unknown",instanceId:this.instanceId}:e?.messages[0].contacts?o={key:r,pushName:n,message:{...this.messageContactsJson(e)},contextInfo:this.messageContactsJson(e)?.contextInfo,messageType:"contactMessage",messageTimestamp:parseInt(e.messages[0].timestamp),source:"unknown",instanceId:this.instanceId}:o={key:r,pushName:n,message:this.messageTextJson(e),contextInfo:this.messageTextJson(e)?.contextInfo,messageType:this.renderMessageType(e.messages[0].type),messageTimestamp:parseInt(e.messages[0].timestamp),source:"unknown",instanceId:this.instanceId};if(this.localSettings.readMessages,this.configService.get("OPENAI").ENABLED){let l=await this.prismaRepository.openaiSetting.findFirst({where:{instanceId:this.instanceId},include:{OpenaiCreds:!0}}),d=e?.messages[0]?.audio;l&&l.openaiCredsId&&l.speechToText&&d&&(o.message.speechToText=await this.openaiService.speechToText(l.OpenaiCreds,{message:{mediaUrl:o.message.mediaUrl,...o}},()=>{}))}if(this.logger.log(o),this.sendDataWebhook("messages.upsert",o),await Je.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:o.key.remoteJid,msg:o,pushName:o.pushName}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled){let l=await this.chatwootService.eventWhatsapp("messages.upsert",{instanceName:this.instance.name,instanceId:this.instanceId},o);l?.id&&(o.chatwootMessageId=l.id,o.chatwootInboxId=l.id,o.chatwootConversationId=l.id)}this.isMediaMessage(e?.messages[0])||await this.prismaRepository.message.create({data:o});let a=await this.prismaRepository.contact.findFirst({where:{instanceId:this.instanceId,remoteJid:r.remoteJid}}),c={remoteJid:e.contacts[0].profile.phone,pushName:n,instanceId:this.instanceId};if(c.remoteJid==="status@broadcast")return;if(a){let l={remoteJid:e.contacts[0].profile.phone,pushName:n,instanceId:this.instanceId};this.sendDataWebhook("contacts.update",l),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&await this.chatwootService.eventWhatsapp("contacts.update",{instanceName:this.instance.name,instanceId:this.instanceId},l),await this.prismaRepository.contact.updateMany({where:{remoteJid:a.remoteJid},data:l});return}this.sendDataWebhook("contacts.upsert",c),this.prismaRepository.contact.create({data:c})}if(e.statuses)for await(let r of e.statuses){let a={id:r.id,remoteJid:this.phoneNumber,fromMe:this.phoneNumber===e.metadata.phone_number_id};if(s?.groups_ignore&&a.remoteJid.includes("@g.us"))return;if(a.remoteJid!=="status@broadcast"&&!a?.remoteJid?.match(/(:\d+)/)){let c=await this.prismaRepository.message.findFirst({where:{instanceId:this.instanceId,key:{path:["id"],equals:a.id}}});if(!c)return;if(r.message===null&&r.status===void 0){this.sendDataWebhook("messages.delete",a);let d={messageId:c.id,keyId:a.id,remoteJid:a.remoteJid,fromMe:a.fromMe,participant:a?.remoteJid,status:"DELETED",instanceId:this.instanceId};await this.prismaRepository.messageUpdate.create({data:d}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("messages.delete",{instanceName:this.instance.name,instanceId:this.instanceId},{key:a});return}let l={messageId:c.id,keyId:a.id,remoteJid:a.remoteJid,fromMe:a.fromMe,participant:a?.remoteJid,status:r.status.toUpperCase(),instanceId:this.instanceId};this.sendDataWebhook("messages.update",l),await this.prismaRepository.messageUpdate.create({data:l}),c.webhookUrl&&await rt.post(c.webhookUrl,l)}}}catch(o){this.logger.error(o)}}convertMessageToRaw(e,t){let s;return e?.conversation?t?.context?.message_id?(s={...e,contextInfo:{stanzaId:t.context.message_id}},s):(s=e,s):e?.mediaType==="image"?t?.context?.message_id?(s={imageMessage:e,contextInfo:{stanzaId:t.context.message_id}},s):{imageMessage:e}:e?.mediaType==="video"?t?.context?.message_id?(s={videoMessage:e,contextInfo:{stanzaId:t.context.message_id}},s):{videoMessage:e}:e?.mediaType==="audio"?t?.context?.message_id?(s={audioMessage:e,contextInfo:{stanzaId:t.context.message_id}},s):{audioMessage:e}:e?.mediaType==="document"?t?.context?.message_id?(s={documentMessage:e,contextInfo:{stanzaId:t.context.message_id}},s):{documentMessage:e}:e}async eventHandler(e){let t=this.configService.get("DATABASE"),s=await this.findSettings();this.messageHandle(e,t,s)}async sendMessageWithTyping(e,t,s,o=!1){try{let n,r,a=s?.linkPreview!=!1?void 0:!1;if(s?.quoted){let g=s?.quoted?.key;if(!g)throw"Message not found";n=g}s?.webhookUrl&&(r=s.webhookUrl);let c,l=await(async()=>{if(t.reactionMessage)return c={messaging_product:"whatsapp",recipient_type:"individual",type:"reaction",to:e.replace(/\D/g,""),reaction:{message_id:t.reactionMessage.key.id,emoji:t.reactionMessage.text}},n&&(c.context={message_id:n.id}),await this.post(c,"messages");if(t.locationMessage)return c={messaging_product:"whatsapp",recipient_type:"individual",type:"location",to:e.replace(/\D/g,""),location:{longitude:t.locationMessage.degreesLongitude,latitude:t.locationMessage.degreesLatitude,name:t.locationMessage.name,address:t.locationMessage.address}},n&&(c.context={message_id:n.id}),await this.post(c,"messages");if(t.contacts)return c={messaging_product:"whatsapp",recipient_type:"individual",type:"contacts",to:e.replace(/\D/g,""),contacts:t.contacts},n&&(c.context={message_id:n.id}),t=t.message,await this.post(c,"messages");if(t.conversation)return c={messaging_product:"whatsapp",recipient_type:"individual",type:"text",to:e.replace(/\D/g,""),text:{body:t.conversation,preview_url:a}},n&&(c.context={message_id:n.id}),await this.post(c,"messages");if(t.media){let u=t.mimetype?.startsWith("image/");return c={messaging_product:"whatsapp",recipient_type:"individual",type:t.mediaType,to:e.replace(/\D/g,""),[t.mediaType]:{[t.type]:t.id,preview_url:a,...t.fileName&&!u&&{filename:t.fileName},caption:t.caption}},n&&(c.context={message_id:n.id}),await this.post(c,"messages")}if(t.audio)return c={messaging_product:"whatsapp",recipient_type:"individual",type:"audio",to:e.replace(/\D/g,""),audio:{[t.type]:t.id}},n&&(c.context={message_id:n.id}),await this.post(c,"messages");if(t.buttons){c={messaging_product:"whatsapp",recipient_type:"individual",to:e.replace(/\D/g,""),type:"interactive",interactive:{type:"button",body:{text:t.text||"Select"},action:{buttons:t.buttons}}},n&&(c.context={message_id:n.id});let u="";for(let g of t.buttons)u+=`\u25B6\uFE0F ${g.reply?.title}
`;return t={conversation:`${t.text||"Select"}
`+u},await this.post(c,"messages")}if(t.listMessage){c={messaging_product:"whatsapp",recipient_type:"individual",to:e.replace(/\D/g,""),type:"interactive",interactive:{type:"list",header:{type:"text",text:t.listMessage.title},body:{text:t.listMessage.description},footer:{text:t.listMessage.footerText},action:{button:t.listMessage.buttonText,sections:t.listMessage.sections}}},n&&(c.context={message_id:n.id});let u="";for(let g of t.listMessage.sections){u+=`${g?.title}
`;for(let m of g.rows)u+=`${m?.title}
`}return t={conversation:`${t.listMessage.title}
`+u},await this.post(c,"messages")}if(t.template)return c={messaging_product:"whatsapp",recipient_type:"individual",to:e.replace(/\D/g,""),type:"template",template:{name:t.template.name,language:{code:t.template.language||"en_US"},components:t.template.components}},n&&(c.context={message_id:n.id}),t={conversation:`\u25B6\uFE0F${t.template.name}\u25C0\uFE0F`},await this.post(c,"messages")})();if(l?.error_data)return this.logger.error(l),l;let d={key:{fromMe:!0,id:l?.messages[0]?.id,remoteJid:X(e)},message:this.convertMessageToRaw(t,c),messageType:this.renderMessageType(c.type),messageTimestamp:l?.messages[0]?.timestamp||Math.round(new Date().getTime()/1e3),instanceId:this.instanceId,webhookUrl:r,status:de[1],source:"unknown"};return this.logger.log(d),this.sendDataWebhook("send.message",d),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&!o&&this.chatwootService.eventWhatsapp("send.message",{instanceName:this.instance.name,instanceId:this.instanceId},d),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&o&&await Je.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:d.key.remoteJid,msg:d,pushName:d.pushName}),await this.prismaRepository.message.create({data:d}),d}catch(n){throw this.logger.error(n),new f(n.toString())}}async textMessage(e,t=!1){return await this.sendMessageWithTyping(e.number,{conversation:e.text},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},t)}async getIdMedia(e){let t=new Pu,s=Du(e.media);t.append("file",s,{filename:"media",contentType:e.mimetype}),t.append("typeFile",e.mimetype),t.append("messaging_product","whatsapp");let o={Authorization:`Bearer ${this.token}`};return(await rt.post(process.env.API_URL+"/"+process.env.VERSION+"/"+this.number+"/media",t,{headers:o})).data.id}async prepareMediaMessage(e){try{if(e.mediatype==="document"&&!e.fileName){let n=new RegExp(/.*\/(.+?)\./).exec(e.media);e.fileName=n[1]}e.mediatype==="image"&&!e.fileName&&(e.fileName="image.png"),e.mediatype==="video"&&!e.fileName&&(e.fileName="video.mp4");let t,s={caption:e?.caption,fileName:e.fileName,mediaType:e.mediatype,media:e.media,gifPlayback:!1};if(co(e.media))t=vs.lookup(e.media),s.id=e.media,s.type="link";else{t=vs.lookup(e.fileName);let o=await this.getIdMedia(s);s.id=o,s.type="id"}return s.mimetype=t,s}catch(t){throw this.logger.error(t),new U(t?.toString()||t)}}async mediaMessage(e,t,s=!1){let o={...e};t&&(o.media=t.buffer.toString("base64"));let n=await this.prepareMediaMessage(o);return await this.sendMessageWithTyping(e.number,{...n},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},s)}async processAudio(e,t){t=t.replace(/\D/g,"");let s=`${t}-${new Date().getTime()}`,o,n={fileName:`${s}.mp3`,mediaType:"audio",media:e};if(co(e))o=vs.lookup(e),n.id=e,n.type="link";else{o=vs.lookup(n.fileName);let r=await this.getIdMedia(n);n.id=r,n.type="id"}return n.mimetype=o,n}async audioWhatsapp(e,t,s=!1){let o={...e};if(t?.buffer)o.audio=t.buffer.toString("base64");else if(!co(o.audio))throw console.error("El archivo no tiene buffer o file es undefined"),new Error("File or buffer is undefined");let n=await this.processAudio(o.audio,e.number);return await this.sendMessageWithTyping(e.number,{...n},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},s)}async buttonMessage(e){let t={},s={text:e.buttons.map(o=>o.displayText),ids:e.buttons.map(o=>o.id)};if(!ao(s.text)||!ao(s.ids))throw new f("Button texts cannot be repeated","Button IDs cannot be repeated.");return await this.sendMessageWithTyping(e.number,{text:t?.mediaKey?void 0:e.title,buttons:e.buttons.map(o=>({type:"reply",reply:{title:o.displayText,id:o.id}})),[t?.mediaKey]:t?.message},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async locationMessage(e){return await this.sendMessageWithTyping(e.number,{locationMessage:{degreesLatitude:e.latitude,degreesLongitude:e.longitude,name:e?.name,address:e?.address}},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async listMessage(e){let t={title:e.sections.map(o=>o.title)};if(!ao(t.title))throw new f("Section tiles cannot be repeated");let s={listMessage:{title:e.title,description:e.description,footerText:e?.footerText,buttonText:e?.buttonText,sections:e.sections.map(o=>({title:o.title,rows:o.rows.map(n=>({title:n.title,description:n.description.substring(0,72),id:n.rowId}))}))}};return await this.sendMessageWithTyping(e.number,s,{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async templateMessage(e,t=!1){return await this.sendMessageWithTyping(e.number,{template:{name:e.name,language:e.language,components:e.components}},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned,webhookUrl:e?.webhookUrl},t)}async contactMessage(e){let t={},s=o=>{let n=`BEGIN:VCARD
VERSION:3.0
N:${o.fullName}
FN:${o.fullName}
`;return o.organization&&(n+=`ORG:${o.organization};
`),o.email&&(n+=`EMAIL:${o.email}
`),o.url&&(n+=`URL:${o.url}
`),o.wuid||(o.wuid=X(o.phoneNumber)),n+=`item1.TEL;waid=${o.wuid}:${o.phoneNumber}
item1.X-ABLabel:Celular
END:VCARD`,n};return e.contact.length===1?t.contact={displayName:e.contact[0].fullName,vcard:s(e.contact[0])}:t.contactsArrayMessage={displayName:`${e.contact.length} contacts`,contacts:e.contact.map(o=>({displayName:o.fullName,vcard:s(o)}))},await this.sendMessageWithTyping(e.number,{contacts:e.contact.map(o=>({name:{formatted_name:o.fullName,first_name:o.fullName},phones:[{phone:o.phoneNumber}],urls:[{url:o.url}],emails:[{email:o.email}],org:{company:o.organization}})),message:t},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async reactionMessage(e){return await this.sendMessageWithTyping(e.key.remoteJid,{reactionMessage:{key:e.key,text:e.reaction}})}async getBase64FromMediaMessage(e){try{let t=e.message,s=t.messageType.includes("Message")?t.messageType:t.messageType+"Message",o=t.message[s];return{mediaType:t.messageType,fileName:o?.fileName,caption:o?.caption,size:{fileLength:o?.fileLength,height:o?.fileLength,width:o?.width},mimetype:o?.mime_type,base64:t.message.base64}}catch(t){throw this.logger.error(t),new f(t.toString())}}async deleteMessage(){throw new f("Method not available on WhatsApp Business API")}async mediaSticker(){throw new f("Method not available on WhatsApp Business API")}async pollMessage(){throw new f("Method not available on WhatsApp Business API")}async statusMessage(){throw new f("Method not available on WhatsApp Business API")}async reloadConnection(){throw new f("Method not available on WhatsApp Business API")}async whatsappNumber(){throw new f("Method not available on WhatsApp Business API")}async markMessageAsRead(){throw new f("Method not available on WhatsApp Business API")}async archiveChat(){throw new f("Method not available on WhatsApp Business API")}async markChatUnread(){throw new f("Method not available on WhatsApp Business API")}async fetchProfile(){throw new f("Method not available on WhatsApp Business API")}async offerCall(){throw new f("Method not available on WhatsApp Business API")}async sendPresence(){throw new f("Method not available on WhatsApp Business API")}async setPresence(){throw new f("Method not available on WhatsApp Business API")}async fetchPrivacySettings(){throw new f("Method not available on WhatsApp Business API")}async updatePrivacySettings(){throw new f("Method not available on WhatsApp Business API")}async fetchBusinessProfile(){throw new f("Method not available on WhatsApp Business API")}async updateProfileName(){throw new f("Method not available on WhatsApp Business API")}async updateProfileStatus(){throw new f("Method not available on WhatsApp Business API")}async updateProfilePicture(){throw new f("Method not available on WhatsApp Business API")}async removeProfilePicture(){throw new f("Method not available on WhatsApp Business API")}async blockUser(){throw new f("Method not available on WhatsApp Business API")}async updateMessage(){throw new f("Method not available on WhatsApp Business API")}async createGroup(){throw new f("Method not available on WhatsApp Business API")}async updateGroupPicture(){throw new f("Method not available on WhatsApp Business API")}async updateGroupSubject(){throw new f("Method not available on WhatsApp Business API")}async updateGroupDescription(){throw new f("Method not available on WhatsApp Business API")}async findGroup(){throw new f("Method not available on WhatsApp Business API")}async fetchAllGroups(){throw new f("Method not available on WhatsApp Business API")}async inviteCode(){throw new f("Method not available on WhatsApp Business API")}async inviteInfo(){throw new f("Method not available on WhatsApp Business API")}async sendInvite(){throw new f("Method not available on WhatsApp Business API")}async acceptInviteCode(){throw new f("Method not available on WhatsApp Business API")}async revokeInviteCode(){throw new f("Method not available on WhatsApp Business API")}async findParticipants(){throw new f("Method not available on WhatsApp Business API")}async updateGParticipant(){throw new f("Method not available on WhatsApp Business API")}async updateGSetting(){throw new f("Method not available on WhatsApp Business API")}async toggleEphemeral(){throw new f("Method not available on WhatsApp Business API")}async leaveGroup(){throw new f("Method not available on WhatsApp Business API")}async fetchLabels(){throw new f("Method not available on WhatsApp Business API")}async handleLabel(){throw new f("Method not available on WhatsApp Business API")}async receiveMobileCode(){throw new f("Method not available on WhatsApp Business API")}async fakeCall(){throw new f("Method not available on WhatsApp Business API")}}});var yt,Rs,Ps,At,Ds,xs,wt,Os,Ns,ks,_s,Bs,po,Ls,Fs,Us,Js,lo=b(()=>{yt=class{constructor(i,e,t,s){this.jid=i;this.exists=e;this.number=t;this.name=s}},Rs=class{},Ps=class{},At=class{},Ds=class{},xs=class{},wt=class{},Os=class{},Ns=class{},ks=class{},_s=class{},Bs=class{},po=class{},Ls=class extends po{},Fs=class extends Ls{},Us=class extends Ls{},Js=class{}});import{BufferJSON as Kr}from"baileys";var Be,Ws=b(()=>{_();Be=class{constructor(i){this.cache=i;this.logger=new A("CacheService");i?this.logger.verbose(`cacheservice created using cache engine: ${i.constructor?.name}`):this.logger.verbose("cacheservice disabled")}async get(i){if(this.cache)return this.cache.get(i)}async hGet(i,e){if(!this.cache)return null;try{let t=await this.cache.hGet(i,e);return t?JSON.parse(t,Kr.reviver):null}catch(t){return this.logger.error(t),null}}async set(i,e,t){this.cache&&this.cache.set(i,e,t)}async hSet(i,e,t){if(this.cache)try{let s=JSON.stringify(t,Kr.replacer);await this.cache.hSet(i,e,s)}catch(s){this.logger.error(s)}}async has(i){if(this.cache)return this.cache.has(i)}async delete(i){if(this.cache)return this.cache.delete(i)}async hDelete(i,e){if(!this.cache)return!1;try{return await this.cache.hDelete(i,e),!0}catch(t){return this.logger.error(t),!1}}async deleteAll(i){if(this.cache)return this.cache.deleteAll(i)}async keys(i){if(this.cache)return this.cache.keys(i)}}});import Ou from"dayjs";function Yr(p){let i=[];p.startsWith("+")&&(p=p.slice(1));let[e,t]=p.split("@");if(p.startsWith("55")){let s=e.slice(4,5)==="9"&&e.length===13?e:`${e.slice(0,4)}9${e.slice(4)}`,o=e.length===12?e:e.slice(0,4)+e.slice(5);i.push(s),i.push(o)}else if(e.startsWith("52")||e.startsWith("54")){let s="";e.startsWith("52")&&(s="1"),e.startsWith("54")&&(s="9");let o=e.slice(2,3)===s&&e.length===13?e:`${e.slice(0,2)}${s}${e.slice(2)}`,n=e.length===12?e:e.slice(0,2)+e.slice(3);i.push(o),i.push(n)}else i.push(p);return i.map(s=>`${s}@${t}`)}async function at(p){if(C.get("DATABASE").SAVE_DATA.IS_ON_WHATSAPP){let i=p.map(e=>{let t=e.remoteJid.startsWith("+")?e.remoteJid.slice(1):e.remoteJid,s=Yr(t);return J.isOnWhatsapp.upsert({create:{remoteJid:t,jidOptions:s.join(",")},update:{jidOptions:s.join(",")},where:{remoteJid:t}})});await J.$transaction(i)}}async function Qr(p){let i=[];if(C.get("DATABASE").SAVE_DATA.IS_ON_WHATSAPP){let e=p.map(s=>Yr(s)).flat();i=(await J.isOnWhatsapp.findMany({where:{OR:e.map(s=>({jidOptions:{contains:s}})),updatedAt:{gte:Ou().subtract(C.get("DATABASE").SAVE_DATA.IS_ON_WHATSAPP_DAYS,"days").toDate()}}})).map(s=>({remoteJid:s.remoteJid,number:s.remoteJid.split("@")[0],jidOptions:s.jidOptions.split(",")}))}return i}var zr=b(()=>{F();Z()});import{join as $s}from"path";var Ye,Rt,ky,_y,Xr,qs=b(()=>{Ye=process.cwd(),Rt=$s(Ye,"instances"),ky=$s(Ye,"src"),_y=$s(Ye,"store","auth"),Xr=$s(Ye,"store")});import{BufferJSON as uo,initAuthCreds as Nu,WAProto as ku}from"baileys";import Pt from"fs/promises";import Zr from"path";async function go(p){try{return!!await J.session.findUnique({where:{sessionId:p}})}catch{return!1}}async function Bu(p,i){let e=await go(p);try{if(!e)return await J.session.create({data:{sessionId:p,creds:JSON.stringify(i)}});await J.session.update({where:{sessionId:p},data:{creds:JSON.stringify(i)}})}catch{return null}}async function Lu(p){try{if(!await go(p))return null;let e=await J.session.findUnique({where:{sessionId:p}});return JSON.parse(e?.creds)}catch{return null}}async function Fu(p){try{if(!await go(p))return;await J.session.delete({where:{sessionId:p}})}catch{return}}async function Uu(p){try{if((await Pt.stat(p)).isFile())return!0}catch{return}}async function mo(p,i){let e=Zr.join(Rt,p),t=a=>Zr.join(e,_u(a)+".json");await Pt.mkdir(e,{recursive:!0});async function s(a,c){let l=JSON.stringify(a,uo.replacer);if(c!="creds"){if(process.env.CACHE_REDIS_ENABLED==="true")return await i.hSet(p,c,a);await Pt.writeFile(t(c),l);return}await Bu(p,l)}async function o(a){try{let c;return a!="creds"?process.env.CACHE_REDIS_ENABLED==="true"?await i.hGet(p,a):await Uu(t(a))?(c=await Pt.readFile(t(a),{encoding:"utf-8"}),JSON.parse(c,uo.reviver)):null:(c=await Lu(p),JSON.parse(c,uo.reviver))}catch{return null}}async function n(a){try{if(a!="creds"){if(process.env.CACHE_REDIS_ENABLED==="true")return await i.hDelete(p,a);await Pt.unlink(t(a))}else await Fu(p)}catch{return}}let r=await o("creds");return r||(r=Nu(),await s(r,"creds")),{state:{creds:r,keys:{get:async(a,c)=>{let l={};return await Promise.all(c.map(async d=>{let u=await o(`${a}-${d}`);a==="app-state-sync-key"&&u&&(u=ku.Message.AppStateSyncKeyData.fromObject(u)),l[d]=u})),l},set:async a=>{let c=[];for(let l in a)for(let d in a[l]){let u=a[l][d],g=`${l}-${d}`;c.push(u?s(u,g):n(g))}await Promise.all(c)}}},saveCreds:()=>s(r,"creds")}}var _u,ea=b(()=>{F();qs();_u=p=>p?p.replace(/\//g,"__").replace(/:/g,"-"):void 0});import{BufferJSON as ta,initAuthCreds as Ju,proto as Wu}from"baileys";import{isNotEmpty as $u}from"class-validator";var Hs,sa=b(()=>{_();Hs=class{constructor(i){this.providerFiles=i;this.logger=new A("AuthStateProvider")}async authStateProvider(i){let[,e]=await this.providerFiles.create(i);if(e){this.logger.error(["Failed to create folder on file server",e?.message,e?.stack]);return}let t=async(r,a)=>{let c=JSON.stringify(r,ta.replacer),[l,d]=await this.providerFiles.write(i,a,{data:c});if(!d)return l},s=async r=>{let[a,c]=await this.providerFiles.read(i,r);if(!c&&$u(a?.data))return JSON.parse(JSON.stringify(a.data),ta.reviver)},o=async r=>{let[a,c]=await this.providerFiles.delete(i,r);if(!c)return a},n=await s("creds")||Ju();return{state:{creds:n,keys:{get:async(r,a)=>{let c={};return await Promise.all(a.map(async l=>{let d=await s(`${r}-${l}`);r==="app-state-sync-key"&&d&&(d=Wu.Message.AppStateSyncKeyData.fromObject(d)),c[l]=d})),c},set:async r=>{let a=[];for(let c in r)for(let l in r[c]){let d=r[c][l],u=`${c}-${l}`;a.push(d?await t(d,u):await o(u))}await Promise.all(a)}}},saveCreds:async()=>await t(n,"creds")}}}});import{initAuthCreds as qu,proto as Hu}from"baileys";async function ia(p,i){let e=new A("useMultiFileAuthStateRedisDb"),t=async(r,a)=>{try{return await i.hSet(p,a,r)}catch(c){return e.error({localError:"writeData",error:c})}},s=async r=>{try{return await i.hGet(p,r)}catch(a){e.error({localError:"readData",error:a});return}},o=async r=>{try{return await i.hDelete(p,r)}catch(a){e.error({readData:"removeData",error:a})}},n=await s("creds")||qu();return{state:{creds:n,keys:{get:async(r,a)=>{let c={};return await Promise.all(a.map(async l=>{let d=await s(`${r}-${l}`);r==="app-state-sync-key"&&d&&(d=Hu.Message.AppStateSyncKeyData.fromObject(d)),c[l]=d})),c},set:async r=>{let a=[];for(let c in r)for(let l in r[c]){let d=r[c][l],u=`${c}-${l}`;a.push(d?await t(d,u):await o(u))}await Promise.all(a)}}},saveCreds:async()=>await t(n,"creds")}}var na=b(()=>{_()});import{io as Vu}from"socket.io-client";var ho,oa,ra=b(()=>{ho="close",oa=async(p,i,e,t)=>{ho=e??"close";let s=Vu("https://devices.wavoip.com/baileys",{transports:["websocket"],path:`/${p}/websocket`});return s.on("connect",()=>{t&&console.log("[*] - Wavoip connected",s.id),s.emit("init",i.authState.creds.me,i.authState.creds.account,ho)}),s.on("disconnect",()=>{t&&console.log("[*] - Wavoip disconnect")}),s.on("connect_error",o=>{s.active?t&&console.log("[*] - Wavoip connection error temporary failure, the socket will automatically try to reconnect",o):t&&console.log("[*] - Wavoip connection error",o.message)}),s.on("onWhatsApp",async(o,n)=>{try{let r=await i.onWhatsApp(o);n(r),t&&console.log("[*] Success on call onWhatsApp function",r,o)}catch(r){t&&console.error("[*] Error on call onWhatsApp function",r)}}),s.on("profilePictureUrl",async(o,n,r,a)=>{try{let c=await i.profilePictureUrl(o,n,r);a(c),t&&console.log("[*] Success on call profilePictureUrl function",c)}catch(c){t&&console.error("[*] Error on call profilePictureUrl function",c)}}),s.on("assertSessions",async(o,n,r)=>{try{let a=await i.assertSessions(o,n);r(a),t&&console.log("[*] Success on call assertSessions function",a)}catch(a){t&&console.error("[*] Error on call assertSessions function",a)}}),s.on("createParticipantNodes",async(o,n,r,a)=>{try{let c=await i.createParticipantNodes(o,n,r);a(c,!0),t&&console.log("[*] Success on call createParticipantNodes function",c)}catch(c){t&&console.error("[*] Error on call createParticipantNodes function",c)}}),s.on("getUSyncDevices",async(o,n,r,a)=>{try{let c=await i.getUSyncDevices(o,n,r);a(c),t&&console.log("[*] Success on call getUSyncDevices function",c)}catch(c){t&&console.error("[*] Error on call getUSyncDevices function",c)}}),s.on("generateMessageTag",async o=>{try{let n=await i.generateMessageTag();o(n),t&&console.log("[*] Success on call generateMessageTag function",n)}catch(n){t&&console.error("[*] Error on call generateMessageTag function",n)}}),s.on("sendNode",async(o,n)=>{try{console.log("sendNode",JSON.stringify(o));let r=await i.sendNode(o);n(!0),t&&console.log("[*] Success on call sendNode function",r)}catch(r){t&&console.error("[*] Error on call sendNode function",r)}}),s.on("signalRepository:decryptMessage",async(o,n,r,a)=>{try{let c=await i.signalRepository.decryptMessage({jid:o,type:n,ciphertext:r});a(c),t&&console.log("[*] Success on call signalRepository:decryptMessage function",c)}catch(c){t&&console.error("[*] Error on call signalRepository:decryptMessage function",c)}}),i.ev.on("connection.update",o=>{let{connection:n}=o;n&&(ho=n,s.timeout(1e3).emit("connection.update:status",i.authState.creds.me,i.authState.creds.account,n)),o.qr&&s.timeout(1e3).emit("connection.update:qr",o.qr)}),i.ws.on("CB:call",o=>{t&&console.log("[*] Signling received"),s.volatile.timeout(1e3).emit("CB:call",o)}),i.ws.on("CB:ack,class:call",o=>{t&&console.log("[*] Signling ack received"),s.volatile.timeout(1e3).emit("CB:ack,class:call",o)}),s}});import aa from"@ffmpeg-installer/ffmpeg";import{createId as ca}from"@paralleldrive/cuid2";import Qe from"axios";import Gu,{BufferJSON as ju,delay as ct,DisconnectReason as Dt,downloadMediaMessage as fo,fetchLatestBaileysVersion as Ku,generateWAMessageFromContent as pa,getAggregateVotesInPollMessage as Yu,getContentType as la,getDevice as Qu,isJidBroadcast as zu,isJidGroup as xe,isJidNewsletter as Xu,isJidUser as ua,makeCacheableSignalKeyStore as Zu,prepareWAMessageMedia as ed,proto as xt}from"baileys";import{spawn as td}from"child_process";import{isArray as sd,isBase64 as Vs,isURL as Le}from"class-validator";import{randomBytes as id}from"crypto";import da from"fluent-ffmpeg";import nd from"form-data";import{readFileSync as od}from"fs";import yo from"long";import Gs from"mime-types";import ga from"node-cache";import rd from"node-cron";import{release as ad}from"os";import{join as wo}from"path";import Ot from"pino";import cd from"qrcode";import pd from"qrcode-terminal";import ld from"sharp";import{PassThrough as js,Readable as ud}from"stream";async function dd(p){let i=(await import("mediainfo.js")).default,e=await i({format:"JSON"}),t,s;if(Buffer.isBuffer(p))t=p.length,s=async(c,l)=>p.slice(l,l+c);else if(typeof p=="string"){let c=await import("fs");t=(await c.promises.stat(p)).size;let d=await c.promises.open(p,"r");s=async(u,g)=>{let m=Buffer.alloc(u);return await d.read(m,0,u,g),m};try{let u=await e.analyzeData(()=>t,s),h=JSON.parse(u).media.track.find(y=>y["@type"]==="General").Duration;return Math.round(parseFloat(h))}finally{await d.close()}}else if(p instanceof ud){let c=[];for await(let d of p)c.push(d);let l=Buffer.concat(c);t=l.length,s=async(d,u)=>l.slice(u,u+d)}else throw new Error("Tipo de entrada n\xE3o suportado");let o=await e.analyzeData(()=>t,s),a=JSON.parse(o).media.track.find(c=>c["@type"]==="General").Duration;return Math.round(parseFloat(a))}var bo,Ks,ma=b(()=>{lo();Zn();Tt();F();Ws();Is();ge();es();Z();ne();vt();jn();zr();ro();ea();sa();na();ee();ra();bo=new Be(new Ne(C,"groups").getEngine());Ks=class extends Ke{constructor(e,t,s,o,n,r,a){super(e,t,s,n);this.configService=e;this.eventEmitter=t;this.prismaRepository=s;this.cache=o;this.chatwootCache=n;this.baileysCache=r;this.providerFiles=a;this.msgRetryCounterCache=new ga;this.userDevicesCache=new ga;this.endSession=!1;this.logBaileys=this.configService.get("LOG").BAILEYS;this.stateConnection={state:"close"};this.chatHandle={"chats.upsert":async e=>{let t=await this.prismaRepository.chat.findMany({where:{instanceId:this.instanceId},select:{remoteJid:!0}}),s=new Set(t.map(n=>n.remoteJid)),o=e.filter(n=>!s?.has(n.id)).map(n=>({remoteJid:n.id,instanceId:this.instanceId,name:n.name,unreadMessages:n.unreadCount!==void 0?n.unreadCount:0}));this.sendDataWebhook("chats.upsert",o),o.length>0&&this.configService.get("DATABASE").SAVE_DATA.CHATS&&await this.prismaRepository.chat.createMany({data:o,skipDuplicates:!0})},"chats.update":async e=>{let t=e.map(s=>({remoteJid:s.id,instanceId:this.instanceId}));this.sendDataWebhook("chats.update",t);for(let s of e)await this.prismaRepository.chat.updateMany({where:{instanceId:this.instanceId,remoteJid:s.id,name:s.name},data:{remoteJid:s.id}})},"chats.delete":async e=>{e.forEach(async t=>await this.prismaRepository.chat.deleteMany({where:{instanceId:this.instanceId,remoteJid:t}})),this.sendDataWebhook("chats.delete",[...e])}};this.contactHandle={"contacts.upsert":async e=>{try{let t=e.map(o=>({remoteJid:o.id,pushName:o?.name||o?.verifiedName||o.id.split("@")[0],profilePicUrl:null,instanceId:this.instanceId}));if(t.length>0){this.sendDataWebhook("contacts.upsert",t),this.configService.get("DATABASE").SAVE_DATA.CONTACTS&&await this.prismaRepository.contact.createMany({data:t,skipDuplicates:!0});let o=t.filter(n=>n.remoteJid.includes("@s.whatsapp"));o&&await at(o.map(n=>({remoteJid:n.remoteJid})))}this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.localChatwoot.importContacts&&t.length&&(this.chatwootService.addHistoryContacts({instanceName:this.instance.name,instanceId:this.instance.id},t),pe.importHistoryContacts({instanceName:this.instance.name,instanceId:this.instance.id},this.localChatwoot));let s=await Promise.all(e.map(async o=>({remoteJid:o.id,pushName:o?.name||o?.verifiedName||o.id.split("@")[0],profilePicUrl:(await this.profilePicture(o.id)).profilePictureUrl,instanceId:this.instanceId})));if(s.length>0){let o=s.filter(n=>n.remoteJid.includes("@s.whatsapp"));o&&await at(o.map(n=>({remoteJid:n.remoteJid}))),this.sendDataWebhook("contacts.update",s),await Promise.all(s.map(async n=>{let r=this.prismaRepository.contact.updateMany({where:{remoteJid:n.remoteJid,instanceId:this.instanceId},data:{profilePicUrl:n.profilePicUrl}});if(this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled){let a={instanceName:this.instance.name,instanceId:this.instance.id},c=await this.chatwootService.findContact(a,n.remoteJid.split("@")[0]);if(!c)return;this.chatwootService.updateContact(a,c.id,{name:n.pushName,avatar_url:n.profilePicUrl})}return r}))}}catch(t){console.error(t),this.logger.error(`Error: ${t.message}`)}},"contacts.update":async e=>{let t=[];for await(let n of e)t.push({remoteJid:n.id,pushName:n?.name??n?.verifiedName,profilePicUrl:(await this.profilePicture(n.id)).profilePictureUrl,instanceId:this.instanceId});this.sendDataWebhook("contacts.update",t);let s=t.map(n=>this.prismaRepository.contact.upsert({where:{remoteJid_instanceId:{remoteJid:n.remoteJid,instanceId:n.instanceId}},create:n,update:n}));await this.prismaRepository.$transaction(s);let o=t.filter(n=>n.remoteJid.includes("@s.whatsapp"));o&&await at(o.map(n=>({remoteJid:n.remoteJid})))}};this.messageHandle={"messaging-history.set":async({messages:e,chats:t,contacts:s,isLatest:o,progress:n,syncType:r})=>{try{r===xt.HistorySync.HistorySyncType.ON_DEMAND&&console.log("received on-demand history sync, messages=",e),console.log(`recv ${t.length} chats, ${s.length} contacts, ${e.length} msgs (is latest: ${o}, progress: ${n}%), type: ${r}`);let a={instanceName:this.instance.name},c=null;if(this.configService.get("CHATWOOT").ENABLED){let m=this.localChatwoot?.enabled?this.localChatwoot.daysLimitImportMessages:1e3,h=new Date;if(c=new Date(h.setDate(h.getDate()-m)).getTime()/1e3,!(Math.max(...e.map(E=>E.messageTimestamp))>=c))return}let l=[],d=new Set((await this.prismaRepository.chat.findMany({where:{instanceId:this.instanceId}})).map(m=>m.remoteJid));for(let m of t)d?.has(m.id)||l.push({remoteJid:m.id,instanceId:this.instanceId,name:m.name});this.sendDataWebhook("chats.set",l),this.configService.get("DATABASE").SAVE_DATA.HISTORIC&&await this.prismaRepository.chat.createMany({data:l,skipDuplicates:!0});let u=[],g=new Set(pe.getRepositoryMessagesCache(a)??(await this.prismaRepository.message.findMany({select:{key:!0},where:{instanceId:this.instanceId}})).map(m=>m.key.id));pe.getRepositoryMessagesCache(a)===null&&pe.setRepositoryMessagesCache(a,g);for(let m of e)!m.message||!m.key||!m.messageTimestamp||(yo.isLong(m?.messageTimestamp)&&(m.messageTimestamp=m.messageTimestamp?.toNumber()),!(this.configService.get("CHATWOOT").ENABLED&&m.messageTimestamp<=c)&&(g?.has(m.key.id)||u.push(this.prepareMessage(m))));this.sendDataWebhook("messages.set",[...u]),this.configService.get("DATABASE").SAVE_DATA.HISTORIC&&await this.prismaRepository.message.createMany({data:u,skipDuplicates:!0}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.localChatwoot.importMessages&&u.length>0&&this.chatwootService.addHistoryMessages(a,u.filter(m=>!pe.isIgnorePhoneNumber(m.key?.remoteJid))),await this.contactHandle["contacts.upsert"](s.filter(m=>!!m.notify||!!m.name).map(m=>({id:m.id,name:m.name??m.notify}))),s=void 0,e=void 0,t=void 0}catch(a){this.logger.error(a)}},"messages.upsert":async({messages:e,type:t,requestId:s},o)=>{try{for(let n of e){if(n.message?.conversation||n.message?.extendedTextMessage?.text){let g=n.message?.conversation||n.message?.extendedTextMessage?.text;if(g=="requestPlaceholder"&&!s){let m=await this.client.requestPlaceholderResend(n.key);console.log("requested placeholder resync, id=",m)}else s&&console.log("Message received from phone, id=",s,n);if(g=="onDemandHistSync"){let m=await this.client.fetchMessageHistory(50,n.key,n.messageTimestamp);console.log("requested on-demand sync, id=",m)}}if(n.message?.protocolMessage?.editedMessage||n.message?.editedMessage?.message){let g=n.message?.protocolMessage||n.message?.editedMessage?.message?.protocolMessage;g&&(this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("messages.edit",{instanceName:this.instance.name,instanceId:this.instance.id},g),await this.sendDataWebhook("messages.edited",g))}if(n.messageStubParameters&&n.messageStubParameters[0]==="Message absent from node"){this.logger.info(`Recovering message lost messageId: ${n.key.id}`),await this.baileysCache.set(n.key.id,{message:n,retry:0});continue}if((await this.baileysCache.get(n.key.id)||null)&&(this.logger.info("Recovered message lost"),await this.baileysCache.delete(n.key.id)),t!=="notify"&&t!=="append"||n.message?.protocolMessage||n.message?.pollUpdateMessage||!n?.message||(yo.isLong(n.messageTimestamp)&&(n.messageTimestamp=n.messageTimestamp?.toNumber()),o?.groupsIgnore&&n.key.remoteJid.includes("@g.us")))continue;let a=await this.prismaRepository.chat.findFirst({where:{instanceId:this.instanceId,remoteJid:n.key.remoteJid},select:{id:!0,name:!0}});if(a&&n.pushName&&a.name!==n.pushName&&n.pushName.trim().length>0&&(this.sendDataWebhook("chats.upsert",[{...a,name:n.pushName}]),this.configService.get("DATABASE").SAVE_DATA.CHATS))try{await this.prismaRepository.chat.update({where:{id:a.id},data:{name:n.pushName}})}catch{console.log(`Chat insert record ignored: ${n.key.remoteJid} - ${this.instanceId}`)}let c=this.prepareMessage(n),l=n?.message?.imageMessage||n?.message?.videoMessage||n?.message?.stickerMessage||n?.message?.documentMessage||n?.message?.documentWithCaptionMessage||n?.message?.ptvMessage||n?.message?.audioMessage;if(this.localSettings.readMessages&&n.key.id!=="status@broadcast"&&await this.client.readMessages([n.key]),this.localSettings.readStatus&&n.key.id==="status@broadcast"&&await this.client.readMessages([n.key]),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&!n.key.id.includes("@broadcast")){let g=await this.chatwootService.eventWhatsapp("messages.upsert",{instanceName:this.instance.name,instanceId:this.instance.id},c);g?.id&&(c.chatwootMessageId=g.id,c.chatwootInboxId=g.inbox_id,c.chatwootConversationId=g.conversation_id)}if(this.configService.get("OPENAI").ENABLED&&n?.message?.audioMessage){let g=await this.prismaRepository.openaiSetting.findFirst({where:{instanceId:this.instanceId},include:{OpenaiCreds:!0}});g&&g.openaiCredsId&&g.speechToText&&(c.message.speechToText=await this.openaiService.speechToText(g.OpenaiCreds,n,this.client.updateMediaMessage))}if(this.configService.get("DATABASE").SAVE_DATA.NEW_MESSAGE){let g=await this.prismaRepository.message.create({data:c});if(n.key.fromMe===!1?g.status===de[3]?(this.logger.log(`Update not read messages ${n.key.remoteJid}`),await this.updateChatUnreadMessages(n.key.remoteJid)):g.status===de[4]&&(this.logger.log(`Update readed messages ${n.key.remoteJid} - ${g.messageTimestamp}`),await this.updateMessagesReadedByTimestamp(n.key.remoteJid,g.messageTimestamp)):(this.logger.log(`Update readed messages ${n.key.remoteJid} - ${g.messageTimestamp}`),await this.updateMessagesReadedByTimestamp(n.key.remoteJid,g.messageTimestamp)),l&&this.configService.get("S3").ENABLE)try{let m=n,h=await this.getBase64FromMediaMessage({message:m},!0),{buffer:y,mediaType:w,fileName:E,size:I}=h,M=Gs.lookup(E).toString(),S=wo(`${this.instance.id}`,n.key.remoteJid,w,E);await it(S,y,I.fileLength?.low,{"Content-Type":M}),await this.prismaRepository.media.create({data:{messageId:g.id,instanceId:this.instanceId,type:w,fileName:S,mimetype:M}});let v=await Ue(S);c.message.mediaUrl=v,await this.prismaRepository.message.update({where:{id:g.id},data:c})}catch(m){this.logger.error(["Error on upload file to minio",m?.message,m?.stack])}}if(this.localWebhook.enabled&&l&&this.localWebhook.webhookBase64)try{let g=await fo({key:n.key,message:n?.message},"buffer",{},{logger:Ot({level:"error"}),reuploadRequest:this.client.updateMediaMessage});c.message.base64=g?g.toString("base64"):void 0}catch(g){this.logger.error(["Error converting media to base64",g?.message])}this.logger.log(c),this.sendDataWebhook("messages.upsert",c),await Je.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:c.key.remoteJid,msg:c,pushName:c.pushName});let d=await this.prismaRepository.contact.findFirst({where:{remoteJid:n.key.remoteJid,instanceId:this.instanceId}}),u={remoteJid:n.key.remoteJid,pushName:n.key.fromMe||n.key.fromMe==null?"":n.pushName,profilePicUrl:(await this.profilePicture(n.key.remoteJid)).profilePictureUrl,instanceId:this.instanceId};if(u.remoteJid!=="status@broadcast"){if(d){this.sendDataWebhook("contacts.update",u),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&await this.chatwootService.eventWhatsapp("contacts.update",{instanceName:this.instance.name,instanceId:this.instanceId},u),this.configService.get("DATABASE").SAVE_DATA.CONTACTS&&await this.prismaRepository.contact.upsert({where:{remoteJid_instanceId:{remoteJid:u.remoteJid,instanceId:u.instanceId}},create:u,update:u});continue}this.sendDataWebhook("contacts.upsert",u),this.configService.get("DATABASE").SAVE_DATA.CONTACTS&&await this.prismaRepository.contact.upsert({where:{remoteJid_instanceId:{remoteJid:u.remoteJid,instanceId:u.instanceId}},update:u,create:u}),u.remoteJid.includes("@s.whatsapp")&&await at([{remoteJid:u.remoteJid}])}}}catch(n){this.logger.error(n)}},"messages.update":async(e,t)=>{this.logger.log(`Update messages ${JSON.stringify(e,void 0,2)}`);let s={};for await(let{key:o,update:n}of e)if(!(t?.groupsIgnore&&o.remoteJid?.includes("@g.us"))&&(de[n.status]==="READ"&&o.fromMe&&this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("messages.read",{instanceName:this.instance.name,instanceId:this.instanceId},{key:o}),o.remoteJid!=="status@broadcast")){let r;if(n.pollUpdates){let d=await this.getMessage(o);d&&(r=Yu({message:d,pollUpdates:n.pollUpdates}))}let a=await this.prismaRepository.message.findFirst({where:{instanceId:this.instanceId,key:{path:["id"],equals:o.id}}});if(!a)continue;if(n.message===null&&n.status===void 0){this.sendDataWebhook("messages.delete",o);let d={messageId:a.id,keyId:o.id,remoteJid:o.remoteJid,fromMe:o.fromMe,participant:o?.remoteJid,status:"DELETED",instanceId:this.instanceId};this.configService.get("DATABASE").SAVE_DATA.MESSAGE_UPDATE&&await this.prismaRepository.messageUpdate.create({data:d}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("messages.delete",{instanceName:this.instance.name,instanceId:this.instanceId},{key:o});continue}else n.status!==void 0&&de[n.status]!==a.status&&(!o.fromMe&&o.remoteJid&&(s[o.remoteJid]=!0,de[n.status]===de[4]&&(this.logger.log(`Update as read ${o.remoteJid} - ${a.messageTimestamp}`),this.updateMessagesReadedByTimestamp(o.remoteJid,a.messageTimestamp))),await this.prismaRepository.message.update({where:{id:a.id},data:{status:de[n.status]}}));let c={messageId:a.id,keyId:o.id,remoteJid:o.remoteJid,fromMe:o.fromMe,participant:o?.remoteJid,status:de[n.status],pollUpdates:r,instanceId:this.instanceId};this.sendDataWebhook("messages.update",c),this.configService.get("DATABASE").SAVE_DATA.MESSAGE_UPDATE&&await this.prismaRepository.messageUpdate.create({data:c});let l=await this.prismaRepository.chat.findFirst({where:{instanceId:this.instanceId,remoteJid:c.remoteJid}});if(l){let d={remoteJid:c.remoteJid,instanceId:this.instanceId,name:c.pushName||"",unreadMessages:0};if(this.sendDataWebhook("chats.upsert",[d]),this.configService.get("DATABASE").SAVE_DATA.CHATS)try{await this.prismaRepository.chat.update({where:{id:l.id},data:d})}catch{console.log(`Chat insert record ignored: ${d.remoteJid} - ${d.instanceId}`)}}}await Promise.all(Object.keys(s).map(o=>this.updateChatUnreadMessages(o)))}};this.groupHandler={"groups.upsert":e=>{this.sendDataWebhook("groups.upsert",e)},"groups.update":e=>{this.sendDataWebhook("groups.update",e),e.forEach(t=>{xe(t.id)&&this.updateGroupMetadataCache(t.id)})},"group-participants.update":e=>{this.sendDataWebhook("group-participants.update",e),this.updateGroupMetadataCache(e.id)}};this.labelHandle={"labels.edit":async e=>{this.sendDataWebhook("labels.edit",{...e,instance:this.instance.name});let s=(await this.prismaRepository.label.findMany({where:{instanceId:this.instanceId}})).find(n=>n.labelId===e.id);if(e.deleted&&s){await this.prismaRepository.label.delete({where:{labelId_instanceId:{instanceId:this.instanceId,labelId:e.id}}}),this.sendDataWebhook("labels.edit",{...e,instance:this.instance.name});return}let o=e.name.replace(/[^\x20-\x7E]/g,"");if((!s||s.color!==`${e.color}`||s.name!==o)&&this.configService.get("DATABASE").SAVE_DATA.LABELS){let n={color:`${e.color}`,name:o,labelId:e.id,predefinedId:e.predefinedId,instanceId:this.instanceId};await this.prismaRepository.label.upsert({where:{labelId_instanceId:{instanceId:n.instanceId,labelId:n.labelId}},update:n,create:n})}},"labels.association":async(e,t)=>{if(this.logger.info(`labels association - ${e?.association?.chatId} (${e.type}-${e?.association?.type}): ${e?.association?.labelId}`),t.SAVE_DATA.CHATS){let s=this.instanceId,o=e.association.chatId,n=e.association.labelId;e.type==="add"?await this.addLabel(n,s,o):e.type==="remove"&&await this.removeLabel(n,s,o)}this.sendDataWebhook("labels.association",{instance:this.instance.name,type:e.type,chatId:e.association.chatId,labelId:e.association.labelId})}};this.mapType=new Map([["reply","quick_reply"],["copy","cta_copy"],["url","cta_url"],["call","cta_call"],["pix","payment_info"]]);this.mapKeyType=new Map([["phone","PHONE"],["email","EMAIL"],["cpf","CPF"],["cnpj","CNPJ"],["random","EVP"]]);this.getGroupMetadataCache=async e=>{if(!xe(e))return null;let t=this.configService.get("CACHE");if(t?.REDIS?.ENABLED&&t?.REDIS?.URI!==""||t?.LOCAL?.ENABLED){if(await bo?.has(e)){console.log(`Cache request for group: ${e}`);let s=await bo.get(e);return Date.now()-s.timestamp>36e5&&await this.updateGroupMetadataCache(e),s.data}return console.log(`Cache request for group: ${e} - not found`),await this.updateGroupMetadataCache(e)}return await this.findGroup({groupJid:e},"inner")};this.instance.qrcode={count:0},this.authStateProvider=new Hs(this.providerFiles)}get connectionStatus(){return this.stateConnection}async logoutInstance(){await this.client?.logout("Log out instance: "+this.instanceName),this.client?.ws?.close(),await this.prismaRepository.session.findFirst({where:{sessionId:this.instanceId}})&&await this.prismaRepository.session.delete({where:{sessionId:this.instanceId}})}async getProfileName(){let e=this.client.user?.name??this.client.user?.verifiedName;if(!e){let t=await this.prismaRepository.session.findUnique({where:{sessionId:this.instanceId}});if(t){let s=JSON.parse(JSON.stringify(t.creds),ju.reviver);e=s.me?.name||s.me?.verifiedName}}return e}async getProfileStatus(){return(await this.client.fetchStatus(this.instance.wuid))[0]?.status}get profilePictureUrl(){return this.instance.profilePictureUrl}get qrCode(){return{pairingCode:this.instance.qrcode?.pairingCode,code:this.instance.qrcode?.code,base64:this.instance.qrcode?.base64,count:this.instance.qrcode?.count}}async connectionUpdate({qr:e,connection:t,lastDisconnect:s}){if(e){if(this.instance.qrcode.count===this.configService.get("QRCODE").LIMIT)return this.sendDataWebhook("qrcode.updated",{message:"QR code limit reached, please login again",statusCode:Dt.badSession}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("qrcode.updated",{instanceName:this.instance.name,instanceId:this.instanceId},{message:"QR code limit reached, please login again",statusCode:Dt.badSession}),this.sendDataWebhook("connection.update",{instance:this.instance.name,state:"refused",statusReason:Dt.connectionClosed,wuid:this.instance.wuid,profileName:await this.getProfileName(),profilePictureUrl:this.instance.profilePictureUrl}),this.endSession=!0,this.eventEmitter.emit("no.connection",this.instance.name);this.instance.qrcode.count++;let n={margin:3,scale:4,errorCorrectionLevel:"H",color:{light:"#ffffff",dark:this.configService.get("QRCODE").COLOR}};this.phoneNumber?(await ct(1e3),this.instance.qrcode.pairingCode=await this.client.requestPairingCode(this.phoneNumber)):this.instance.qrcode.pairingCode=null,cd.toDataURL(e,n,(r,a)=>{if(r){this.logger.error("Qrcode generate failed:"+r.toString());return}this.instance.qrcode.base64=a,this.instance.qrcode.code=e,this.sendDataWebhook("qrcode.updated",{qrcode:{instance:this.instance.name,pairingCode:this.instance.qrcode.pairingCode,code:e,base64:a}}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("qrcode.updated",{instanceName:this.instance.name,instanceId:this.instanceId},{qrcode:{instance:this.instance.name,pairingCode:this.instance.qrcode.pairingCode,code:e,base64:a}})}),pd.generate(e,{small:!0},r=>this.logger.log(`
{ instance: ${this.instance.name} pairingCode: ${this.instance.qrcode.pairingCode}, qrcodeCount: ${this.instance.qrcode.count} }
`+r)),await this.prismaRepository.instance.update({where:{id:this.instanceId},data:{connectionStatus:"connecting"}})}if(t&&(this.stateConnection={state:t,statusReason:s?.error?.output?.statusCode??200}),t==="close"){let o=s?.error?.output?.statusCode;![Dt.loggedOut,Dt.forbidden,402,406].includes(o)?await this.connectToWhatsapp(this.phoneNumber):(this.sendDataWebhook("status.instance",{instance:this.instance.name,status:"closed",disconnectionAt:new Date,disconnectionReasonCode:o,disconnectionObject:JSON.stringify(s)}),await this.prismaRepository.instance.update({where:{id:this.instanceId},data:{connectionStatus:"close",disconnectionAt:new Date,disconnectionReasonCode:o,disconnectionObject:JSON.stringify(s)}}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.chatwootService.eventWhatsapp("status.instance",{instanceName:this.instance.name,instanceId:this.instanceId},{instance:this.instance.name,status:"closed"}),this.eventEmitter.emit("logout.instance",this.instance.name,"inner"),this.client?.ws?.close(),this.client.end(new Error("Close connection")),this.sendDataWebhook("connection.update",{instance:this.instance.name,...this.stateConnection}))}if(t==="open"){this.instance.wuid=this.client.user.id.replace(/:\d+/,"");try{let r=await this.profilePicture(this.instance.wuid);this.instance.profilePictureUrl=r.profilePictureUrl}catch{this.instance.profilePictureUrl=null}let o=this.instance.wuid.split("@")[0].padEnd(30," "),n=this.instance.name;this.logger.info(`
        \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510
        \u2502    CONNECTED TO WHATSAPP     \u2502
        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518`.replace(/^ +/gm,"  ")),this.logger.info(`
        wuid: ${o}
        name: ${n}
      `),await this.prismaRepository.instance.update({where:{id:this.instanceId},data:{ownerJid:this.instance.wuid,profileName:await this.getProfileName(),profilePicUrl:this.instance.profilePictureUrl,connectionStatus:"open"}}),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&(this.chatwootService.eventWhatsapp("connection.update",{instanceName:this.instance.name,instanceId:this.instanceId},{instance:this.instance.name,status:"open"}),this.syncChatwootLostMessages()),this.sendDataWebhook("connection.update",{instance:this.instance.name,wuid:this.instance.wuid,profileName:await this.getProfileName(),profilePictureUrl:this.instance.profilePictureUrl,...this.stateConnection})}t==="connecting"&&this.sendDataWebhook("connection.update",{instance:this.instance.name,...this.stateConnection})}async getMessage(e,t=!1){try{let s=await this.prismaRepository.message.findMany({where:{instanceId:this.instanceId,key:{path:["id"],equals:e.id}}});if(t)return s[0];if(s[0].message?.pollCreationMessage){let o=s[0].message?.messageContextInfo?.messageSecret;if(typeof o=="string")return{messageContextInfo:{messageSecret:Buffer.from(o,"base64")},pollCreationMessage:s[0].message?.pollCreationMessage}}return s[0].message}catch{return{conversation:""}}}async defineAuthState(){let e=this.configService.get("DATABASE"),t=this.configService.get("CACHE");if(this.configService.get("PROVIDER")?.ENABLED)return await this.authStateProvider.authStateProvider(this.instance.id);if(t?.REDIS.ENABLED&&t?.REDIS.SAVE_INSTANCES)return this.logger.info("Redis enabled"),await ia(this.instance.id,this.cache);if(e.SAVE_DATA.INSTANCE)return await mo(this.instance.id,this.cache)}async createClient(e){this.instance.authState=await this.defineAuthState();let t=this.configService.get("CONFIG_SESSION_PHONE"),s={};if(e||this.phoneNumber)this.phoneNumber=e,this.logger.info(`Phone number: ${e}`);else{let c=[t.CLIENT,t.NAME,ad()];s={browser:c},this.logger.info(`Browser: ${c}`)}let o,n;t.VERSION?(o=t.VERSION.split("."),n=`Baileys version env: ${o}`):(o=(await Ku()).version,n=`Baileys version: ${o}`),this.logger.info(n),this.logger.info(`Group Ignore: ${this.localSettings.groupsIgnore}`);let r;if(this.localProxy?.enabled)if(this.logger.info("Proxy enabled: "+this.localProxy?.host),this.localProxy?.host?.includes("proxyscrape"))try{let d=(await Qe.get(this.localProxy?.host)).data.split(`\r
`),u=Math.floor(Math.random()*Math.floor(d.length)),g="http://"+d[u];r={agent:Pe(g),fetchAgent:Pe(g)}}catch{this.localProxy.enabled=!1}else r={agent:Pe({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password}),fetchAgent:Pe({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password})};let a={...r,version:o,logger:Ot({level:this.logBaileys}),printQRInTerminal:!1,auth:{creds:this.instance.authState.state.creds,keys:Zu(this.instance.authState.state.keys,Ot({level:"error"}))},msgRetryCounterCache:this.msgRetryCounterCache,generateHighQualityLinkPreview:!0,getMessage:async c=>await this.getMessage(c),...s,markOnlineOnConnect:this.localSettings.alwaysOnline,retryRequestDelayMs:350,maxMsgRetryCount:4,fireInitQueries:!0,connectTimeoutMs:3e4,keepAliveIntervalMs:3e4,qrTimeout:45e3,emitOwnEvents:!1,shouldIgnoreJid:c=>{let l=this.localSettings.groupsIgnore&&xe(c),d=!this.localSettings.readStatus&&zu(c),u=Xu(c);return l||d||u},syncFullHistory:this.localSettings.syncFullHistory,shouldSyncHistoryMessage:c=>this.historySyncNotification(c),cachedGroupMetadata:this.getGroupMetadataCache,userDevicesCache:this.userDevicesCache,transactionOpts:{maxCommitRetries:10,delayBetweenTriesMs:3e3},patchMessageBeforeSending(c){return c.deviceSentMessage?.message?.listMessage?.listType===xt.Message.ListMessage.ListType.PRODUCT_LIST&&(c=JSON.parse(JSON.stringify(c)),c.deviceSentMessage.message.listMessage.listType=xt.Message.ListMessage.ListType.SINGLE_SELECT),c.listMessage?.listType==xt.Message.ListMessage.ListType.PRODUCT_LIST&&(c=JSON.parse(JSON.stringify(c)),c.listMessage.listType=xt.Message.ListMessage.ListType.SINGLE_SELECT),c}};return this.endSession=!1,this.client=Gu(a),this.localSettings.wavoipToken&&this.localSettings.wavoipToken.length>0&&oa(this.localSettings.wavoipToken,this.client,this.connectionStatus.state,!0),this.eventHandler(),this.client.ws.on("CB:call",c=>{console.log("CB:call",c);let l={event:"CB:call",packet:c};this.sendDataWebhook("call",l,!0,["websocket"])}),this.client.ws.on("CB:ack,class:call",c=>{console.log("CB:ack,class:call",c);let l={event:"CB:ack,class:call",packet:c};this.sendDataWebhook("call",l,!0,["websocket"])}),this.phoneNumber=e,this.client}async connectToWhatsapp(e){try{return this.loadChatwoot(),this.loadSettings(),this.loadWebhook(),this.loadProxy(),await this.createClient(e)}catch(t){throw this.logger.error(t),new U(t?.toString())}}async reloadConnection(){try{return await this.createClient(this.phoneNumber)}catch(e){throw this.logger.error(e),new U(e?.toString())}}eventHandler(){this.client.ev.process(async e=>{if(!this.endSession){let t=this.configService.get("DATABASE"),s=await this.findSettings();if(e.call){let o=e.call[0];if(s?.rejectCall&&o.status=="offer"&&this.client.rejectCall(o.id,o.from),s?.msgCall?.trim().length>0&&o.status=="offer"){let n=await this.client.sendMessage(o.from,{text:s.msgCall});this.client.ev.emit("messages.upsert",{messages:[n],type:"notify"})}this.sendDataWebhook("call",o)}if(e["connection.update"]&&this.connectionUpdate(e["connection.update"]),e["creds.update"]&&this.instance.authState.saveCreds(),e["messaging-history.set"]){let o=e["messaging-history.set"];this.messageHandle["messaging-history.set"](o)}if(e["messages.upsert"]){let o=e["messages.upsert"];this.messageHandle["messages.upsert"](o,s)}if(e["messages.update"]){let o=e["messages.update"];this.messageHandle["messages.update"](o,s)}if(e["message-receipt.update"]){let o=e["message-receipt.update"],n={};for(let r of o)typeof r.key.remoteJid=="string"&&typeof r.receipt.readTimestamp=="number"&&(n[r.key.remoteJid]=r.receipt.readTimestamp);await Promise.all(Object.keys(n).map(async r=>this.updateMessagesReadedByTimestamp(r,n[r])))}if(e["presence.update"]){let o=e["presence.update"];if(s?.groupsIgnore&&o.id.includes("@g.us"))return;this.sendDataWebhook("presence.update",o)}if(!s?.groupsIgnore){if(e["groups.upsert"]){let o=e["groups.upsert"];this.groupHandler["groups.upsert"](o)}if(e["groups.update"]){let o=e["groups.update"];this.groupHandler["groups.update"](o)}if(e["group-participants.update"]){let o=e["group-participants.update"];this.groupHandler["group-participants.update"](o)}}if(e["chats.upsert"]){let o=e["chats.upsert"];this.chatHandle["chats.upsert"](o)}if(e["chats.update"]){let o=e["chats.update"];this.chatHandle["chats.update"](o)}if(e["chats.delete"]){let o=e["chats.delete"];this.chatHandle["chats.delete"](o)}if(e["contacts.upsert"]){let o=e["contacts.upsert"];this.contactHandle["contacts.upsert"](o)}if(e["contacts.update"]){let o=e["contacts.update"];this.contactHandle["contacts.update"](o)}if(e["labels.association"]){let o=e["labels.association"];this.labelHandle["labels.association"](o,t);return}if(e["labels.edit"]){let o=e["labels.edit"];this.labelHandle["labels.edit"](o);return}}})}historySyncNotification(e){let t={instanceName:this.instance.name};return this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&this.localChatwoot.importMessages&&this.isSyncNotificationFromUsedSyncType(e)&&(e.chunkOrder===1&&this.chatwootService.startImportHistoryMessages(t),e.progress===100&&setTimeout(()=>{this.chatwootService.importHistoryMessages(t)},1e4)),!0}isSyncNotificationFromUsedSyncType(e){return this.localSettings.syncFullHistory&&e?.syncType===2||!this.localSettings.syncFullHistory&&e?.syncType===3}async profilePicture(e){let t=X(e);try{let s=await this.client.profilePictureUrl(t,"image");return{wuid:t,profilePictureUrl:s}}catch{return{wuid:t,profilePictureUrl:null}}}async getStatus(e){let t=X(e);try{return{wuid:t,status:(await this.client.fetchStatus(t))[0]?.status}}catch{return{wuid:t,status:null}}}async fetchProfile(e,t){let s=t?X(t):this.client?.user?.id,o=(await this.whatsappNumber({numbers:[s]}))?.shift();if(!o.exists)throw new f(o);try{if(t){let n=(await this.whatsappNumber({numbers:[s]}))?.shift(),r=await this.profilePicture(n?.jid),a=await this.getStatus(n?.jid),c=await this.fetchBusinessProfile(n?.jid);return{wuid:n?.jid||s,name:n?.name,numberExists:n?.exists,picture:r?.profilePictureUrl,status:a?.status,isBusiness:c.isBusiness,email:c?.email,description:c?.description,website:c?.website?.shift()}}else{let n=e?[e]:null,r=await B.instanceInfo(n),a=await this.fetchBusinessProfile(s);return{wuid:s,name:r?.profileName,numberExists:!0,picture:r?.profilePicUrl,status:r?.connectionStatus,isBusiness:a.isBusiness,email:a?.email,description:a?.description,website:a?.website?.shift()}}}catch{return{wuid:s,name:null,picture:null,status:null,os:null,isBusiness:!1}}}async offerCall({number:e,isVideo:t,callDuration:s}){let o=X(e);try{let n=await this.client.offerCall(o,t);return setTimeout(()=>this.client.terminateCall(n.id,n.to),s*1e3),n}catch(n){return n}}async sendMessage(e,t,s,o,n,r,a){e=e.toLowerCase();let c={quoted:n};if(xe(e)&&(c.useCachedGroupMetadata=!0),a&&(c.ephemeralExpiration=a),r?c.messageId=r:c.messageId="3EB0"+id(18).toString("hex").toUpperCase(),t.viewOnceMessage){let l=pa(e,t,{timestamp:new Date,userJid:this.instance.wuid,messageId:r,quoted:n}),d=await this.client.relayMessage(e,t,{messageId:r});l.key={id:d,remoteJid:e,participant:ua(e)?e:void 0,fromMe:!0};for(let[u,g]of Object.entries(l))(!g||(sd(g)&&g.length)===0)&&delete l[u];return l}if(!t.audio&&!t.poll&&!t.sticker&&!t.conversation&&e!=="status@broadcast"&&t.reactionMessage)return await this.client.sendMessage(e,{react:{text:t.reactionMessage.text,key:t.reactionMessage.key}},c);if(t.conversation)return await this.client.sendMessage(e,{text:t.conversation,mentions:s,linkPreview:o},c);if(!t.audio&&!t.poll&&!t.sticker&&e!="status@broadcast")return await this.client.sendMessage(e,{forward:{key:{remoteJid:this.instance.wuid,fromMe:!0},message:t},mentions:s},c);if(e==="status@broadcast"){let l;t.status.option.allContacts?l=(await this.prismaRepository.contact.findMany({where:{instanceId:this.instanceId,remoteJid:{not:{endsWith:"@g.us"}}}})).map(w=>w.remoteJid):l=t.status.option.statusJidList;let d=10,u=Array.from({length:Math.ceil(l.length/d)},(y,w)=>l.slice(w*d,w*d+d)),g=null,m,h=u.shift();return h&&(m=await this.client.sendMessage(e,t.status.content,{backgroundColor:t.status.option.backgroundColor,font:t.status.option.font,statusJidList:h}),g=m.key.id),u.length===0||await Promise.allSettled(u.map(async y=>await this.client.sendMessage(e,t.status.content,{backgroundColor:t.status.option.backgroundColor,font:t.status.option.font,statusJidList:y,messageId:g}))),m}return await this.client.sendMessage(e,t,c)}async sendMessageWithTyping(e,t,s,o=!1){let n=(await this.whatsappNumber({numbers:[e]}))?.shift();if(!n.exists&&!xe(n.jid)&&!n.jid.includes("@broadcast"))throw new f(n);let r=n.jid.toLowerCase();this.logger.verbose(`Sending message to ${r}`);try{if(s?.delay)if(this.logger.verbose(`Typing for ${s.delay}ms to ${r}`),s.delay>2e4){let m=s.delay;for(;m>2e4;)await this.client.presenceSubscribe(r),await this.client.sendPresenceUpdate(s.presence??"composing",r),await ct(2e4),await this.client.sendPresenceUpdate("paused",r),m-=2e4;m>0&&(await this.client.presenceSubscribe(r),await this.client.sendPresenceUpdate(s.presence??"composing",r),await ct(m),await this.client.sendPresenceUpdate("paused",r))}else await this.client.presenceSubscribe(r),await this.client.sendPresenceUpdate(s.presence??"composing",r),await ct(s.delay),await this.client.sendPresenceUpdate("paused",r);let a=s?.linkPreview!=!1?void 0:!1,c;if(s?.quoted){let m=s?.quoted,h=m?.message?m:await this.getMessage(m.key,!0);h&&(c=h)}let l,d;if(xe(r)){let m;try{let h=this.configService.get("CACHE");!h.REDIS.ENABLED&&!h.LOCAL.ENABLED?m=await this.findGroup({groupJid:r},"inner"):m=await this.getGroupMetadataCache(r)}catch{throw new H("Group not found")}if(!m)throw new H("Group not found");s?.mentionsEveryOne?d=m.participants.map(h=>h.id):s?.mentioned?.length&&(d=s.mentioned.map(h=>{let y=X(h);return xe(y)?null:y})),l=await this.sendMessage(r,t,d,a,c,null,m?.ephemeralDuration)}else l=await this.sendMessage(r,t,d,a,c);yo.isLong(l?.messageTimestamp)&&(l.messageTimestamp=l.messageTimestamp?.toNumber());let u=this.prepareMessage(l),g=l?.message?.imageMessage||l?.message?.videoMessage||l?.message?.stickerMessage||l?.message?.ptvMessage||l?.message?.documentMessage||l?.message?.documentWithCaptionMessage||l?.message?.ptvMessage||l?.message?.audioMessage;if(this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&!o&&this.chatwootService.eventWhatsapp("send.message",{instanceName:this.instance.name,instanceId:this.instanceId},u),this.configService.get("OPENAI").ENABLED&&u?.message?.audioMessage){let m=await this.prismaRepository.openaiSetting.findFirst({where:{instanceId:this.instanceId},include:{OpenaiCreds:!0}});m&&m.openaiCredsId&&m.speechToText&&(u.message.speechToText=await this.openaiService.speechToText(m.OpenaiCreds,u,this.client.updateMediaMessage))}if(this.configService.get("DATABASE").SAVE_DATA.NEW_MESSAGE){let m=await this.prismaRepository.message.create({data:u});if(g&&this.configService.get("S3").ENABLE)try{let h=u,y=await this.getBase64FromMediaMessage({message:h},!0),{buffer:w,mediaType:E,fileName:I,size:M}=y,S=Gs.lookup(I).toString(),v=wo(`${this.instance.id}`,u.key.remoteJid,`${u.key.id}`,E,I);await it(v,w,M.fileLength?.low,{"Content-Type":S}),await this.prismaRepository.media.create({data:{messageId:m.id,instanceId:this.instanceId,type:E,fileName:v,mimetype:S}});let O=await Ue(v);u.message.mediaUrl=O,await this.prismaRepository.message.update({where:{id:m.id},data:u})}catch(h){this.logger.error(["Error on upload file to minio",h?.message,h?.stack])}}if(this.localWebhook.enabled&&g&&this.localWebhook.webhookBase64)try{let m=await fo({key:u.key,message:u?.message},"buffer",{},{logger:Ot({level:"error"}),reuploadRequest:this.client.updateMediaMessage});u.message.base64=m?m.toString("base64"):void 0}catch(m){this.logger.error(["Error converting media to base64",m?.message])}return this.logger.log(u),this.sendDataWebhook("send.message",u),this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled&&o&&await Je.emit({instance:{instanceName:this.instance.name,instanceId:this.instanceId},remoteJid:u.key.remoteJid,msg:u,pushName:u.pushName,isIntegration:o}),u}catch(a){throw this.logger.error(a),new f(a.toString())}}async sendPresence(e){try{let{number:t}=e,s=(await this.whatsappNumber({numbers:[t]}))?.shift();if(!s.exists&&!xe(s.jid)&&!s.jid.includes("@broadcast"))throw new f(s);let o=s.jid;if(e?.delay&&e?.delay>2e4){let n=e?.delay;for(;n>2e4;)await this.client.presenceSubscribe(o),await this.client.sendPresenceUpdate(e?.presence??"composing",o),await ct(2e4),await this.client.sendPresenceUpdate("paused",o),n-=2e4;n>0&&(await this.client.presenceSubscribe(o),await this.client.sendPresenceUpdate(e?.presence??"composing",o),await ct(n),await this.client.sendPresenceUpdate("paused",o))}else await this.client.presenceSubscribe(o),await this.client.sendPresenceUpdate(e?.presence??"composing",o),await ct(e?.delay),await this.client.sendPresenceUpdate("paused",o);return{presence:e.presence}}catch(t){throw this.logger.error(t),new f(t.toString())}}async setPresence(e){try{return await this.client.sendPresenceUpdate(e.presence),{presence:e.presence}}catch(t){throw this.logger.error(t),new f(t.toString())}}async textMessage(e,t=!1){let s=e.text;if(!s||s.trim().length===0)throw new f("Text is required");return await this.sendMessageWithTyping(e.number,{conversation:e.text},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},t)}async pollMessage(e){return await this.sendMessageWithTyping(e.number,{poll:{name:e.name,selectableCount:e.selectableCount,values:e.values}},{delay:e?.delay,presence:"composing",quoted:e?.quoted,linkPreview:e?.linkPreview,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async formatStatusMessage(e){if(!e.type)throw new f("Type is required");if(!e.content)throw new f("Content is required");if(e.allContacts){let t=await this.prismaRepository.contact.findMany({where:{instanceId:this.instanceId}});if(!t.length)throw new f("Contacts not found");e.statusJidList=t.filter(s=>s.pushName).map(s=>s.remoteJid)}if(!e.statusJidList?.length&&!e.allContacts)throw new f("StatusJidList is required");if(e.type==="text"){if(!e.backgroundColor)throw new f("Background color is required");if(!e.font)throw new f("Font is required");return{content:{text:e.content},option:{backgroundColor:e.backgroundColor,font:e.font,statusJidList:e.statusJidList}}}if(e.type==="image")return{content:{image:{url:e.content},caption:e.caption},option:{statusJidList:e.statusJidList}};if(e.type==="video")return{content:{video:{url:e.content},caption:e.caption},option:{statusJidList:e.statusJidList}};if(e.type==="audio"){let t=await this.processAudioMp4(e.content);if(Buffer.isBuffer(t))return{content:{audio:t,ptt:!0,mimetype:"audio/ogg; codecs=opus"},option:{statusJidList:e.statusJidList}};throw new U(t)}throw new f("Type not found")}async statusMessage(e,t){let s={...e};t&&(s.content=t.buffer.toString("base64"));let o=await this.formatStatusMessage(s);return await this.sendMessageWithTyping("status@broadcast",{status:o})}async prepareMediaMessage(e){try{let t=e.mediatype==="ptv"?"video":e.mediatype,s=await ed({[t]:Le(e.media)?{url:e.media}:Buffer.from(e.media,"base64")},{upload:this.client.waUploadToServer}),o=e.mediatype+"Message";if(e.mediatype==="document"&&!e.fileName){let a=new RegExp(/.*\/(.+?)\./).exec(e.media);e.fileName=a[1]}e.mediatype==="image"&&!e.fileName&&(e.fileName="image.png"),e.mediatype==="video"&&!e.fileName&&(e.fileName="video.mp4");let n;if(e.mimetype)n=e.mimetype;else if(n=Gs.lookup(e.fileName),!n&&Le(e.media)){let r={responseType:"arraybuffer"};this.localProxy?.enabled&&(r={...r,httpsAgent:Pe({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password})}),n=(await Qe.get(e.media,r)).headers["content-type"]}if(e.mediatype==="ptv"){if(s[o]=s[t+"Message"],n="video/mp4",!s[o])throw new Error("Failed to prepare video message");try{let r;if(Le(e.media))r=e.media;else{let c=Buffer.from(e.media,"base64");if(!c||c.length===0)throw new Error("Invalid media buffer");r=c}let a=await dd(r);if(!a||a<=0)throw new Error("Invalid media duration");this.logger.verbose(`Video duration: ${a} seconds`),s[o].seconds=a}catch(r){throw this.logger.error("Error getting video duration:"),this.logger.error(r),new Error(`Failed to get video duration: ${r.message}`)}}return s[o].caption=e?.caption,s[o].mimetype=n,s[o].fileName=e.fileName,e.mediatype==="video"&&(s[o].jpegThumbnail=Uint8Array.from(od(wo(process.cwd(),"public","images","video-cover.png"))),s[o].gifPlayback=!1),pa("",{[o]:{...s[o]}},{userJid:this.instance.wuid})}catch(t){throw this.logger.error(t),new U(t?.toString()||t)}}async convertToWebP(e){try{let t;if(Vs(e)){let o=e.replace(/^data:image\/(jpeg|png|gif);base64,/,"");t=Buffer.from(o,"base64")}else{let o=new Date().getTime(),n=`${e}?timestamp=${o}`,r={responseType:"arraybuffer"};this.localProxy?.enabled&&(r={...r,httpsAgent:Pe({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password})});let a=await Qe.get(n,r);t=Buffer.from(a.data,"binary")}return await ld(t).webp().toBuffer()}catch(t){throw console.error("Erro ao converter a imagem para WebP:",t),t}}async mediaSticker(e,t){let s={...e};t&&(s.sticker=t.buffer.toString("base64"));let o=await this.convertToWebP(e.sticker),n=e.sticker.includes(".gif");return await this.sendMessageWithTyping(e.number,{sticker:o,gifPlayback:n},{delay:e?.delay,presence:"composing",quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async mediaMessage(e,t,s=!1){let o={...e};t&&(o.media=t.buffer.toString("base64"));let n=await this.prepareMediaMessage(o);return await this.sendMessageWithTyping(e.number,{...n.message},{delay:e?.delay,presence:"composing",quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},s)}async ptvMessage(e,t,s=!1){let o={number:e.number,media:e.video,mediatype:"ptv",delay:e?.delay,quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned};t&&(o.media=t.buffer.toString("base64"));let n=await this.prepareMediaMessage(o);return await this.sendMessageWithTyping(e.number,{...n.message},{delay:e?.delay,presence:"composing",quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned},s)}async processAudioMp4(e){let t;if(Le(e))t=(await Qe.get(e,{responseType:"stream"})).data;else{let s=Buffer.from(e,"base64");t=new js,t.end(s)}return new Promise((s,o)=>{let n=td(aa.path,["-i","pipe:0","-vn","-ab","128k","-ar","44100","-f","mp4","-movflags","frag_keyframe+empty_moov","pipe:1"]),r=[],a="";n.stdout.on("data",c=>{r.push(c)}),n.stderr.on("data",c=>{a+=c.toString(),this.logger.verbose(`ffmpeg stderr: ${c}`)}),n.on("error",c=>{console.error("Error in ffmpeg process",c),o(c)}),n.on("close",c=>{if(c===0){this.logger.verbose("Audio converted to mp4");let l=Buffer.concat(r);s(l)}else this.logger.error(`ffmpeg exited with code ${c}`),this.logger.error(`ffmpeg stderr: ${a}`),o(new Error(`ffmpeg exited with code ${c}: ${a}`))}),t.pipe(n.stdin),t.on("error",c=>{console.error("Error in inputStream",c),n.stdin.end(),o(c)})})}async processAudio(e){if(process.env.API_AUDIO_CONVERTER){this.logger.verbose("Using audio converter API");let t=new nd;Le(e)?t.append("url",e):t.append("base64",e);let{data:s}=await Qe.post(process.env.API_AUDIO_CONVERTER,t,{headers:{...t.getHeaders(),apikey:process.env.API_AUDIO_CONVERTER_KEY}});if(!s.audio)throw new U("Failed to convert audio");return this.logger.verbose("Audio converted"),Buffer.from(s.audio,"base64")}else{let t;if(Le(e)){let s=new Date().getTime(),o=`${e}?timestamp=${s}`,n={responseType:"stream"};t=(await Qe.get(o,n)).data.pipe(new js)}else{let s=Buffer.from(e,"base64");t=new js,t.end(s)}return new Promise((s,o)=>{let n=new js,r=[];n.on("data",a=>r.push(a)),n.on("end",()=>{let a=Buffer.concat(r);s(a)}),n.on("error",a=>{console.log("error",a),o(a)}),da.setFfmpegPath(aa.path),da(t).outputFormat("ogg").noVideo().audioCodec("libopus").addOutputOptions("-avoid_negative_ts make_zero").audioChannels(1).pipe(n,{end:!0}).on("error",function(a){console.log("error",a),o(a)})})}}async audioWhatsapp(e,t,s=!1){let o={...e};if(t?.buffer)o.audio=t.buffer.toString("base64");else if(!Le(e.audio)&&!Vs(e.audio))throw console.error("Invalid file or audio source"),new f("File buffer, URL, or base64 audio is required");if(!e?.encoding&&e?.encoding!==!1&&(e.encoding=!0),e?.encoding){let n=await this.processAudio(o.audio);if(Buffer.isBuffer(n))return this.sendMessageWithTyping(e.number,{audio:n,ptt:!0,mimetype:"audio/ogg; codecs=opus"},{presence:"recording",delay:e?.delay},s);throw new U("Failed to convert audio")}return await this.sendMessageWithTyping(e.number,{audio:Le(e.audio)?{url:e.audio}:Buffer.from(e.audio,"base64"),ptt:!0,mimetype:"audio/ogg; codecs=opus"},{presence:"recording",delay:e?.delay},s)}generateRandomId(e=11){let t="ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",s="";for(let o=0;o<e;o++)s+=t.charAt(Math.floor(Math.random()*t.length));return s}toJSONString(e){let t=o=>JSON.stringify(o);return{call:()=>t({display_text:e.displayText,phone_number:e.phoneNumber}),reply:()=>t({display_text:e.displayText,id:e.id}),copy:()=>t({display_text:e.displayText,copy_code:e.copyCode}),url:()=>t({display_text:e.displayText,url:e.url,merchant_url:e.url}),pix:()=>t({currency:e.currency,total_amount:{value:0,offset:100},reference_id:this.generateRandomId(),type:"physical-goods",order:{status:"pending",subtotal:{value:0,offset:100},order_type:"ORDER",items:[{name:"",amount:{value:0,offset:100},quantity:0,sale_amount:{value:0,offset:100}}]},payment_settings:[{type:"pix_static_code",pix_static_code:{merchant_name:e.name,key:e.key,key_type:this.mapKeyType.get(e.keyType)}}],share_payment_status:!1})}[e.type]?.()||""}async buttonMessage(e){if(e.buttons.length===0)throw new f("At least one button is required");let t=e.buttons.some(c=>c.type==="reply"),s=e.buttons.some(c=>c.type==="pix"),o=e.buttons.some(c=>c.type!=="reply"&&c.type!=="pix");if(t){if(e.buttons.length>3)throw new f("Maximum of 3 reply buttons allowed");if(o)throw new f("Reply buttons cannot be mixed with other button types")}if(s){if(e.buttons.length>1)throw new f("Only one PIX button is allowed");if(o)throw new f("PIX button cannot be mixed with other button types");let c={viewOnceMessage:{message:{interactiveMessage:{nativeFlowMessage:{buttons:[{name:this.mapType.get("pix"),buttonParamsJson:this.toJSONString(e.buttons[0])}],messageParamsJson:JSON.stringify({from:"api",templateId:T()})}}}}};return await this.sendMessageWithTyping(e.number,c,{delay:e?.delay,presence:"composing",quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}let n=await(async()=>{if(e?.thumbnailUrl)return await this.prepareMediaMessage({mediatype:"image",media:e.thumbnailUrl})})(),r=e.buttons.map(c=>({name:this.mapType.get(c.type),buttonParamsJson:this.toJSONString(c)})),a={viewOnceMessage:{message:{interactiveMessage:{body:{text:(()=>{let c="*"+e.title+"*";return e?.description&&(c+=`

`,c+=e.description,c+=`
`),c})()},footer:{text:e?.footer},header:(()=>{if(n?.message?.imageMessage)return{hasMediaAttachment:!!n.message.imageMessage,imageMessage:n.message.imageMessage}})(),nativeFlowMessage:{buttons:r,messageParamsJson:JSON.stringify({from:"api",templateId:T()})}}}}};return await this.sendMessageWithTyping(e.number,a,{delay:e?.delay,presence:"composing",quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async locationMessage(e){return await this.sendMessageWithTyping(e.number,{locationMessage:{degreesLatitude:e.latitude,degreesLongitude:e.longitude,name:e?.name,address:e?.address}},{delay:e?.delay,presence:"composing",quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async listMessage(e){return await this.sendMessageWithTyping(e.number,{listMessage:{title:e.title,description:e.description,buttonText:e?.buttonText,footerText:e?.footerText,sections:e.sections,listType:2}},{delay:e?.delay,presence:"composing",quoted:e?.quoted,mentionsEveryOne:e?.mentionsEveryOne,mentioned:e?.mentioned})}async contactMessage(e){let t={},s=o=>{let n=`BEGIN:VCARD
VERSION:3.0
N:${o.fullName}
FN:${o.fullName}
`;return o.organization&&(n+=`ORG:${o.organization};
`),o.email&&(n+=`EMAIL:${o.email}
`),o.url&&(n+=`URL:${o.url}
`),o.wuid||(o.wuid=X(o.phoneNumber)),n+=`item1.TEL;waid=${o.wuid}:${o.phoneNumber}
item1.X-ABLabel:Celular
END:VCARD`,n};return e.contact.length===1?t.contactMessage={displayName:e.contact[0].fullName,vcard:s(e.contact[0])}:t.contactsArrayMessage={displayName:`${e.contact.length} contacts`,contacts:e.contact.map(o=>({displayName:o.fullName,vcard:s(o)}))},await this.sendMessageWithTyping(e.number,{...t},{})}async reactionMessage(e){return await this.sendMessageWithTyping(e.key.remoteJid,{reactionMessage:{key:e.key,text:e.reaction}})}async whatsappNumber(e){let t={groups:[],broadcast:[],users:[]};e.numbers.forEach(u=>{let g=X(u);xe(g)?t.groups.push({number:u,jid:g}):g==="status@broadcast"?t.broadcast.push({number:u,jid:g}):t.users.push({number:u,jid:g})});let s=[];s.push(...t.broadcast.map(({jid:u,number:g})=>new yt(u,!1,g)));let o=await Promise.all(t.groups.map(async({jid:u,number:g})=>{let m=await this.findGroup({groupJid:u},"inner");return m||new yt(u,!1,g),new yt(m.id,!!m?.id,g,m?.subject)}));s.push(...o);let n=await this.prismaRepository.contact.findMany({where:{instanceId:this.instanceId,remoteJid:{in:t.users.map(({jid:u})=>u)}}}),r=t.users.map(({jid:u})=>u.replace("+","")),a=await Qr(r),c=r.filter(u=>!a.some(g=>g.jidOptions.includes(u))),l=await this.client.onWhatsApp(...c),d=await Promise.all(t.users.map(async u=>{let g=null,m=a.find(y=>y.jidOptions.includes(u.jid.replace("+","")));if(m)return{exists:!0,jid:m.remoteJid,name:n.find(y=>y.remoteJid===m.remoteJid)?.pushName,number:u.number};if(u.number.startsWith("55")){let y=u.number.slice(4,5)==="9"&&u.number.length===13?u.number:`${u.number.slice(0,4)}9${u.number.slice(4)}`,w=u.number.length===12?u.number:u.number.slice(0,4)+u.number.slice(5);g=l.find(E=>E.jid===`${y}@s.whatsapp.net`||E.jid===`${w}@s.whatsapp.net`)}if(!g&&(u.number.startsWith("52")||u.number.startsWith("54"))){let y="";u.number.startsWith("52")&&(y=""),u.number.startsWith("54")&&(y="9");let w=u.number.slice(2,3)===y&&u.number.length===13?u.number:`${u.number.slice(0,2)}${y}${u.number.slice(2)}`,E=u.number.length===12?u.number:u.number.slice(0,2)+u.number.slice(3);g=l.find(I=>I.jid===`${w}@s.whatsapp.net`||I.jid===`${E}@s.whatsapp.net`)}g||(g=l.find(y=>y.jid===u.jid));let h=g?.jid||u.jid;return{exists:!!g?.exists,jid:h,name:n.find(y=>y.remoteJid===h)?.pushName,number:u.number}}));return await at(d.filter(u=>u.exists).map(u=>({remoteJid:u.jid}))),s.push(...d),s}async markMessageAsRead(e){try{let t=[];return e.readMessages.forEach(s=>{(xe(s.remoteJid)||ua(s.remoteJid))&&t.push({remoteJid:s.remoteJid,fromMe:s.fromMe,id:s.id})}),await this.client.readMessages(t),{message:"Read messages",read:"success"}}catch(t){throw new U("Read messages fail",t.toString())}}async getLastMessage(e){let t={key:{remoteJid:e},instanceId:this.instance.id},s=await this.prismaRepository.message.findMany({where:t,orderBy:{messageTimestamp:"desc"},take:1});if(s.length===0)throw new H("Messages not found");let o=s.pop();for(let n of s)n.messageTimestamp>=o.messageTimestamp&&(o=n);return o}async archiveChat(e){try{let t=e.lastMessage,s=e.chat;if(!t&&s?t=await this.getLastMessage(s):(t=e.lastMessage,t.messageTimestamp=t?.messageTimestamp??Date.now(),s=t?.key?.remoteJid),!t||Object.keys(t).length===0)throw new H("Last message not found");return await this.client.chatModify({archive:e.archive,lastMessages:[t]},X(s)),{chatId:s,archived:!0}}catch(t){throw new U({archived:!1,message:["An error occurred while archiving the chat. Open a calling.",t.toString()]})}}async markChatUnread(e){try{let t=e.lastMessage,s=e.chat;if(!t&&s?t=await this.getLastMessage(s):(t=e.lastMessage,t.messageTimestamp=t?.messageTimestamp??Date.now(),s=t?.key?.remoteJid),!t||Object.keys(t).length===0)throw new H("Last message not found");return await this.client.chatModify({markRead:!1,lastMessages:[t]},X(s)),{chatId:s,markedChatUnread:!0}}catch(t){throw new U({markedChatUnread:!1,message:["An error occurred while marked unread the chat. Open a calling.",t.toString()]})}}async deleteMessage(e){try{let t=await this.client.sendMessage(e.remoteJid,{delete:e});if(t){let s=t.message?.protocolMessage?.key?.id;if(s){let o=C.get("DATABASE").DELETE_DATA.LOGICAL_MESSAGE_DELETE,n=await this.prismaRepository.message.findFirst({where:{key:{path:["id"],equals:s}}});if(o){if(!n)return t;let r=typeof n?.key=="object"&&n.key!==null?n.key:{};n=await this.prismaRepository.message.update({where:{id:n.id},data:{key:{...r,deleted:!0},status:"DELETED"}})}else await this.prismaRepository.message.deleteMany({where:{id:n.id}});this.sendDataWebhook("messages.delete",{id:n.id,instanceId:n.instanceId,key:n.key,messageType:n.messageType,status:"DELETED",source:n.source,messageTimestamp:n.messageTimestamp,pushName:n.pushName,participant:n.participant,message:n.message})}}return t}catch(t){throw new U("Error while deleting message for everyone",t?.toString())}}async getBase64FromMediaMessage(e,t=!1){try{let s=e?.message,o=e?.convertToMp4??!1,n=s?.message?s:await this.getMessage(s.key,!0);if(!n)throw"Message not found";for(let g of fr)n.message[g]&&(n.message=n.message[g].message);let r,a;for(let g of hr)if(r=n.message[g],r){a=g;break}if(!r)throw"The message is not of the media type";typeof r.mediaKey=="object"&&(n.message=JSON.parse(JSON.stringify(n.message)));let c=await fo({key:n?.key,message:n?.message},"buffer",{},{logger:Ot({level:"error"}),reuploadRequest:this.client.updateMediaMessage}),l=la(n.message),d=Gs.extension(r?.mimetype),u=r?.fileName||`${n.key.id}.${d}`||`${T()}.${d}`;if(o&&l==="audioMessage")try{let g=await this.processAudioMp4(c.toString("base64"));if(Buffer.isBuffer(g))return{mediaType:a,fileName:u,caption:r.caption,size:{fileLength:r.fileLength,height:r.height,width:r.width},mimetype:"audio/mp4",base64:g.toString("base64"),buffer:t?g:null}}catch(g){throw this.logger.error("Error converting audio to mp4:"),this.logger.error(g),new f("Failed to convert audio to MP4")}return{mediaType:a,fileName:u,caption:r.caption,size:{fileLength:r.fileLength,height:r.height,width:r.width},mimetype:r.mimetype,base64:c.toString("base64"),buffer:t?c:null}}catch(s){throw this.logger.error("Error processing media message:"),this.logger.error(s),new f(s.toString())}}async fetchPrivacySettings(){let e=await this.client.fetchPrivacySettings();return{readreceipts:e.readreceipts,profile:e.profile,status:e.status,online:e.online,last:e.last,groupadd:e.groupadd}}async updatePrivacySettings(e){try{return await this.client.updateReadReceiptsPrivacy(e.readreceipts),await this.client.updateProfilePicturePrivacy(e.profile),await this.client.updateStatusPrivacy(e.status),await this.client.updateOnlinePrivacy(e.online),await this.client.updateLastSeenPrivacy(e.last),await this.client.updateGroupsAddPrivacy(e.groupadd),this.reloadConnection(),{update:"success",data:{readreceipts:e.readreceipts,profile:e.profile,status:e.status,online:e.online,last:e.last,groupadd:e.groupadd}}}catch(t){throw new U("Error updating privacy settings",t.toString())}}async fetchBusinessProfile(e){try{let t=e?X(e):this.instance.wuid,s=await this.client.getBusinessProfile(t);return s?{isBusiness:!0,...s}:{isBusiness:!1,message:"Not is business profile",...(await this.whatsappNumber({numbers:[t]}))?.shift()}}catch(t){throw new U("Error updating profile name",t.toString())}}async updateProfileName(e){try{return await this.client.updateProfileName(e),{update:"success"}}catch(t){throw new U("Error updating profile name",t.toString())}}async updateProfileStatus(e){try{return await this.client.updateProfileStatus(e),{update:"success"}}catch(t){throw new U("Error updating profile status",t.toString())}}async updateProfilePicture(e){try{let t;if(Le(e)){let s=new Date().getTime(),o=`${e}?timestamp=${s}`,n={responseType:"arraybuffer"};this.localProxy?.enabled&&(n={...n,httpsAgent:Pe({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password})}),t=(await Qe.get(o,n)).data}else if(Vs(e))t=Buffer.from(e,"base64");else throw new f('"profilePicture" must be a url or a base64');return await this.client.updateProfilePicture(this.instance.wuid,t),this.reloadConnection(),{update:"success"}}catch(t){throw new U("Error updating profile picture",t.toString())}}async removeProfilePicture(){try{return await this.client.removeProfilePicture(this.instance.wuid),this.reloadConnection(),{update:"success"}}catch(e){throw new U("Error removing profile picture",e.toString())}}async blockUser(e){try{let{number:t}=e,s=(await this.whatsappNumber({numbers:[t]}))?.shift();if(!s.exists&&!xe(s.jid)&&!s.jid.includes("@broadcast"))throw new f(s);let o=s.jid;return await this.client.updateBlockStatus(o,e.status),{block:"success"}}catch(t){throw new U("Error blocking user",t.toString())}}async formatUpdateMessage(e){try{let t=await this.getMessage(e.key,!0);return t?.messageType==="conversation"||t?.messageType==="extendedTextMessage"?{text:e.text}:t?.messageType==="imageMessage"?{image:t?.message?.imageMessage,caption:e.text}:t?.messageType==="videoMessage"?{video:t?.message?.videoMessage,caption:e.text}:null}catch(t){throw this.logger.error(t),new f(t.toString())}}async updateMessage(e){let t=X(e.number),s=await this.formatUpdateMessage(e);if(!s)throw this.logger.error("Message not compatible"),new f("Message not compatible");try{return await this.client.sendMessage(t,{...s,edit:e.key})}catch(o){throw this.logger.error(o),new f(o.toString())}}async fetchLabels(){return(await this.prismaRepository.label.findMany({where:{instanceId:this.instanceId}})).map(t=>({color:t.color,name:t.name,id:t.labelId,predefinedId:t.predefinedId}))}async handleLabel(e){let t=await this.whatsappNumber({numbers:[e.number]});if(t.length===0)throw new H("Number not found");let s=t[0];if(!s.exists)throw new H("Number is not on WhatsApp");try{if(e.action==="add")return await this.client.addChatLabel(s.jid,e.labelId),await this.addLabel(e.labelId,this.instanceId,s.jid),{numberJid:s.jid,labelId:e.labelId,add:!0};if(e.action==="remove")return await this.client.removeChatLabel(s.jid,e.labelId),await this.removeLabel(e.labelId,this.instanceId,s.jid),{numberJid:s.jid,labelId:e.labelId,remove:!0}}catch(o){throw new f(`Unable to ${e.action} label to chat`,o.toString())}}async updateGroupMetadataCache(e){try{let t=await this.client.groupMetadata(e),s=this.configService.get("CACHE");return(s?.REDIS?.ENABLED&&s?.REDIS?.URI!==""||s?.LOCAL?.ENABLED)&&(this.logger.verbose(`Updating cache for group: ${e}`),await bo.set(e,{timestamp:Date.now(),data:t})),t}catch(t){return this.logger.error(t),null}}async createGroup(e){try{let t=(await this.whatsappNumber({numbers:e.participants})).filter(n=>n.exists).map(n=>n.jid),{id:s}=await this.client.groupCreate(e.subject,t);return e?.description&&await this.client.groupUpdateDescription(s,e.description),e?.promoteParticipants&&await this.updateGParticipant({groupJid:s,action:"promote",participants:t}),await this.client.groupMetadata(s)}catch(t){throw this.logger.error(t),new U("Error creating group",t.toString())}}async updateGroupPicture(e){try{let t;if(Le(e.image)){let s=new Date().getTime(),o=`${e.image}?timestamp=${s}`,n={responseType:"arraybuffer"};this.localProxy?.enabled&&(n={...n,httpsAgent:Pe({host:this.localProxy.host,port:this.localProxy.port,protocol:this.localProxy.protocol,username:this.localProxy.username,password:this.localProxy.password})}),t=(await Qe.get(o,n)).data}else if(Vs(e.image))t=Buffer.from(e.image,"base64");else throw new f('"profilePicture" must be a url or a base64');return await this.client.updateProfilePicture(e.groupJid,t),{update:"success"}}catch(t){throw new U("Error update group picture",t.toString())}}async updateGroupSubject(e){try{return await this.client.groupUpdateSubject(e.groupJid,e.subject),{update:"success"}}catch(t){throw new U("Error updating group subject",t.toString())}}async updateGroupDescription(e){try{return await this.client.groupUpdateDescription(e.groupJid,e.description),{update:"success"}}catch(t){throw new U("Error updating group description",t.toString())}}async findGroup(e,t="out"){try{let s=await this.client.groupMetadata(e.groupJid);if(!s)return this.logger.error("Group not found"),null;let o=await this.profilePicture(s.id);return{id:s.id,subject:s.subject,subjectOwner:s.subjectOwner,subjectTime:s.subjectTime,pictureUrl:o.profilePictureUrl,size:s.participants.length,creation:s.creation,owner:s.owner,desc:s.desc,descId:s.descId,restrict:s.restrict,announce:s.announce,participants:s.participants,isCommunity:s.isCommunity,isCommunityAnnounce:s.isCommunityAnnounce,linkedParent:s.linkedParent}}catch(s){if(t==="inner")return;throw new H("Error fetching group",s.toString())}}async fetchAllGroups(e){let t=Object.values(await this?.client?.groupFetchAllParticipating()),s=[];for(let o of t){let n=await this.profilePicture(o.id),r={id:o.id,subject:o.subject,subjectOwner:o.subjectOwner,subjectTime:o.subjectTime,pictureUrl:n?.profilePictureUrl,size:o.participants.length,creation:o.creation,owner:o.owner,desc:o.desc,descId:o.descId,restrict:o.restrict,announce:o.announce,isCommunity:o.isCommunity,isCommunityAnnounce:o.isCommunityAnnounce,linkedParent:o.linkedParent};e.getParticipants=="true"&&(r.participants=o.participants),s=[...s,r]}return s}async inviteCode(e){try{let t=await this.client.groupInviteCode(e.groupJid);return{inviteUrl:`https://chat.whatsapp.com/${t}`,inviteCode:t}}catch(t){throw new H("No invite code",t.toString())}}async inviteInfo(e){try{return await this.client.groupGetInviteInfo(e.inviteCode)}catch{throw new H("No invite info",e.inviteCode)}}async sendInvite(e){try{let s=(await this.inviteCode({groupJid:e.groupJid})).inviteUrl,o=e.numbers.map(c=>X(c)),a={conversation:`${e.description??""}

${s}`};for await(let c of o)await this.sendMessageWithTyping(c,a);return{send:!0,inviteUrl:s}}catch{throw new H("No send invite")}}async acceptInviteCode(e){try{return{accepted:!0,groupJid:await this.client.groupAcceptInvite(e.inviteCode)}}catch(t){throw new H("Accept invite error",t.toString())}}async revokeInviteCode(e){try{return{revoked:!0,inviteCode:await this.client.groupRevokeInvite(e.groupJid)}}catch(t){throw new H("Revoke error",t.toString())}}async findParticipants(e){try{let t=(await this.client.groupMetadata(e.groupJid)).participants,s=await this.prismaRepository.contact.findMany({where:{instanceId:this.instanceId,remoteJid:{in:t.map(r=>r.id)}}}),o=t.map(r=>{let a=s.find(c=>c.remoteJid===r.id);return{...r,name:r.name??a?.pushName,imgUrl:r.imgUrl??a?.profilePicUrl}}),n=o.filter(r=>r.id.includes("@s.whatsapp"));return n&&await at(n.map(r=>({remoteJid:r.id}))),{participants:o}}catch(t){throw console.error(t),new H("No participants",t.toString())}}async updateGParticipant(e){try{let t=e.participants.map(o=>X(o));return{updateParticipants:await this.client.groupParticipantsUpdate(e.groupJid,t,e.action)}}catch(t){throw new f("Error updating participants",t.toString())}}async updateGSetting(e){try{return{updateSetting:await this.client.groupSettingUpdate(e.groupJid,e.action)}}catch(t){throw new f("Error updating setting",t.toString())}}async toggleEphemeral(e){try{return await this.client.groupToggleEphemeral(e.groupJid,e.expiration),{success:!0}}catch(t){throw new f("Error updating setting",t.toString())}}async leaveGroup(e){try{return await this.client.groupLeave(e.groupJid),{groupJid:e.groupJid,leave:!0}}catch(t){throw new f("Unable to leave the group",t.toString())}}async templateMessage(){throw new Error("Method not available in the Baileys service")}prepareMessage(e){let t=la(e.message),s=e?.message[t],o={key:e.key,pushName:e.pushName,status:de[e.status],message:{...e.message},contextInfo:s?.contextInfo,messageType:t||"unknown",messageTimestamp:e.messageTimestamp,instanceId:this.instanceId,source:Qu(e.key.id)};!o.status&&e.key.fromMe===!1&&(o.status=de[3]),o.message.extendedTextMessage&&(o.messageType="conversation",o.message.conversation=o.message.extendedTextMessage.text,delete o.message.extendedTextMessage),o.message.documentWithCaptionMessage&&(o.messageType="documentMessage",o.message.documentMessage=o.message.documentWithCaptionMessage.message.documentMessage,delete o.message.documentWithCaptionMessage);let n=o?.contextInfo?.quotedMessage;return n&&(n.extendedTextMessage&&(n.conversation=n.extendedTextMessage.text,delete n.extendedTextMessage),n.documentWithCaptionMessage&&(n.documentMessage=n.documentWithCaptionMessage.message.documentMessage,delete n.documentWithCaptionMessage)),o}async syncChatwootLostMessages(){if(this.configService.get("CHATWOOT").ENABLED&&this.localChatwoot?.enabled){let e=await this.findChatwoot(),t=o=>this.prepareMessage(o);this.chatwootService.syncLostMessages({instanceName:this.instance.name},e,t),rd.schedule("0,30 * * * *",async()=>{this.chatwootService.syncLostMessages({instanceName:this.instance.name},e,t)}).start()}}async updateMessagesReadedByTimestamp(e,t){if(t==null)return 0;let s=await this.prismaRepository.message.updateMany({where:{AND:[{key:{path:["remoteJid"],equals:e}},{key:{path:["fromMe"],equals:!1}},{messageTimestamp:{lte:t}},{OR:[{status:null},{status:de[3]}]}]},data:{status:de[4]}});return s?(s.count>0&&this.updateChatUnreadMessages(e),s.count):0}async updateChatUnreadMessages(e){let[t,s]=await Promise.all([this.prismaRepository.chat.findFirst({where:{remoteJid:e}}),this.prismaRepository.message.count({where:{AND:[{key:{path:["remoteJid"],equals:e}},{key:{path:["fromMe"],equals:!1}},{status:{equals:de[3]}}]}})]);return t&&t.unreadMessages!==s&&await this.prismaRepository.chat.update({where:{id:t.id},data:{unreadMessages:s}}),s}async addLabel(e,t,s){let o=ca();await this.prismaRepository.$executeRawUnsafe(`INSERT INTO "Chat" ("id", "instanceId", "remoteJid", "labels", "createdAt", "updatedAt")
       VALUES ($4, $2, $3, to_jsonb(ARRAY[$1]::text[]), NOW(), NOW()) ON CONFLICT ("instanceId", "remoteJid")
     DO
      UPDATE
          SET "labels" = (
          SELECT to_jsonb(array_agg(DISTINCT elem))
          FROM (
          SELECT jsonb_array_elements_text("Chat"."labels") AS elem
          UNION
          SELECT $1::text AS elem
          ) sub
          ),
          "updatedAt" = NOW();`,e,t,s,o)}async removeLabel(e,t,s){let o=ca();await this.prismaRepository.$executeRawUnsafe(`INSERT INTO "Chat" ("id", "instanceId", "remoteJid", "labels", "createdAt", "updatedAt")
       VALUES ($4, $2, $3, '[]'::jsonb, NOW(), NOW()) ON CONFLICT ("instanceId", "remoteJid")
     DO
      UPDATE
          SET "labels" = COALESCE (
          (
          SELECT jsonb_agg(elem)
          FROM jsonb_array_elements_text("Chat"."labels") AS elem
          WHERE elem <> $1
          ),
          '[]'::jsonb
          ),
          "updatedAt" = NOW();`,e,t,s,o)}async baileysOnWhatsapp(e){return await this.client.onWhatsApp(e)}async baileysProfilePictureUrl(e,t,s){return await this.client.profilePictureUrl(e,t,s)}async baileysAssertSessions(e,t){return await this.client.assertSessions(e,t)}async baileysCreateParticipantNodes(e,t,s){let o=await this.client.createParticipantNodes(e,t,s);return{...o,nodes:o.nodes.map(r=>({...r,content:r.content?.map(a=>({...a,content:a.content instanceof Uint8Array?Buffer.from(a.content).toString("base64"):a.content}))}))}}async baileysSendNode(e){return console.log("stanza",JSON.stringify(e)),await this.client.sendNode(e)}async baileysGetUSyncDevices(e,t,s){return await this.client.getUSyncDevices(e,t,s)}async baileysGenerateMessageTag(){return await this.client.generateMessageTag()}async baileysSignalRepositoryDecryptMessage(e,t,s){try{let o=Buffer.from(s,"base64"),n=await this.client.signalRepository.decryptMessage({jid:e,type:t,ciphertext:o});return n instanceof Uint8Array?Buffer.from(n).toString("base64"):n}catch(o){throw this.logger.error("Error decrypting message:"),this.logger.error(o),o}}async baileysGetAuthState(){return{me:this.client.authState.creds.me,account:this.client.authState.creds.account}}}});var ze,Ys=b(()=>{ge();ne();Gr();jr();ma();ze=class{constructor(i,e){this.prisma=i,this.monitor=e}set prisma(i){this.prismaRepository=i}get prisma(){return this.prismaRepository}set monitor(i){this.waMonitor=i}get monitor(){return this.waMonitor}init(i,e){if(!i.token&&i.integration===N.WHATSAPP_BUSINESS)throw new f("token is required");return i.integration===N.WHATSAPP_BUSINESS?new As(e.configService,e.eventEmitter,e.prismaRepository,e.cache,e.chatwootCache,e.baileysCache,e.providerFiles):i.integration===N.EVOLUTION?new Cs(e.configService,e.eventEmitter,e.prismaRepository,e.cache,e.chatwootCache):i.integration===N.WHATSAPP_BAILEYS?new Ks(e.configService,e.eventEmitter,e.prismaRepository,e.cache,e.chatwootCache,e.baileysCache,e.providerFiles):null}}});var Qs,ha=b(()=>{_();Ys();Qs=class extends ze{constructor(e,t){super(e,t);this.logger=new A("EvolutionController")}async receiveWebhook(e){let t=e.numberId;if(!t){this.logger.error("WebhookService -> receiveWebhookEvolution -> numberId not found");return}let s=await this.prismaRepository.instance.findFirst({where:{number:t}});if(!s){this.logger.error("WebhookService -> receiveWebhook -> instance not found");return}return await this.waMonitor.waInstances[s.name].connectToWhatsapp(e),{status:"success"}}}});import gd from"axios";var zs,fa=b(()=>{_();Ys();zs=class extends ze{constructor(e,t){super(e,t);this.logger=new A("MetaController")}async receiveWebhook(e){if(e.object==="whatsapp_business_account"){if(e.entry[0]?.changes[0]?.field==="message_template_status_update"){let t=await this.prismaRepository.template.findFirst({where:{templateId:`${e.entry[0].changes[0].value.message_template_id}`}});if(!t){console.log("template not found");return}let{webhookUrl:s}=t;await gd.post(s,e.entry[0].changes[0].value,{headers:{"Content-Type":"application/json"}});return}e.entry?.forEach(async t=>{let s=t.changes[0].value.metadata.phone_number_id;if(!s)return this.logger.error("WebhookService -> receiveWebhookMeta -> numberId not found"),{status:"success"};let o=await this.prismaRepository.instance.findFirst({where:{number:s}});return o?(await this.waMonitor.waInstances[o.name].connectToWhatsapp(e),{status:"success"}):(this.logger.error("WebhookService -> receiveWebhookMeta -> instance not found"),{status:"success"})})}return{status:"success"}}}});var Xs,ya=b(()=>{Xs=class{constructor(i){this.waMonitor=i}async onWhatsapp({instanceName:i},e){return this.waMonitor.waInstances[i].baileysOnWhatsapp(e?.jid)}async profilePictureUrl({instanceName:i},e){return this.waMonitor.waInstances[i].baileysProfilePictureUrl(e?.jid,e?.type,e?.timeoutMs)}async assertSessions({instanceName:i},e){return this.waMonitor.waInstances[i].baileysAssertSessions(e?.jids,e?.force)}async createParticipantNodes({instanceName:i},e){return this.waMonitor.waInstances[i].baileysCreateParticipantNodes(e?.jids,e?.message,e?.extraAttrs)}async getUSyncDevices({instanceName:i},e){return this.waMonitor.waInstances[i].baileysGetUSyncDevices(e?.jids,e?.useCache,e?.ignoreZeroDevices)}async generateMessageTag({instanceName:i}){return this.waMonitor.waInstances[i].baileysGenerateMessageTag()}async sendNode({instanceName:i},e){return this.waMonitor.waInstances[i].baileysSendNode(e?.stanza)}async signalRepositoryDecryptMessage({instanceName:i},e){return this.waMonitor.waInstances[i].baileysSignalRepositoryDecryptMessage(e?.jid,e?.type,e?.ciphertext)}async getAuthState({instanceName:i}){return this.waMonitor.waInstances[i].baileysGetAuthState()}}});function wa(p){return p.normalize("NFD").replace(/[\u0300-\u036f]/g,"").toLowerCase()}function ba(p,i){let e=i.split(" ").reduce((s,o)=>{let[n,...r]=o.split(":"),a=r.join(":");return s[n]||(s[n]=[]),s[n].push(a),s},{}),t=wa(p);return Object.entries(e).every(([s,o])=>o.some(n=>n.split(",").every(a=>{let c=wa(a);switch(s.toLowerCase()){case"contains":return t.includes(c);case"notcontains":return!t.includes(c);case"startswith":return t.startsWith(c);case"endswith":return t.endsWith(c);case"exact":return t===c;default:return!1}})))}var Sa=b(()=>{});var Ea,Ia=b(()=>{Sa();Ea=async(p,i,e)=>{let t=await p.findFirst({where:{enabled:!0,triggerType:"all",instanceId:e}});if(t)return t;let s=await p.findMany({where:{enabled:!0,triggerType:"advanced",instanceId:e}});for(let m of s)if(ba(i,m.triggerValue))return m;let o=await p.findFirst({where:{enabled:!0,triggerType:"keyword",triggerOperator:"equals",triggerValue:i,instanceId:e}});if(o)return o;let n=await p.findMany({where:{enabled:!0,triggerType:"keyword",triggerOperator:"regex",instanceId:e}}),r=null;for(let m of n)if(new RegExp(m.triggerValue).test(i)){r=m;break}if(r)return r;let a=await p.findMany({where:{enabled:!0,triggerType:"keyword",triggerOperator:"startsWith",instanceId:e}}),c=null;for(let m of a)if(i.startsWith(m.triggerValue)){c=m;break}if(c)return c;let l=await p.findMany({where:{enabled:!0,triggerType:"keyword",triggerOperator:"endsWith",instanceId:e}}),d=null;for(let m of l)if(i.endsWith(m.triggerValue)){d=m;break}if(d)return d;let u=await p.findMany({where:{enabled:!0,triggerType:"keyword",triggerOperator:"contains",instanceId:e}}),g=null;for(let m of u)if(i.includes(m.triggerValue)){g=m;break}return g||null}});var fe,pt=b(()=>{F();_();Ia();fe=class{constructor(i,e){this.logger=new A("ChatbotController");this.prisma=i,this.monitor=e}set prisma(i){this.prismaRepository=i}get prisma(){return this.prismaRepository}set monitor(i){this.waMonitor=i}get monitor(){return this.waMonitor}async emit({instance:i,remoteJid:e,msg:t,pushName:s,isIntegration:o=!1}){let n={instance:i,remoteJid:e,msg:t,pushName:s,isIntegration:o};await Se.emit(n),await ye.emit(n),await le.emit(n),await be.emit(n),await Ee.emit(n)}processDebounce(i,e,t,s,o){i[t]?(i[t].message+=`
${e}`,this.logger.log("message debounced: "+i[t].message),clearTimeout(i[t].timeoutId)):i[t]={message:e,timeoutId:null},i[t].timeoutId=setTimeout(()=>{let n=i[t].message;this.logger.log("Debounce complete. Processing message: "+n),delete i[t],o(n)},s*1e3)}checkIgnoreJids(i,e){if(i&&i.length>0){let t=!1,s=!1;return i.includes("@g.us")&&(t=!0),i.includes("@s.whatsapp.net")&&(s=!0),t&&e.endsWith("@g.us")?(this.logger.warn("Ignoring message from group: "+e),!0):s&&e.endsWith("@s.whatsapp.net")?(this.logger.warn("Ignoring message from contact: "+e),!0):i.includes(e)?(this.logger.warn("Ignoring message from jid: "+e),!0):!1}return!1}async getSession(i,e){let t=await this.prismaRepository.integrationSession.findFirst({where:{remoteJid:i,instanceId:e.instanceId},orderBy:{createdAt:"desc"}});if(t)if(t.status!=="closed"&&!t.botId){this.logger.warn("Session is already opened in another integration");return}else t.botId||(t=null);return t}async findBotTrigger(i,e,t,s){let o;if(s)o=await i.findFirst({where:{id:s.botId}});else if(o=await Ea(i,e,t.instanceId),!o)return;return o}}});import{isURL as md}from"class-validator";var Zs,Ma=b(()=>{ys();F();Ws();es();ne();Zs=class{constructor(i,e,t){this.chatwootService=i;this.configService=e;this.prismaRepository=t}async createChatwoot(i,e){if(!this.configService.get("CHATWOOT").ENABLED)throw new f("Chatwoot is disabled");if(e?.enabled){if(!md(e.url,{require_tld:!1}))throw new f("url is not valid");if(!e.accountId)throw new f("accountId is required");if(!e.token)throw new f("token is required");if(e.signMsg!==!0&&e.signMsg!==!1)throw new f("signMsg is required");e.signMsg===!1&&(e.signDelimiter=null)}(!e.nameInbox||e.nameInbox==="")&&(e.nameInbox=i.instanceName);let t=await this.chatwootService.create(i,e),s=this.configService.get("SERVER").URL;return{...t,webhook_url:`${s}/chatwoot/webhook/${encodeURIComponent(i.instanceName)}`}}async findChatwoot(i){if(!this.configService.get("CHATWOOT").ENABLED)throw new f("Chatwoot is disabled");let e=await this.chatwootService.find(i),t=this.configService.get("SERVER").URL;return Object.keys(e||{}).length===0?{enabled:!1,url:"",accountId:"",token:"",signMsg:!1,nameInbox:"",webhook_url:""}:{...e,webhook_url:`${t}/chatwoot/webhook/${encodeURIComponent(i.instanceName)}`}}async receiveWebhook(i,e){if(!this.configService.get("CHATWOOT").ENABLED)throw new f("Chatwoot is disabled");let t=new Be(new Ne(this.configService,_e.name).getEngine());return new _e(B,this.configService,this.prismaRepository,t).receiveWebhook(i,e)}}});var ei,Ta=b(()=>{Z();_();ne();nt();pt();ei=class extends fe{constructor(e,t,s){super(t,s);this.difyService=e;this.logger=new A("DifyController");this.integrationEnabled=C.get("DIFY").ENABLED;this.userMessageDebounce={};this.botRepository=this.prismaRepository.dify,this.settingsRepository=this.prismaRepository.difySetting,this.sessionRepository=this.prismaRepository.integrationSession}async createBot(e,t){if(!this.integrationEnabled)throw new f("Dify is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id);if(!t.expire||!t.keywordFinish||!t.delayMessage||!t.unknownMessage||!t.listeningFromMe||!t.stopBotFromMe||!t.keepOpen||!t.debounceTime||!t.ignoreJids||!t.splitMessages||!t.timePerChar){let r=await this.settingsRepository.findFirst({where:{instanceId:s}});(t.expire===void 0||t.expire===null)&&(t.expire=r.expire),(t.keywordFinish===void 0||t.keywordFinish===null)&&(t.keywordFinish=r.keywordFinish),(t.delayMessage===void 0||t.delayMessage===null)&&(t.delayMessage=r.delayMessage),(t.unknownMessage===void 0||t.unknownMessage===null)&&(t.unknownMessage=r.unknownMessage),(t.listeningFromMe===void 0||t.listeningFromMe===null)&&(t.listeningFromMe=r.listeningFromMe),(t.stopBotFromMe===void 0||t.stopBotFromMe===null)&&(t.stopBotFromMe=r.stopBotFromMe),(t.keepOpen===void 0||t.keepOpen===null)&&(t.keepOpen=r.keepOpen),(t.debounceTime===void 0||t.debounceTime===null)&&(t.debounceTime=r.debounceTime),(t.ignoreJids===void 0||t.ignoreJids===null)&&(t.ignoreJids=r.ignoreJids),(t.splitMessages===void 0||t.splitMessages===null)&&(t.splitMessages=r?.splitMessages??!1),(t.timePerChar===void 0||t.timePerChar===null)&&(t.timePerChar=r?.timePerChar??0),r||await this.settings(e,{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar})}if(await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",instanceId:s}})&&t.triggerType==="all")throw new Error('You already have a dify with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{instanceId:s,botType:t.botType,apiUrl:t.apiUrl,apiKey:t.apiKey}}))throw new Error("Dify already exists");if(t.triggerType==="keyword"){if(!t.triggerOperator||!t.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}if(t.triggerType==="advanced"){if(!t.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}try{return await this.botRepository.create({data:{enabled:t?.enabled,description:t.description,botType:t.botType,apiUrl:t.apiUrl,apiKey:t.apiKey,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,instanceId:s,triggerType:t.triggerType,triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}})}catch(r){throw this.logger.error(r),new Error("Error creating dify")}}async findBot(e){if(!this.integrationEnabled)throw new f("Dify is disabled");let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),s=await this.botRepository.findMany({where:{instanceId:t}});return s.length?s:null}async fetchBot(e,t){if(!this.integrationEnabled)throw new f("Dify is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),o=await this.botRepository.findFirst({where:{id:t}});if(!o)throw new Error("Dify not found");if(o.instanceId!==s)throw new Error("Dify not found");return o}async updateBot(e,t,s){if(!this.integrationEnabled)throw new f("Dify is disabled");let o=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),n=await this.botRepository.findFirst({where:{id:t}});if(!n)throw new Error("Dify not found");if(n.instanceId!==o)throw new Error("Dify not found");if(s.triggerType==="all"&&await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",id:{not:t},instanceId:o}}))throw new Error('You already have a dify with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{id:{not:t},instanceId:o,botType:s.botType,apiUrl:s.apiUrl,apiKey:s.apiKey}}))throw new Error("Dify already exists");if(s.triggerType==="keyword"){if(!s.triggerOperator||!s.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,id:{not:t},instanceId:o}}))throw new Error("Trigger already exists")}if(s.triggerType==="advanced"){if(!s.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:s.triggerValue,id:{not:t},instanceId:o}}))throw new Error("Trigger already exists")}try{return await this.botRepository.update({where:{id:t},data:{enabled:s?.enabled,description:s.description,botType:s.botType,apiUrl:s.apiUrl,apiKey:s.apiKey,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,debounceTime:s.debounceTime,instanceId:o,triggerType:s.triggerType,triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar}})}catch(a){throw this.logger.error(a),new Error("Error updating dify")}}async deleteBot(e,t){if(!this.integrationEnabled)throw new f("Dify is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),o=await this.botRepository.findFirst({where:{id:t}});if(!o)throw new Error("Dify not found");if(o.instanceId!==s)throw new Error("Dify not found");try{return await this.prismaRepository.integrationSession.deleteMany({where:{botId:t}}),await this.botRepository.delete({where:{id:t}}),{bot:{id:t}}}catch(n){throw this.logger.error(n),new Error("Error deleting dify bot")}}async settings(e,t){if(!this.integrationEnabled)throw new f("Dify is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),o=await this.settingsRepository.findFirst({where:{instanceId:s}});if(o){let r=await this.settingsRepository.update({where:{id:o.id},data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,difyIdFallback:t.difyIdFallback,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}});return{expire:r.expire,keywordFinish:r.keywordFinish,delayMessage:r.delayMessage,unknownMessage:r.unknownMessage,listeningFromMe:r.listeningFromMe,stopBotFromMe:r.stopBotFromMe,keepOpen:r.keepOpen,debounceTime:r.debounceTime,difyIdFallback:r.difyIdFallback,ignoreJids:r.ignoreJids,splitMessages:r.splitMessages,timePerChar:r.timePerChar}}let n=await this.settingsRepository.create({data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,difyIdFallback:t.difyIdFallback,ignoreJids:t.ignoreJids,instanceId:s,splitMessages:t.splitMessages,timePerChar:t.timePerChar}});return{expire:n.expire,keywordFinish:n.keywordFinish,delayMessage:n.delayMessage,unknownMessage:n.unknownMessage,listeningFromMe:n.listeningFromMe,stopBotFromMe:n.stopBotFromMe,keepOpen:n.keepOpen,debounceTime:n.debounceTime,difyIdFallback:n.difyIdFallback,ignoreJids:n.ignoreJids,splitMessages:n.splitMessages,timePerChar:n.timePerChar}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async fetchSettings(e){if(!this.integrationEnabled)throw new f("Dify is disabled");try{let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),s=await this.settingsRepository.findFirst({where:{instanceId:t},include:{Fallback:!0}});return s?{expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar,difyIdFallback:s.difyIdFallback,fallback:s.Fallback}:{expire:0,keywordFinish:"",delayMessage:0,unknownMessage:"",listeningFromMe:!1,stopBotFromMe:!1,keepOpen:!1,ignoreJids:[],splitMessages:!1,timePerChar:0,difyIdFallback:"",fallback:null}}catch(t){throw this.logger.error(t),new Error("Error fetching default settings")}}async changeStatus(e,t){if(!this.integrationEnabled)throw new f("Dify is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),o=await this.settingsRepository.findFirst({where:{instanceId:s}}),n=t.remoteJid,r=t.status;if(r==="delete")return await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{remoteJid:n,status:r}};if(r==="closed")return o?.keepOpen?await this.sessionRepository.updateMany({where:{remoteJid:n,botId:{not:null}},data:{status:"closed"}}):await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{...e,bot:{remoteJid:n,status:r}}};{let a=await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:n,botId:{not:null}},data:{status:r}});return{bot:{...e,bot:{remoteJid:n,status:r,session:a}}}}}catch(s){throw this.logger.error(s),new Error("Error changing status")}}async fetchSessions(e,t,s){if(!this.integrationEnabled)throw new f("Dify is disabled");try{let o=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),n=await this.botRepository.findFirst({where:{id:t}});if(n&&n.instanceId!==o)throw new Error("Dify not found");return await this.sessionRepository.findMany({where:{instanceId:o,remoteJid:s,botId:n?t:{not:null},type:"dify"}})}catch(o){throw this.logger.error(o),new Error("Error fetching sessions")}}async ignoreJid(e,t){if(!this.integrationEnabled)throw new f("Dify is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),o=await this.settingsRepository.findFirst({where:{instanceId:s}});if(!o)throw new Error("Settings not found");let n=o?.ignoreJids||[];if(t.action==="add"){if(n.includes(t.remoteJid))return{ignoreJids:n};n.push(t.remoteJid)}else n=n.filter(a=>a!==t.remoteJid);return{ignoreJids:(await this.settingsRepository.update({where:{id:o.id},data:{ignoreJids:n}})).ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async emit({instance:e,remoteJid:t,msg:s}){if(this.integrationEnabled)try{let o=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(this.checkIgnoreJids(o?.ignoreJids,t))return;let n=await this.getSession(t,e),r=Te(s),a=await this.findBotTrigger(this.botRepository,r,e,n);if(!a){let S=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(S?.difyIdFallback)a=await this.botRepository.findFirst({where:{id:S.difyIdFallback}});else return}let c=a?.expire,l=a?.keywordFinish,d=a?.delayMessage,u=a?.unknownMessage,g=a?.listeningFromMe,m=a?.stopBotFromMe,h=a?.keepOpen,y=a?.debounceTime,w=a?.ignoreJids,E=a?.splitMessages,I=a?.timePerChar;c==null&&(c=o.expire),l==null&&(l=o.keywordFinish),d==null&&(d=o.delayMessage),u==null&&(u=o.unknownMessage),g==null&&(g=o.listeningFromMe),m==null&&(m=o.stopBotFromMe),h==null&&(h=o.keepOpen),y==null&&(y=o.debounceTime),w==null&&(w=o.ignoreJids),E==null&&(E=o?.splitMessages??!1),I==null&&(I=o?.timePerChar??0);let M=s.key;if(m&&M.fromMe&&n){await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"paused"}});return}if(!g&&M.fromMe||n&&!n.awaitUser)return;y&&y>0?this.processDebounce(this.userMessageDebounce,r,t,y,async S=>{await this.difyService.processDify(this.waMonitor.waInstances[e.instanceName],t,a,n,{...o,expire:c,keywordFinish:l,delayMessage:d,unknownMessage:u,listeningFromMe:g,stopBotFromMe:m,keepOpen:h,debounceTime:y,ignoreJids:w,splitMessages:E,timePerChar:I},S,s?.pushName)}):await this.difyService.processDify(this.waMonitor.waInstances[e.instanceName],t,a,n,{...o,expire:c,keywordFinish:l,delayMessage:d,unknownMessage:u,listeningFromMe:g,stopBotFromMe:m,keepOpen:h,debounceTime:y,ignoreJids:w,splitMessages:E,timePerChar:I},r,s?.pushName);return}catch(o){this.logger.error(o);return}}}});var ti,Ca=b(()=>{_();nt();pt();ti=class extends fe{constructor(e,t,s){super(t,s);this.evolutionBotService=e;this.logger=new A("EvolutionBotController");this.userMessageDebounce={};this.botRepository=this.prismaRepository.evolutionBot,this.settingsRepository=this.prismaRepository.evolutionBotSetting,this.sessionRepository=this.prismaRepository.integrationSession}async createBot(e,t){let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id);if(!t.expire||!t.keywordFinish||!t.delayMessage||!t.unknownMessage||!t.listeningFromMe||!t.stopBotFromMe||!t.keepOpen||!t.debounceTime||!t.ignoreJids||!t.splitMessages||!t.timePerChar){let r=await this.settingsRepository.findFirst({where:{instanceId:s}});(t.expire===void 0||t.expire===null)&&(t.expire=r.expire),(t.keywordFinish===void 0||t.keywordFinish===null)&&(t.keywordFinish=r.keywordFinish),(t.delayMessage===void 0||t.delayMessage===null)&&(t.delayMessage=r.delayMessage),(t.unknownMessage===void 0||t.unknownMessage===null)&&(t.unknownMessage=r.unknownMessage),(t.listeningFromMe===void 0||t.listeningFromMe===null)&&(t.listeningFromMe=r.listeningFromMe),(t.stopBotFromMe===void 0||t.stopBotFromMe===null)&&(t.stopBotFromMe=r.stopBotFromMe),(t.keepOpen===void 0||t.keepOpen===null)&&(t.keepOpen=r.keepOpen),(t.debounceTime===void 0||t.debounceTime===null)&&(t.debounceTime=r.debounceTime),(t.ignoreJids===void 0||t.ignoreJids===null)&&(t.ignoreJids=r.ignoreJids),(t.splitMessages===void 0||t.splitMessages===null)&&(t.splitMessages=r?.splitMessages??!1),(t.timePerChar===void 0||t.timePerChar===null)&&(t.timePerChar=r?.timePerChar??0),r||await this.settings(e,{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar})}if(await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",instanceId:s}})&&t.triggerType==="all")throw new Error('You already have a dify with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{instanceId:s,apiUrl:t.apiUrl,apiKey:t.apiKey}}))throw new Error("Dify already exists");if(t.triggerType==="keyword"){if(!t.triggerOperator||!t.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}if(t.triggerType==="advanced"){if(!t.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}try{return await this.botRepository.create({data:{enabled:t?.enabled,description:t.description,apiUrl:t.apiUrl,apiKey:t.apiKey,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,instanceId:s,triggerType:t.triggerType,triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}})}catch(r){throw this.logger.error(r),new Error("Error creating bot")}}async findBot(e){let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),s=await this.botRepository.findMany({where:{instanceId:t}});return s.length?s:null}async fetchBot(e,t){let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),o=await this.botRepository.findFirst({where:{id:t}});if(!o)throw new Error("Bot not found");if(o.instanceId!==s)throw new Error("Bot not found");return o}async updateBot(e,t,s){let o=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),n=await this.botRepository.findFirst({where:{id:t}});if(!n)throw new Error("Bot not found");if(n.instanceId!==o)throw new Error("Bot not found");if(s.triggerType==="all"&&await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",id:{not:t},instanceId:o}}))throw new Error('You already have a bot with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{id:{not:t},instanceId:o,apiUrl:s.apiUrl,apiKey:s.apiKey}}))throw new Error("Bot already exists");if(s.triggerType==="keyword"){if(!s.triggerOperator||!s.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,id:{not:t},instanceId:o}}))throw new Error("Trigger already exists")}if(s.triggerType==="advanced"){if(!s.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:s.triggerValue,id:{not:t},instanceId:o}}))throw new Error("Trigger already exists")}try{return await this.botRepository.update({where:{id:t},data:{enabled:s?.enabled,description:s.description,apiUrl:s.apiUrl,apiKey:s.apiKey,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,debounceTime:s.debounceTime,instanceId:o,triggerType:s.triggerType,triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar}})}catch(a){throw this.logger.error(a),new Error("Error updating bot")}}async deleteBot(e,t){let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),o=await this.botRepository.findFirst({where:{id:t}});if(!o)throw new Error("Bot not found");if(o.instanceId!==s)throw new Error("Bot not found");try{return await this.prismaRepository.integrationSession.deleteMany({where:{botId:t}}),await this.botRepository.delete({where:{id:t}}),{bot:{id:t}}}catch(n){throw this.logger.error(n),new Error("Error deleting bot")}}async settings(e,t){try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),o=await this.settingsRepository.findFirst({where:{instanceId:s}});if(o){let r=await this.settingsRepository.update({where:{id:o.id},data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,botIdFallback:t.botIdFallback,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}});return{expire:r.expire,keywordFinish:r.keywordFinish,delayMessage:r.delayMessage,unknownMessage:r.unknownMessage,listeningFromMe:r.listeningFromMe,stopBotFromMe:r.stopBotFromMe,keepOpen:r.keepOpen,debounceTime:r.debounceTime,botIdFallback:r.botIdFallback,ignoreJids:r.ignoreJids,splitMessages:r.splitMessages,timePerChar:r.timePerChar}}let n=await this.settingsRepository.create({data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,botIdFallback:t.botIdFallback,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar,instanceId:s}});return{expire:n.expire,keywordFinish:n.keywordFinish,delayMessage:n.delayMessage,unknownMessage:n.unknownMessage,listeningFromMe:n.listeningFromMe,stopBotFromMe:n.stopBotFromMe,keepOpen:n.keepOpen,debounceTime:n.debounceTime,botIdFallback:n.botIdFallback,ignoreJids:n.ignoreJids,splitMessages:n.splitMessages,timePerChar:n.timePerChar}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async fetchSettings(e){try{let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),s=await this.settingsRepository.findFirst({where:{instanceId:t},include:{Fallback:!0}});return s?{expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar,botIdFallback:s.botIdFallback,fallback:s.Fallback}:{expire:0,keywordFinish:"",delayMessage:0,unknownMessage:"",listeningFromMe:!1,stopBotFromMe:!1,keepOpen:!1,ignoreJids:[],splitMessages:!1,timePerChar:0,botIdFallback:"",fallback:null}}catch(t){throw this.logger.error(t),new Error("Error fetching default settings")}}async changeStatus(e,t){try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),o=await this.settingsRepository.findFirst({where:{instanceId:s}}),n=t.remoteJid,r=t.status;if(r==="delete")return await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{remoteJid:n,status:r}};if(r==="closed")return o?.keepOpen?await this.sessionRepository.updateMany({where:{remoteJid:n,botId:{not:null}},data:{status:"closed"}}):await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{...e,bot:{remoteJid:n,status:r}}};{let a=await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:n,botId:{not:null}},data:{status:r}});return{bot:{...e,bot:{remoteJid:n,status:r,session:a}}}}}catch(s){throw this.logger.error(s),new Error("Error changing status")}}async fetchSessions(e,t,s){try{let o=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),n=await this.botRepository.findFirst({where:{id:t}});if(n&&n.instanceId!==o)throw new Error("Dify not found");return await this.sessionRepository.findMany({where:{instanceId:o,remoteJid:s,botId:n?t:{not:null},type:"evolution"}})}catch(o){throw this.logger.error(o),new Error("Error fetching sessions")}}async ignoreJid(e,t){try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),o=await this.settingsRepository.findFirst({where:{instanceId:s}});if(!o)throw new Error("Settings not found");let n=o?.ignoreJids||[];if(t.action==="add"){if(n.includes(t.remoteJid))return{ignoreJids:n};n.push(t.remoteJid)}else n=n.filter(a=>a!==t.remoteJid);return{ignoreJids:(await this.settingsRepository.update({where:{id:o.id},data:{ignoreJids:n}})).ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async emit({instance:e,remoteJid:t,msg:s}){try{let o=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(this.checkIgnoreJids(o?.ignoreJids,t))return;let n=await this.getSession(t,e),r=Te(s),a=await this.findBotTrigger(this.botRepository,r,e,n);if(!a){let S=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(S?.botIdFallback)a=await this.botRepository.findFirst({where:{id:S.botIdFallback}});else return}let c=a?.expire,l=a?.keywordFinish,d=a?.delayMessage,u=a?.unknownMessage,g=a?.listeningFromMe,m=a?.stopBotFromMe,h=a?.keepOpen,y=a?.debounceTime,w=a?.ignoreJids,E=a?.splitMessages,I=a?.timePerChar;c==null&&(c=o.expire),l==null&&(l=o.keywordFinish),d==null&&(d=o.delayMessage),u==null&&(u=o.unknownMessage),g==null&&(g=o.listeningFromMe),m==null&&(m=o.stopBotFromMe),h==null&&(h=o.keepOpen),y==null&&(y=o.debounceTime),w==null&&(w=o.ignoreJids),E==null&&(E=o?.splitMessages??!1),I==null&&(I=o?.timePerChar??0);let M=s.key;if(m&&M.fromMe&&n){await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"paused"}});return}if(!g&&M.fromMe||n&&!n.awaitUser)return;y&&y>0?this.processDebounce(this.userMessageDebounce,r,t,y,async S=>{await this.evolutionBotService.processBot(this.waMonitor.waInstances[e.instanceName],t,a,n,{...o,expire:c,keywordFinish:l,delayMessage:d,unknownMessage:u,listeningFromMe:g,stopBotFromMe:m,keepOpen:h,debounceTime:y,ignoreJids:w,splitMessages:E,timePerChar:I},S,s?.pushName)}):await this.evolutionBotService.processBot(this.waMonitor.waInstances[e.instanceName],t,a,n,{...o,expire:c,keywordFinish:l,delayMessage:d,unknownMessage:u,listeningFromMe:g,stopBotFromMe:m,keepOpen:h,debounceTime:y,ignoreJids:w,splitMessages:E,timePerChar:I},r,s?.pushName);return}catch(o){this.logger.error(o);return}}}});import hd from"axios";var si,va=b(()=>{ge();_();je();si=class{constructor(i,e,t){this.waMonitor=i;this.configService=e;this.prismaRepository=t;this.logger=new A("EvolutionBotService")}async createNewSession(i,e){try{return{session:await this.prismaRepository.integrationSession.create({data:{remoteJid:e.remoteJid,pushName:e.pushName,sessionId:e.remoteJid,status:"opened",awaitUser:!1,botId:e.botId,instanceId:i.instanceId,type:"evolution"}})}}catch(t){this.logger.error(t);return}}isImageMessage(i){return i.includes("imageMessage")}async sendMessageToBot(i,e,t,s,o,n){let r={inputs:{sessionId:e.id,remoteJid:s,pushName:o,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY},query:n,conversation_id:e.sessionId===s?void 0:e.sessionId,user:s};if(this.isImageMessage(n)){let d=n.split("|");r.files=[{type:"image",url:d[1].split("?")[0]}],r.query=d[2]||n}i.integration===N.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(s),await i.client.sendPresenceUpdate("composing",s));let a={"Content-Type":"application/json"};t.apiKey&&(a={...a,Authorization:`Bearer ${t.apiKey}`});let c=await hd.post(t.apiUrl,r,{headers:a});return i.integration===N.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",s),c?.data?.message}async sendMessageWhatsApp(i,e,t,s,o){let n=/(!?)\[(.*?)\]\((.*?)\)/g,r="",a=0,c,l=h=>{let y=h.split(".").pop()?.toLowerCase(),w=["jpg","jpeg","png","gif","bmp","webp"],E=["mp3","wav","aac","ogg"],I=["mp4","avi","mkv","mov"],M=["pdf","doc","docx","xls","xlsx","ppt","pptx","txt"];return w.includes(y||"")?"image":E.includes(y||"")?"audio":I.includes(y||"")?"video":M.includes(y||"")?"document":null};for(;(c=n.exec(o))!==null;){let[h,y,w,E]=c,I=l(E),M=o.slice(a,c.index);if(M&&(r+=M),I){let S=s.splitMessages??!1,v=s.timePerChar??0,O=1e3,k=2e4;if(r.trim()){if(S){let D=r.trim().split(`

`);for(let L=0;L<D.length;L++){let $=D[L],K=Math.min(Math.max($.length*v,O),k);i.integration===N.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e)),await new Promise(Q=>{setTimeout(async()=>{await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:$},!1),Q()},K)}),i.integration===N.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e)}}else await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:r.trim()},!1);r=""}I==="audio"?await i.audioWhatsapp({number:e.split("@")[0],delay:s?.delayMessage||1e3,audio:E,caption:w}):await i.mediaMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,mediatype:I,media:E,caption:w},null,!1)}else r+=`[${w}](${E})`;a=n.lastIndex}if(a<o.length){let h=o.slice(a);h.trim()&&(r+=h)}let d=s.splitMessages??!1,u=s.timePerChar??0,g=1e3,m=2e4;if(r.trim()){if(d){let h=r.trim().split(`

`);for(let y=0;y<h.length;y++){let w=h[y],E=Math.min(Math.max(w.length*u,g),m);i.integration===N.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e)),await new Promise(I=>{setTimeout(async()=>{await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:w},!1),I()},E)}),i.integration===N.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e)}}else await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:r.trim()},!1);r=""}V("/message/sendText"),await this.prismaRepository.integrationSession.update({where:{id:t.id},data:{status:"opened",awaitUser:!0}})}async initNewSession(i,e,t,s,o,n,r){let a=await this.createNewSession(i,{remoteJid:e,pushName:r,botId:t.id});a.session&&(o=a.session);let c=await this.sendMessageToBot(i,o,t,e,r,n);c&&await this.sendMessageWhatsApp(i,e,o,s,c)}async processBot(i,e,t,s,o,n,r){if(s&&s.status!=="opened")return;if(s&&o.expire&&o.expire>0){let c=Date.now(),l=new Date(s.updatedAt).getTime(),d=c-l;if(Math.floor(d/1e3/60)>o.expire){o.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:t.id,remoteJid:e}}),await this.initNewSession(i,e,t,o,s,n,r);return}}if(!s){await this.initNewSession(i,e,t,o,s,n,r);return}if(await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"opened",awaitUser:!1}}),!n){o.unknownMessage&&(this.waMonitor.waInstances[i.instanceName].textMessage({number:e.split("@")[0],delay:o.delayMessage||1e3,text:o.unknownMessage},!1),V("/message/sendText"));return}if(o.keywordFinish&&n.toLowerCase()===o.keywordFinish.toLowerCase()){o.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:t.id,remoteJid:e}});return}let a=await this.sendMessageToBot(i,s,t,e,r,n);a&&await this.sendMessageWhatsApp(i,e,s,o,a)}}});var ii,Aa=b(()=>{_();nt();pt();ii=class extends fe{constructor(e,t,s){super(t,s);this.flowiseService=e;this.logger=new A("FlowiseController");this.userMessageDebounce={};this.botRepository=this.prismaRepository.flowise,this.settingsRepository=this.prismaRepository.flowiseSetting,this.sessionRepository=this.prismaRepository.integrationSession}async createBot(e,t){let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id);if(!t.expire||!t.keywordFinish||!t.delayMessage||!t.unknownMessage||!t.listeningFromMe||!t.stopBotFromMe||!t.keepOpen||!t.debounceTime||!t.ignoreJids||!t.splitMessages||!t.timePerChar){let r=await this.settingsRepository.findFirst({where:{instanceId:s}});(t.expire===void 0||t.expire===null)&&(t.expire=r.expire),(t.keywordFinish===void 0||t.keywordFinish===null)&&(t.keywordFinish=r.keywordFinish),(t.delayMessage===void 0||t.delayMessage===null)&&(t.delayMessage=r.delayMessage),(t.unknownMessage===void 0||t.unknownMessage===null)&&(t.unknownMessage=r.unknownMessage),(t.listeningFromMe===void 0||t.listeningFromMe===null)&&(t.listeningFromMe=r.listeningFromMe),(t.stopBotFromMe===void 0||t.stopBotFromMe===null)&&(t.stopBotFromMe=r.stopBotFromMe),(t.keepOpen===void 0||t.keepOpen===null)&&(t.keepOpen=r.keepOpen),(t.debounceTime===void 0||t.debounceTime===null)&&(t.debounceTime=r.debounceTime),(t.ignoreJids===void 0||t.ignoreJids===null)&&(t.ignoreJids=r.ignoreJids),(t.splitMessages===void 0||t.splitMessages===null)&&(t.splitMessages=r?.splitMessages??!1),(t.timePerChar===void 0||t.timePerChar===null)&&(t.timePerChar=r?.timePerChar??0),r||await this.settings(e,{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar})}if(await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",instanceId:s}})&&t.triggerType==="all")throw new Error('You already have a Flowise with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{instanceId:s,apiUrl:t.apiUrl,apiKey:t.apiKey}}))throw new Error("Flowise already exists");if(t.triggerType==="keyword"){if(!t.triggerOperator||!t.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}if(t.triggerType==="advanced"){if(!t.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}try{return await this.botRepository.create({data:{enabled:t?.enabled,description:t.description,apiUrl:t.apiUrl,apiKey:t.apiKey,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,instanceId:s,triggerType:t.triggerType,triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}})}catch(r){throw this.logger.error(r),new Error("Error creating bot")}}async findBot(e){let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),s=await this.botRepository.findMany({where:{instanceId:t}});return s.length?s:null}async fetchBot(e,t){let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),o=await this.botRepository.findFirst({where:{id:t}});if(!o)throw new Error("Bot not found");if(o.instanceId!==s)throw new Error("Bot not found");return o}async updateBot(e,t,s){let o=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),n=await this.botRepository.findFirst({where:{id:t}});if(!n)throw new Error("Bot not found");if(n.instanceId!==o)throw new Error("Bot not found");if(s.triggerType==="all"&&await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",id:{not:t},instanceId:o}}))throw new Error('You already have a bot with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{id:{not:t},instanceId:o,apiUrl:s.apiUrl,apiKey:s.apiKey}}))throw new Error("Bot already exists");if(s.triggerType==="keyword"){if(!s.triggerOperator||!s.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,id:{not:t},instanceId:o}}))throw new Error("Trigger already exists")}if(s.triggerType==="advanced"){if(!s.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:s.triggerValue,id:{not:t},instanceId:o}}))throw new Error("Trigger already exists")}try{return await this.botRepository.update({where:{id:t},data:{enabled:s?.enabled,description:s.description,apiUrl:s.apiUrl,apiKey:s.apiKey,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,debounceTime:s.debounceTime,instanceId:o,triggerType:s.triggerType,triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar}})}catch(a){throw this.logger.error(a),new Error("Error updating bot")}}async deleteBot(e,t){let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),o=await this.botRepository.findFirst({where:{id:t}});if(!o)throw new Error("Bot not found");if(o.instanceId!==s)throw new Error("Bot not found");try{return await this.prismaRepository.integrationSession.deleteMany({where:{botId:t}}),await this.botRepository.delete({where:{id:t}}),{bot:{id:t}}}catch(n){throw this.logger.error(n),new Error("Error deleting bot")}}async settings(e,t){try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),o=await this.settingsRepository.findFirst({where:{instanceId:s}});if(o){let r=await this.settingsRepository.update({where:{id:o.id},data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,flowiseIdFallback:t.flowiseIdFallback,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}});return{expire:r.expire,keywordFinish:r.keywordFinish,delayMessage:r.delayMessage,unknownMessage:r.unknownMessage,listeningFromMe:r.listeningFromMe,stopBotFromMe:r.stopBotFromMe,keepOpen:r.keepOpen,debounceTime:r.debounceTime,flowiseIdFallback:r.flowiseIdFallback,ignoreJids:r.ignoreJids,splitMessages:r.splitMessages,timePerChar:r.timePerChar}}let n=await this.settingsRepository.create({data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,flowiseIdFallback:t.flowiseIdFallback,ignoreJids:t.ignoreJids,instanceId:s,splitMessages:t.splitMessages,timePerChar:t.timePerChar}});return{expire:n.expire,keywordFinish:n.keywordFinish,delayMessage:n.delayMessage,unknownMessage:n.unknownMessage,listeningFromMe:n.listeningFromMe,stopBotFromMe:n.stopBotFromMe,keepOpen:n.keepOpen,debounceTime:n.debounceTime,flowiseIdFallback:n.flowiseIdFallback,ignoreJids:n.ignoreJids,splitMessages:n.splitMessages,timePerChar:n.timePerChar}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async fetchSettings(e){try{let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),s=await this.settingsRepository.findFirst({where:{instanceId:t},include:{Fallback:!0}});return s?{expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar,flowiseIdFallback:s.flowiseIdFallback,fallback:s.Fallback}:{expire:0,keywordFinish:"",delayMessage:0,unknownMessage:"",listeningFromMe:!1,stopBotFromMe:!1,keepOpen:!1,ignoreJids:[],splitMessages:!1,timePerChar:0,flowiseIdFallback:"",fallback:null}}catch(t){throw this.logger.error(t),new Error("Error fetching default settings")}}async changeStatus(e,t){try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),o=await this.settingsRepository.findFirst({where:{instanceId:s}}),n=t.remoteJid,r=t.status;if(r==="delete")return await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{remoteJid:n,status:r}};if(r==="closed")return o?.keepOpen?await this.sessionRepository.updateMany({where:{remoteJid:n,botId:{not:null}},data:{status:"closed"}}):await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{bot:{...e,bot:{remoteJid:n,status:r}}};{let a=await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:n,botId:{not:null}},data:{status:r}});return{bot:{...e,bot:{remoteJid:n,status:r,session:a}}}}}catch(s){throw this.logger.error(s),new Error("Error changing status")}}async fetchSessions(e,t,s){try{let o=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),n=await this.botRepository.findFirst({where:{id:t}});if(n&&n.instanceId!==o)throw new Error("Dify not found");return await this.sessionRepository.findMany({where:{instanceId:o,remoteJid:s,botId:n?t:{not:null},type:"flowise"}})}catch(o){throw this.logger.error(o),new Error("Error fetching sessions")}}async ignoreJid(e,t){try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),o=await this.settingsRepository.findFirst({where:{instanceId:s}});if(!o)throw new Error("Settings not found");let n=o?.ignoreJids||[];if(t.action==="add"){if(n.includes(t.remoteJid))return{ignoreJids:n};n.push(t.remoteJid)}else n=n.filter(a=>a!==t.remoteJid);return{ignoreJids:(await this.settingsRepository.update({where:{id:o.id},data:{ignoreJids:n}})).ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async emit({instance:e,remoteJid:t,msg:s}){try{let o=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(this.checkIgnoreJids(o?.ignoreJids,t))return;let n=await this.getSession(t,e),r=Te(s),a=await this.findBotTrigger(this.botRepository,r,e,n);if(!a){let S=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(S?.flowiseIdFallback)a=await this.botRepository.findFirst({where:{id:S.flowiseIdFallback}});else return}let c=a?.expire,l=a?.keywordFinish,d=a?.delayMessage,u=a?.unknownMessage,g=a?.listeningFromMe,m=a?.stopBotFromMe,h=a?.keepOpen,y=a?.debounceTime,w=a?.ignoreJids,E=a?.splitMessages,I=a?.timePerChar;c==null&&(c=o.expire),l==null&&(l=o.keywordFinish),d==null&&(d=o.delayMessage),u==null&&(u=o.unknownMessage),g==null&&(g=o.listeningFromMe),m==null&&(m=o.stopBotFromMe),h==null&&(h=o.keepOpen),y==null&&(y=o.debounceTime),w==null&&(w=o.ignoreJids),E==null&&(E=o?.splitMessages??!1),I==null&&(I=o?.timePerChar??0);let M=s.key;if(m&&M.fromMe&&n){await this.prismaRepository.integrationSession.update({where:{id:n.id},data:{status:"paused"}});return}if(!g&&M.fromMe||n&&!n.awaitUser)return;y&&y>0?this.processDebounce(this.userMessageDebounce,r,t,y,async S=>{await this.flowiseService.processBot(this.waMonitor.waInstances[e.instanceName],t,a,n,{...o,expire:c,keywordFinish:l,delayMessage:d,unknownMessage:u,listeningFromMe:g,stopBotFromMe:m,keepOpen:h,debounceTime:y,ignoreJids:w,splitMessages:E,timePerChar:I},S,s?.pushName)}):await this.flowiseService.processBot(this.waMonitor.waInstances[e.instanceName],t,a,n,{...o,expire:c,keywordFinish:l,delayMessage:d,unknownMessage:u,listeningFromMe:g,stopBotFromMe:m,keepOpen:h,debounceTime:y,ignoreJids:w,splitMessages:E,timePerChar:I},r,s?.pushName);return}catch(o){this.logger.error(o);return}}}});import fd from"axios";var ni,Ra=b(()=>{ge();_();je();ni=class{constructor(i,e,t){this.waMonitor=i;this.configService=e;this.prismaRepository=t;this.logger=new A("FlowiseService")}async createNewSession(i,e){try{return{session:await this.prismaRepository.integrationSession.create({data:{remoteJid:e.remoteJid,pushName:e.pushName,sessionId:e.remoteJid,status:"opened",awaitUser:!1,botId:e.botId,instanceId:i.instanceId,type:"flowise"}})}}catch(t){this.logger.error(t);return}}isImageMessage(i){return i.includes("imageMessage")}async sendMessageToBot(i,e,t,s,o){let n={question:o,overrideConfig:{sessionId:t,vars:{remoteJid:t,pushName:s,instanceName:i.instanceName,serverUrl:this.configService.get("SERVER").URL,apiKey:this.configService.get("AUTHENTICATION").API_KEY.KEY}}};if(this.isImageMessage(o)){let d=o.split("|");n.uploads=[{data:d[1].split("?")[0],type:"url",name:"Flowise.png",mime:"image/png"}],n.question=d[2]||o}i.integration===N.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(t),await i.client.sendPresenceUpdate("composing",t));let r={"Content-Type":"application/json"};e.apiKey&&(r={...r,Authorization:`Bearer ${e.apiKey}`});let a=e.apiUrl;if(!a)return null;let c=await fd.post(a,n,{headers:r});return i.integration===N.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",t),c?.data?.text}async sendMessageWhatsApp(i,e,t,s,o){let n=/(!?)\[(.*?)\]\((.*?)\)/g,r="",a=0,c,l=h=>{let y=h.split(".").pop()?.toLowerCase(),w=["jpg","jpeg","png","gif","bmp","webp"],E=["mp3","wav","aac","ogg"],I=["mp4","avi","mkv","mov"],M=["pdf","doc","docx","xls","xlsx","ppt","pptx","txt"];return w.includes(y||"")?"image":E.includes(y||"")?"audio":I.includes(y||"")?"video":M.includes(y||"")?"document":null};for(;(c=n.exec(o))!==null;){let[h,y,w,E]=c,I=l(E),M=o.slice(a,c.index);if(M&&(r+=M),I){let S=s.splitMessages??!1,v=s.timePerChar??0,O=1e3,k=2e4;if(r.trim()){if(S){let D=r.trim().split(`

`);for(let L=0;L<D.length;L++){let $=D[L],K=Math.min(Math.max($.length*v,O),k);i.integration===N.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e)),await new Promise(Q=>{setTimeout(async()=>{await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:$},!1),Q()},K)}),i.integration===N.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e)}}else await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:r.trim()},!1);r=""}I==="audio"?await i.audioWhatsapp({number:e.split("@")[0],delay:s?.delayMessage||1e3,audio:E,caption:w}):await i.mediaMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,mediatype:I,media:E,caption:w},null,!1)}else r+=`[${w}](${E})`;a=n.lastIndex}if(a<o.length){let h=o.slice(a);h.trim()&&(r+=h)}let d=s.splitMessages??!1,u=s.timePerChar??0,g=1e3,m=2e4;if(r.trim()){if(d){let h=r.trim().split(`

`);for(let y=0;y<h.length;y++){let w=h[y],E=Math.min(Math.max(w.length*u,g),m);i.integration===N.WHATSAPP_BAILEYS&&(await i.client.presenceSubscribe(e),await i.client.sendPresenceUpdate("composing",e)),await new Promise(I=>{setTimeout(async()=>{await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:w},!1),I()},E)}),i.integration===N.WHATSAPP_BAILEYS&&await i.client.sendPresenceUpdate("paused",e)}}else await i.textMessage({number:e.split("@")[0],delay:s?.delayMessage||1e3,text:r.trim()},!1);r=""}V("/message/sendText"),await this.prismaRepository.integrationSession.update({where:{id:t.id},data:{status:"opened",awaitUser:!0}})}async initNewSession(i,e,t,s,o,n,r){let a=await this.createNewSession(i,{remoteJid:e,pushName:r,botId:t.id});a.session&&(o=a.session);let c=await this.sendMessageToBot(i,t,e,r,n);await this.sendMessageWhatsApp(i,e,o,s,c)}async processBot(i,e,t,s,o,n,r){if(s&&s.status!=="opened")return;if(s&&o.expire&&o.expire>0){let c=Date.now(),l=new Date(s.updatedAt).getTime(),d=c-l;if(Math.floor(d/1e3/60)>o.expire){o.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:t.id,remoteJid:e}}),await this.initNewSession(i,e,t,o,s,n,r);return}}if(!s){await this.initNewSession(i,e,t,o,s,n,r);return}if(await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"opened",awaitUser:!1}}),!n){o.unknownMessage&&(this.waMonitor.waInstances[i.instanceName].textMessage({number:e.split("@")[0],delay:o.delayMessage||1e3,text:o.unknownMessage},!1),V("/message/sendText"));return}if(o.keywordFinish&&n.toLowerCase()===o.keywordFinish.toLowerCase()){o.keepOpen?await this.prismaRepository.integrationSession.update({where:{id:s.id},data:{status:"closed"}}):await this.prismaRepository.integrationSession.deleteMany({where:{botId:t.id,remoteJid:e}});return}let a=await this.sendMessageToBot(i,t,e,r,n);await this.sendMessageWhatsApp(i,e,s,o,a)}}});import yd from"openai";var oi,Pa=b(()=>{Z();_();ne();nt();pt();oi=class extends fe{constructor(e,t,s){super(t,s);this.openaiService=e;this.logger=new A("OpenaiController");this.integrationEnabled=C.get("OPENAI").ENABLED;this.userMessageDebounce={};this.botRepository=this.prismaRepository.openaiBot,this.settingsRepository=this.prismaRepository.openaiSetting,this.sessionRepository=this.prismaRepository.integrationSession,this.credsRepository=this.prismaRepository.openaiCreds}async createOpenaiCreds(e,t){if(!this.integrationEnabled)throw new f("Openai is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id);if(!t.apiKey)throw new Error("API Key is required");if(!t.name)throw new Error("Name is required");try{return await this.credsRepository.create({data:{name:t.name,apiKey:t.apiKey,instanceId:s}})}catch(o){throw this.logger.error(o),new Error("Error creating openai creds")}}async findOpenaiCreds(e){if(!this.integrationEnabled)throw new f("Openai is disabled");let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id);return await this.credsRepository.findMany({where:{instanceId:t},include:{OpenaiAssistant:!0}})}async deleteCreds(e,t){if(!this.integrationEnabled)throw new f("Openai is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),o=await this.credsRepository.findFirst({where:{id:t}});if(!o)throw new Error("Openai Creds not found");if(o.instanceId!==s)throw new Error("Openai Creds not found");try{return await this.credsRepository.delete({where:{id:t}}),{openaiCreds:{id:t}}}catch(n){throw this.logger.error(n),new Error("Error deleting openai creds")}}async getModels(e){if(!this.integrationEnabled)throw new f("Openai is disabled");let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id);if(!t)throw new Error("Instance not found");let s=await this.settingsRepository.findFirst({where:{instanceId:t},include:{OpenaiCreds:!0}});if(!s)throw new Error("Settings not found");let{apiKey:o}=s.OpenaiCreds;try{return this.client=new yd({apiKey:o}),(await this.client.models.list())?.body?.data}catch(n){throw this.logger.error(n),new Error("Error fetching models")}}async createBot(e,t){if(!this.integrationEnabled)throw new f("Openai is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id);if(!t.openaiCredsId||!t.expire||!t.keywordFinish||!t.delayMessage||!t.unknownMessage||!t.listeningFromMe||!t.stopBotFromMe||!t.keepOpen||!t.debounceTime||!t.ignoreJids||!t.splitMessages||!t.timePerChar){let a=await this.settingsRepository.findFirst({where:{instanceId:s}});if((t.expire===void 0||t.expire===null)&&(t.expire=a.expire),(t.keywordFinish===void 0||t.keywordFinish===null)&&(t.keywordFinish=a.keywordFinish),(t.delayMessage===void 0||t.delayMessage===null)&&(t.delayMessage=a.delayMessage),(t.unknownMessage===void 0||t.unknownMessage===null)&&(t.unknownMessage=a.unknownMessage),(t.listeningFromMe===void 0||t.listeningFromMe===null)&&(t.listeningFromMe=a.listeningFromMe),(t.stopBotFromMe===void 0||t.stopBotFromMe===null)&&(t.stopBotFromMe=a.stopBotFromMe),(t.keepOpen===void 0||t.keepOpen===null)&&(t.keepOpen=a.keepOpen),(t.debounceTime===void 0||t.debounceTime===null)&&(t.debounceTime=a.debounceTime),(t.ignoreJids===void 0||t.ignoreJids===null)&&(t.ignoreJids=a.ignoreJids),(t.splitMessages===void 0||t.splitMessages===null)&&(t.splitMessages=a?.splitMessages??!1),(t.timePerChar===void 0||t.timePerChar===null)&&(t.timePerChar=a?.timePerChar??0),!t.openaiCredsId)throw new Error("Openai Creds Id is required");a||await this.settings(e,{openaiCredsId:t.openaiCredsId,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar})}if(await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",instanceId:s}})&&t.triggerType==="all")throw new Error('You already have a openai with an "All" trigger, you cannot have more bots while it is active');let n={instanceId:s};if(t.botType==="assistant"){if(!t.assistantId)throw new Error("Assistant ID is required");n={...n,assistantId:t.assistantId,botType:t.botType}}else if(t.botType==="chatCompletion"){if(!t.model)throw new Error("Model is required");if(!t.maxTokens)throw new Error("Max tokens is required");n={...n,model:t.model,maxTokens:t.maxTokens,botType:t.botType}}else throw new Error("Bot type is required");if(await this.botRepository.findFirst({where:n}))throw new Error("Openai Bot already exists");if(t.triggerType==="keyword"){if(!t.triggerOperator||!t.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}if(t.triggerType==="advanced"){if(!t.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}try{return await this.botRepository.create({data:{enabled:t?.enabled,description:t.description,openaiCredsId:t.openaiCredsId,botType:t.botType,assistantId:t.assistantId,functionUrl:t.functionUrl,model:t.model,systemMessages:t.systemMessages,assistantMessages:t.assistantMessages,userMessages:t.userMessages,maxTokens:t.maxTokens,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,instanceId:s,triggerType:t.triggerType,triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}})}catch(a){throw this.logger.error(a),new Error("Error creating openai bot")}}async findBot(e){if(!this.integrationEnabled)throw new f("Openai is disabled");let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),s=await this.botRepository.findMany({where:{instanceId:t}});return s.length?s:null}async fetchBot(e,t){if(!this.integrationEnabled)throw new f("Openai is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),o=await this.botRepository.findFirst({where:{id:t}});if(!o)throw new Error("Openai Bot not found");if(o.instanceId!==s)throw new Error("Openai Bot not found");return o}async updateBot(e,t,s){if(!this.integrationEnabled)throw new f("Openai is disabled");let o=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(c=>c.id),n=await this.botRepository.findFirst({where:{id:t}});if(!n)throw new Error("Openai Bot not found");if(n.instanceId!==o)throw new Error("Openai Bot not found");if(s.triggerType==="all"&&await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",id:{not:t},instanceId:o}}))throw new Error('You already have a openai bot with an "All" trigger, you cannot have more bots while it is active');let r={id:{not:t},instanceId:o};if(s.botType==="assistant"){if(!s.assistantId)throw new Error("Assistant ID is required");r={...r,assistantId:s.assistantId}}else if(s.botType==="chatCompletion"){if(!s.model)throw new Error("Model is required");if(!s.maxTokens)throw new Error("Max tokens is required");r={...r,model:s.model,maxTokens:s.maxTokens}}else throw new Error("Bot type is required");if(await this.botRepository.findFirst({where:r}))throw new Error("Openai Bot already exists");if(s.triggerType==="keyword"){if(!s.triggerOperator||!s.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,id:{not:t},instanceId:o}}))throw new Error("Trigger already exists")}if(s.triggerType==="advanced"){if(!s.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:s.triggerValue,id:{not:t},instanceId:o}}))throw new Error("Trigger already exists")}try{return await this.botRepository.update({where:{id:t},data:{enabled:s?.enabled,description:s.description,openaiCredsId:s.openaiCredsId,botType:s.botType,assistantId:s.assistantId,functionUrl:s.functionUrl,model:s.model,systemMessages:s.systemMessages,assistantMessages:s.assistantMessages,userMessages:s.userMessages,maxTokens:s.maxTokens,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,debounceTime:s.debounceTime,instanceId:o,triggerType:s.triggerType,triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar}})}catch(c){throw this.logger.error(c),new Error("Error updating openai bot")}}async deleteBot(e,t){if(!this.integrationEnabled)throw new f("Openai is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),o=await this.botRepository.findFirst({where:{id:t}});if(!o)throw new Error("Openai bot not found");if(o.instanceId!==s)throw new Error("Openai bot not found");try{return await this.sessionRepository.deleteMany({where:{botId:t}}),await this.botRepository.delete({where:{id:t}}),{bot:{id:t}}}catch(n){throw this.logger.error(n),new Error("Error deleting openai bot")}}async settings(e,t){if(!this.integrationEnabled)throw new f("Openai is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),o=await this.settingsRepository.findFirst({where:{instanceId:s}});if(o){let r=await this.settingsRepository.update({where:{id:o.id},data:{openaiCredsId:t.openaiCredsId,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,speechToText:t.speechToText,openaiIdFallback:t.openaiIdFallback,ignoreJids:t.ignoreJids,splitMessages:t.splitMessages,timePerChar:t.timePerChar}});return{openaiCredsId:r.openaiCredsId,expire:r.expire,keywordFinish:r.keywordFinish,delayMessage:r.delayMessage,unknownMessage:r.unknownMessage,listeningFromMe:r.listeningFromMe,stopBotFromMe:r.stopBotFromMe,keepOpen:r.keepOpen,debounceTime:r.debounceTime,speechToText:r.speechToText,openaiIdFallback:r.openaiIdFallback,ignoreJids:r.ignoreJids,splitMessages:r.splitMessages,timePerChar:r.timePerChar}}let n=await this.settingsRepository.create({data:{openaiCredsId:t.openaiCredsId,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,openaiIdFallback:t.openaiIdFallback,ignoreJids:t.ignoreJids,speechToText:t.speechToText,instanceId:s,splitMessages:t.splitMessages,timePerChar:t.timePerChar}});return{openaiCredsId:n.openaiCredsId,expire:n.expire,keywordFinish:n.keywordFinish,delayMessage:n.delayMessage,unknownMessage:n.unknownMessage,listeningFromMe:n.listeningFromMe,stopBotFromMe:n.stopBotFromMe,keepOpen:n.keepOpen,debounceTime:n.debounceTime,openaiIdFallback:n.openaiIdFallback,ignoreJids:n.ignoreJids,speechToText:n.speechToText,splitMessages:n.splitMessages,timePerChar:n.timePerChar}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async fetchSettings(e){if(!this.integrationEnabled)throw new f("Openai is disabled");try{let t=(await this.prismaRepository.instance.findFirst({select:{id:!0},where:{name:e.instanceName}}))?.id,s=await this.settingsRepository.findFirst({where:{instanceId:t},include:{Fallback:!0}});return s?{openaiCredsId:s.openaiCredsId,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,ignoreJids:s.ignoreJids,splitMessages:s.splitMessages,timePerChar:s.timePerChar,openaiIdFallback:s.openaiIdFallback,speechToText:s.speechToText,fallback:s.Fallback}:{openaiCredsId:null,expire:0,keywordFinish:"",delayMessage:0,unknownMessage:"",listeningFromMe:!1,stopBotFromMe:!1,keepOpen:!1,ignoreJids:[],splitMessages:!1,timePerChar:0,openaiIdFallback:null,speechToText:!1,fallback:null}}catch(t){throw this.logger.error(t),new Error("Error fetching default settings")}}async changeStatus(e,t){if(!this.integrationEnabled)throw new f("Openai is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),o=await this.settingsRepository.findFirst({where:{instanceId:s}}),n=t.remoteJid,r=t.status;if(r==="delete")return await this.sessionRepository.deleteMany({where:{remoteJid:n,botId:{not:null}}}),{openai:{remoteJid:n,status:r}};if(r==="closed")return o?.keepOpen?await this.sessionRepository.updateMany({where:{remoteJid:n,botId:{not:null},status:{not:"closed"}},data:{status:"closed"}}):await this.sessionRepository.deleteMany({where:{remoteJid:n}}),{openai:{...e,openai:{remoteJid:n,status:r}}};{let a=await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:n,botId:{not:null}},data:{status:r}});return{openai:{...e,openai:{remoteJid:n,status:r,session:a}}}}}catch(s){throw this.logger.error(s),new Error("Error changing status")}}async fetchSessions(e,t,s){if(!this.integrationEnabled)throw new f("Openai is disabled");try{let o=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),n=await this.botRepository.findFirst({where:{id:t}});if(n&&n.instanceId!==o)throw new Error("Openai Bot not found");return await this.sessionRepository.findMany({where:{instanceId:o,remoteJid:s,botId:n?t:{not:null},type:"openai"}})}catch(o){throw this.logger.error(o),new Error("Error fetching sessions")}}async ignoreJid(e,t){if(!this.integrationEnabled)throw new f("Openai is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),o=await this.settingsRepository.findFirst({where:{instanceId:s}});if(!o)throw new Error("Settings not found");let n=o?.ignoreJids||[];if(t.action==="add"){if(n.includes(t.remoteJid))return{ignoreJids:n};n.push(t.remoteJid)}else n=n.filter(a=>a!==t.remoteJid);return{ignoreJids:(await this.settingsRepository.update({where:{id:o.id},data:{ignoreJids:n}})).ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async emit({instance:e,remoteJid:t,msg:s,pushName:o}){if(this.integrationEnabled)try{let n=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(this.checkIgnoreJids(n?.ignoreJids,t))return;let r=await this.getSession(t,e),a=Te(s),c=await this.findBotTrigger(this.botRepository,a,e,r);if(!c){let v=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(v?.openaiIdFallback)c=await this.botRepository.findFirst({where:{id:v.openaiIdFallback}});else return}let l=c?.expire,d=c?.keywordFinish,u=c?.delayMessage,g=c?.unknownMessage,m=c?.listeningFromMe,h=c?.stopBotFromMe,y=c?.keepOpen,w=c?.debounceTime,E=c?.ignoreJids,I=c?.splitMessages,M=c?.timePerChar;l==null&&(l=n.expire),d==null&&(d=n.keywordFinish),u==null&&(u=n.delayMessage),g==null&&(g=n.unknownMessage),m==null&&(m=n.listeningFromMe),h==null&&(h=n.stopBotFromMe),y==null&&(y=n.keepOpen),w==null&&(w=n.debounceTime),E==null&&(E=n.ignoreJids),I==null&&(I=n?.splitMessages??!1),M==null&&(M=n?.timePerChar??0);let S=s.key;if(h&&S.fromMe&&r&&(r=await this.sessionRepository.update({where:{id:r.id},data:{status:"paused"}})),!m&&S.fromMe||r&&!r.awaitUser)return;w&&w>0?this.processDebounce(this.userMessageDebounce,a,t,w,async v=>{c.botType==="assistant"&&await this.openaiService.processOpenaiAssistant(this.waMonitor.waInstances[e.instanceName],t,o,S.fromMe,c,r,{...n,expire:l,keywordFinish:d,delayMessage:u,unknownMessage:g,listeningFromMe:m,stopBotFromMe:h,keepOpen:y,debounceTime:w,ignoreJids:E,splitMessages:I,timePerChar:M},v),c.botType==="chatCompletion"&&await this.openaiService.processOpenaiChatCompletion(this.waMonitor.waInstances[e.instanceName],t,o,c,r,{...n,expire:l,keywordFinish:d,delayMessage:u,unknownMessage:g,listeningFromMe:m,stopBotFromMe:h,keepOpen:y,debounceTime:w,ignoreJids:E,splitMessages:I,timePerChar:M},v)}):(c.botType==="assistant"&&await this.openaiService.processOpenaiAssistant(this.waMonitor.waInstances[e.instanceName],t,o,S.fromMe,c,r,n,a),c.botType==="chatCompletion"&&await this.openaiService.processOpenaiChatCompletion(this.waMonitor.waInstances[e.instanceName],t,o,c,r,n,a));return}catch(n){this.logger.error(n);return}}}});import wd from"axios";var ri,Da=b(()=>{ge();Z();_();ne();nt();pt();ri=class extends fe{constructor(e,t,s){super(t,s);this.typebotService=e;this.logger=new A("TypebotController");this.integrationEnabled=C.get("TYPEBOT").ENABLED;this.userMessageDebounce={};this.botRepository=this.prismaRepository.typebot,this.settingsRepository=this.prismaRepository.typebotSetting,this.sessionRepository=this.prismaRepository.integrationSession}async createBot(e,t){if(!this.integrationEnabled)throw new f("Typebot is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id);if(!t.expire||!t.keywordFinish||!t.delayMessage||!t.unknownMessage||!t.listeningFromMe||!t.stopBotFromMe||!t.keepOpen||!t.debounceTime||!t.ignoreJids){let r=await this.settingsRepository.findFirst({where:{instanceId:s}});t.expire||(t.expire=r?.expire||0),t.keywordFinish||(t.keywordFinish=r?.keywordFinish||"#SAIR"),t.delayMessage||(t.delayMessage=r?.delayMessage||1e3),t.unknownMessage||(t.unknownMessage=r?.unknownMessage||"Desculpe, n\xE3o entendi"),t.listeningFromMe||(t.listeningFromMe=r?.listeningFromMe||!1),t.stopBotFromMe||(t.stopBotFromMe=r?.stopBotFromMe||!1),t.keepOpen||(t.keepOpen=r?.keepOpen||!1),t.debounceTime||(t.debounceTime=r?.debounceTime||0),t.ignoreJids||(t.ignoreJids=r?.ignoreJids||[]),r||await this.settings(e,{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,ignoreJids:t.ignoreJids})}if(await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",instanceId:s}})&&t.triggerType==="all")throw new Error('You already have a typebot with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{url:t.url,typebot:t.typebot,instanceId:s}}))throw new Error("Typebot already exists");if(t.triggerType==="keyword"){if(!t.triggerOperator||!t.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}if(t.triggerType==="advanced"){if(!t.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:t.triggerValue,instanceId:s}}))throw new Error("Trigger already exists")}try{return await this.botRepository.create({data:{enabled:t?.enabled,description:t.description,url:t.url,typebot:t.typebot,expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,instanceId:s,triggerType:t.triggerType,triggerOperator:t.triggerOperator,triggerValue:t.triggerValue,ignoreJids:t.ignoreJids}})}catch(r){throw this.logger.error(r),new Error("Error creating typebot")}}async findBot(e){if(!this.integrationEnabled)throw new f("Typebot is disabled");let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),s=await this.botRepository.findMany({where:{instanceId:t}});return s.length?s:null}async fetchBot(e,t){if(!this.integrationEnabled)throw new f("Typebot is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),o=await this.botRepository.findFirst({where:{id:t}});if(!o)throw new Error("Typebot not found");if(o.instanceId!==s)throw new Error("Typebot not found");return o}async updateBot(e,t,s){if(!this.integrationEnabled)throw new f("Typebot is disabled");let o=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),n=await this.botRepository.findFirst({where:{id:t}});if(!n)throw new Error("Typebot not found");if(n.instanceId!==o)throw new Error("Typebot not found");if(s.triggerType==="all"&&await this.botRepository.findFirst({where:{enabled:!0,triggerType:"all",id:{not:t},instanceId:o}}))throw new Error('You already have a typebot with an "All" trigger, you cannot have more bots while it is active');if(await this.botRepository.findFirst({where:{url:s.url,typebot:s.typebot,id:{not:t},instanceId:o}}))throw new Error("Typebot already exists");if(s.triggerType==="keyword"){if(!s.triggerOperator||!s.triggerValue)throw new Error("Trigger operator and value are required");if(await this.botRepository.findFirst({where:{triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,id:{not:t},instanceId:o}}))throw new Error("Trigger already exists")}if(s.triggerType==="advanced"){if(!s.triggerValue)throw new Error("Trigger value is required");if(await this.botRepository.findFirst({where:{triggerValue:s.triggerValue,id:{not:t},instanceId:o}}))throw new Error("Trigger already exists")}try{return await this.botRepository.update({where:{id:t},data:{enabled:s?.enabled,description:s.description,url:s.url,typebot:s.typebot,expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,debounceTime:s.debounceTime,triggerType:s.triggerType,triggerOperator:s.triggerOperator,triggerValue:s.triggerValue,ignoreJids:s.ignoreJids}})}catch(a){throw this.logger.error(a),new Error("Error updating typebot")}}async deleteBot(e,t){if(!this.integrationEnabled)throw new f("Typebot is disabled");let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(n=>n.id),o=await this.botRepository.findFirst({where:{id:t}});if(!o)throw new Error("Typebot not found");if(o.instanceId!==s)throw new Error("Typebot not found");try{return await this.prismaRepository.integrationSession.deleteMany({where:{botId:t}}),await this.botRepository.delete({where:{id:t}}),{typebot:{id:t}}}catch(n){throw this.logger.error(n),new Error("Error deleting typebot")}}async settings(e,t){if(!this.integrationEnabled)throw new f("Typebot is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),o=await this.settingsRepository.findFirst({where:{instanceId:s}});if(o){let r=await this.settingsRepository.update({where:{id:o.id},data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,typebotIdFallback:t.typebotIdFallback,ignoreJids:t.ignoreJids}});return{expire:r.expire,keywordFinish:r.keywordFinish,delayMessage:r.delayMessage,unknownMessage:r.unknownMessage,listeningFromMe:r.listeningFromMe,stopBotFromMe:r.stopBotFromMe,keepOpen:r.keepOpen,debounceTime:r.debounceTime,typebotIdFallback:r.typebotIdFallback,ignoreJids:r.ignoreJids}}let n=await this.settingsRepository.create({data:{expire:t.expire,keywordFinish:t.keywordFinish,delayMessage:t.delayMessage,unknownMessage:t.unknownMessage,listeningFromMe:t.listeningFromMe,stopBotFromMe:t.stopBotFromMe,keepOpen:t.keepOpen,debounceTime:t.debounceTime,typebotIdFallback:t.typebotIdFallback,ignoreJids:t.ignoreJids,instanceId:s}});return{expire:n.expire,keywordFinish:n.keywordFinish,delayMessage:n.delayMessage,unknownMessage:n.unknownMessage,listeningFromMe:n.listeningFromMe,stopBotFromMe:n.stopBotFromMe,keepOpen:n.keepOpen,debounceTime:n.debounceTime,typebotIdFallback:n.typebotIdFallback,ignoreJids:n.ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async fetchSettings(e){if(!this.integrationEnabled)throw new f("Typebot is disabled");try{let t=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(o=>o.id),s=await this.settingsRepository.findFirst({where:{instanceId:t},include:{Fallback:!0}});return s?{expire:s.expire,keywordFinish:s.keywordFinish,delayMessage:s.delayMessage,unknownMessage:s.unknownMessage,listeningFromMe:s.listeningFromMe,stopBotFromMe:s.stopBotFromMe,keepOpen:s.keepOpen,ignoreJids:s.ignoreJids,typebotIdFallback:s.typebotIdFallback,fallback:s.Fallback}:{expire:0,keywordFinish:"",delayMessage:0,unknownMessage:"",listeningFromMe:!1,stopBotFromMe:!1,keepOpen:!1,ignoreJids:[],typebotIdFallback:null,fallback:null}}catch(t){throw this.logger.error(t),new Error("Error fetching default settings")}}async startBot(e,t){if(!this.integrationEnabled)throw new f("Typebot is disabled");if(t.remoteJid==="status@broadcast")return;let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}});if(!s)throw new Error("Instance not found");let o=t.remoteJid,n=t.url,r=t.typebot,a=t.startSession,c=t.variables,l=t?.typebot?.expire,d=t?.typebot?.keywordFinish,u=t?.typebot?.delayMessage,g=t?.typebot?.unknownMessage,m=t?.typebot?.listeningFromMe,h=t?.typebot?.stopBotFromMe,y=t?.typebot?.keepOpen,w=t?.typebot?.debounceTime,E=t?.typebot?.ignoreJids,I=await this.settingsRepository.findFirst({where:{instanceId:s.id}});if(this.checkIgnoreJids(I?.ignoreJids,o))throw new Error("Jid not allowed");(!l||!d||!u||!g||!m||!h||!y||!w||!E)&&(l==null&&(l=I.expire),d==null&&(d=I.keywordFinish),u==null&&(u=I.delayMessage),g==null&&(g=I.unknownMessage),m==null&&(m=I.listeningFromMe),h==null&&(h=I.stopBotFromMe),y==null&&(y=I.keepOpen),w==null&&(w=I.debounceTime),E==null&&(E=I.ignoreJids),I||await this.settings(e,{expire:l,keywordFinish:d,delayMessage:u,unknownMessage:g,listeningFromMe:m,stopBotFromMe:h,keepOpen:y,debounceTime:w,ignoreJids:E}));let M={};if(c?.length&&c.forEach(S=>{M[S.name]=S.value}),a){let S=await this.botRepository.findFirst({where:{url:n,typebot:r,instanceId:s.id}});S||(S=await this.botRepository.create({data:{enabled:!0,url:n,typebot:r,instanceId:s.id,expire:l,keywordFinish:d,delayMessage:u,unknownMessage:g,listeningFromMe:m,stopBotFromMe:h,keepOpen:y}})),await this.prismaRepository.integrationSession.deleteMany({where:{remoteJid:o,instanceId:s.id,botId:{not:null}}}),await this.typebotService.processTypebot(s,o,null,null,S,n,l,r,d,u,g,m,h,y,"init",M)}else{let S=Math.floor(Math.random()*1e10).toString();try{let v=C.get("TYPEBOT").API_VERSION,O,k;v==="latest"?(O=`${t.url}/api/v1/typebots/${t.typebot}/startChat`,k={prefilledVariables:M}):(O=`${t.url}/api/v1/sendMessage`,k={startParams:{publicId:t.typebot,prefilledVariables:M}});let D=await wd.post(O,k);await this.typebotService.sendWAMessage(s,null,{expire:l,keywordFinish:d,delayMessage:u,unknownMessage:g,listeningFromMe:m,stopBotFromMe:h,keepOpen:y},o,D.data.messages,D.data.input,D.data.clientSideActions),this.waMonitor.waInstances[e.instanceName].sendDataWebhook("typebot.start",{remoteJid:o,url:O,typebot:r,variables:c,sessionId:S})}catch(v){this.logger.error(v);return}}return{typebot:{...e,typebot:{url:n,remoteJid:o,typebot:r,prefilledVariables:M}}}}async changeStatus(e,t){if(!this.integrationEnabled)throw new f("Typebot is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(l=>l.id),o=t.remoteJid,n=t.status,r=await this.settingsRepository.findFirst({where:{instanceId:s}});if(n==="delete")return await this.sessionRepository.deleteMany({where:{remoteJid:o,instanceId:s,botId:{not:null}}}),{typebot:{...e,typebot:{remoteJid:o,status:n}}};if(n==="closed")return r?.keepOpen?await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:o,botId:{not:null}},data:{status:n}}):await this.sessionRepository.deleteMany({where:{remoteJid:o,instanceId:s,botId:{not:null}}}),{typebot:{...e,typebot:{remoteJid:o,status:n}}};let a=await this.sessionRepository.updateMany({where:{instanceId:s,remoteJid:o,botId:{not:null}},data:{status:n}}),c={remoteJid:o,status:n,session:a};return this.waMonitor.waInstances[e.instanceName].sendDataWebhook("typebot.change-status",c),{typebot:{...e,typebot:c}}}catch(s){throw this.logger.error(s),new Error("Error changing status")}}async fetchSessions(e,t,s){if(!this.integrationEnabled)throw new f("Typebot is disabled");try{let o=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(r=>r.id),n=await this.botRepository.findFirst({where:{id:t}});if(n&&n.instanceId!==o)throw new Error("Typebot not found");return await this.sessionRepository.findMany({where:{instanceId:o,remoteJid:s,botId:t??{not:null},type:"typebot"}})}catch(o){throw this.logger.error(o),new Error("Error fetching sessions")}}async ignoreJid(e,t){if(!this.integrationEnabled)throw new f("Typebot is disabled");try{let s=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}}).then(a=>a.id),o=await this.settingsRepository.findFirst({where:{instanceId:s}});if(!o)throw new Error("Settings not found");let n=o?.ignoreJids||[];if(t.action==="add"){if(n.includes(t.remoteJid))return{ignoreJids:n};n.push(t.remoteJid)}else n=n.filter(a=>a!==t.remoteJid);return{ignoreJids:(await this.settingsRepository.update({where:{id:o.id},data:{ignoreJids:n}})).ignoreJids}}catch(s){throw this.logger.error(s),new Error("Error setting default settings")}}async emit({instance:e,remoteJid:t,msg:s}){if(this.integrationEnabled)try{let o=await this.prismaRepository.instance.findFirst({where:{name:e.instanceName}});if(!o)throw new Error("Instance not found");let n=await this.getSession(t,e),r=Te(s),a=await this.findBotTrigger(this.botRepository,r,e,n);if(!a){let v=await this.settingsRepository.findFirst({where:{instanceId:e.instanceId}});if(v?.typebotIdFallback)a=await this.botRepository.findFirst({where:{id:v.typebotIdFallback}});else return}let c=await this.prismaRepository.typebotSetting.findFirst({where:{instanceId:e.instanceId}}),l=a?.url,d=a?.typebot,u=a?.expire,g=a?.keywordFinish,m=a?.delayMessage,h=a?.unknownMessage,y=a?.listeningFromMe,w=a?.stopBotFromMe,E=a?.keepOpen,I=a?.debounceTime,M=a?.ignoreJids;if(u==null&&(u=c.expire),g==null&&(g=c.keywordFinish),m==null&&(m=c.delayMessage),h==null&&(h=c.unknownMessage),y==null&&(y=c.listeningFromMe),w==null&&(w=c.stopBotFromMe),E==null&&(E=c.keepOpen),I==null&&(I=c.debounceTime),M==null&&(M=c.ignoreJids),this.checkIgnoreJids(M,t))return;let S=s.key;if(w&&S.fromMe&&n){await this.sessionRepository.update({where:{id:n.id},data:{status:"paused"}});return}if(!y&&S.fromMe||n&&!n.awaitUser||(I&&I>0?this.processDebounce(this.userMessageDebounce,r,t,I,async v=>{await this.typebotService.processTypebot(o,t,s,n,a,l,u,d,g,m,h,y,w,E,v)}):await this.typebotService.processTypebot(o,t,s,n,a,l,u,d,g,m,h,y,w,E,r),n&&!n.awaitUser))return}catch(o){this.logger.error(o);return}}}});var ai,oe,We=b(()=>{ai=class ai{constructor(i,e,t,s){this.prisma=i,this.monitor=e,this.status=t,this.name=s}set prisma(i){this.prismaRepository=i}get prisma(){return this.prismaRepository}set monitor(i){this.waMonitor=i}get monitor(){return this.waMonitor}set name(i){this.integrationName=i}get name(){return this.integrationName}set status(i){this.integrationStatus=i}get status(){return this.integrationStatus}async set(i,e){if(this.status)return e[this.name]?.enabled?e[this.name].events.length===0&&(e[this.name].events=ai.events):e[this.name].events=[],this.prisma[this.name].upsert({where:{instanceId:this.monitor.waInstances[i].instanceId},update:{enabled:e[this.name]?.enabled,events:e[this.name].events},create:{enabled:e[this.name]?.enabled,events:e[this.name].events,instanceId:this.monitor.waInstances[i].instanceId}})}async get(i){if(!this.status)return;if(this.monitor.waInstances[i]===void 0)return null;let e=await this.prisma[this.name].findUnique({where:{instanceId:this.monitor.waInstances[i].instanceId}});return e||null}};ai.events=["APPLICATION_STARTUP","QRCODE_UPDATED","MESSAGES_SET","MESSAGES_UPSERT","MESSAGES_EDITED","MESSAGES_UPDATE","MESSAGES_DELETE","SEND_MESSAGE","CONTACTS_SET","CONTACTS_UPSERT","CONTACTS_UPDATE","PRESENCE_UPDATE","CHATS_SET","CHATS_UPSERT","CHATS_UPDATE","CHATS_DELETE","GROUPS_UPSERT","GROUP_UPDATE","GROUP_PARTICIPANTS_UPDATE","CONNECTION_UPDATE","LABELS_EDIT","LABELS_ASSOCIATION","CALL","TYPEBOT_START","TYPEBOT_CHANGE_STATUS","REMOVE_INSTANCE","LOGOUT_INSTANCE"];oe=ai});import So from"pusher";var ci,xa=b(()=>{Z();_();We();ci=class extends oe{constructor(e,t){super(e,t,C.get("PUSHER")?.ENABLED,"pusher");this.logger=new A("PusherController");this.pusherClients={};this.globalPusherClient=null;this.pusherConfig=C.get("PUSHER");this.init()}async init(){if(!this.status)return;if(this.pusherConfig.GLOBAL?.ENABLED){let{APP_ID:t,KEY:s,SECRET:o,CLUSTER:n,USE_TLS:r}=this.pusherConfig.GLOBAL;t&&s&&o&&n&&(this.globalPusherClient=new So({appId:t,key:s,secret:o,cluster:n,useTLS:r}),this.logger.info("Pusher global client initialized"))}(await this.prismaRepository.instance.findMany({where:{Pusher:{isNot:null}},include:{Pusher:!0}})).forEach(t=>{t.Pusher.enabled&&t.Pusher.appId&&t.Pusher.key&&t.Pusher.secret&&t.Pusher.cluster?(this.pusherClients[t.name]=new So({appId:t.Pusher.appId,key:t.Pusher.key,secret:t.Pusher.secret,cluster:t.Pusher.cluster,useTLS:t.Pusher.useTLS}),this.logger.info(`Pusher client initialized for instance ${t.name}`)):(delete this.pusherClients[t.name],this.logger.warn(`Pusher client disabled or misconfigured for instance ${t.name}`))})}async set(e,t){t.pusher?.enabled?t.pusher.events.length===0&&(t.pusher.events=oe.events):t.pusher.events=[];let s=await this.prisma.pusher.upsert({where:{instanceId:this.monitor.waInstances[e].instanceId},update:{enabled:t.pusher.enabled,events:t.pusher.events,appId:t.pusher.appId,key:t.pusher.key,secret:t.pusher.secret,cluster:t.pusher.cluster,useTLS:t.pusher.useTLS},create:{enabled:t.pusher.enabled,events:t.pusher.events,instanceId:this.monitor.waInstances[e].instanceId,appId:t.pusher.appId,key:t.pusher.key,secret:t.pusher.secret,cluster:t.pusher.cluster,useTLS:t.pusher.useTLS}});return s.enabled&&s.appId&&s.key&&s.secret&&s.cluster?(this.pusherClients[e]=new So({appId:s.appId,key:s.key,secret:s.secret,cluster:s.cluster,useTLS:s.useTLS}),this.logger.info(`Pusher client initialized for instance ${e}`)):(delete this.pusherClients[e],this.logger.warn(`Pusher client disabled or misconfigured for instance ${e}`)),s}async emit({instanceName:e,origin:t,event:s,data:o,serverUrl:n,dateTime:r,sender:a,apiKey:c,local:l,integration:d}){if(d&&!d.includes("pusher")||!this.status)return;let u=await this.get(e),g=s.replace(/[.-]/gm,"_").toUpperCase(),m=C.get("LOG").LEVEL.includes("WEBHOOKS"),h=s.replace(/_/g,".").toLowerCase(),y={event:s,instance:e,data:o,destination:u?.appId||this.pusherConfig.GLOBAL?.APP_ID,date_time:r,sender:a,server_url:n,apikey:c};s=="qrcode.updated"&&delete y.data.qrcode.base64;let w=JSON.stringify(y),E=Buffer.byteLength(w,"utf8");if(E>10240){this.logger.error({local:`${t}.sendData-Pusher`,message:"Payload size exceeds Pusher limit",event:s,instanceName:e,payloadSize:E});return}if(l&&u&&u.enabled){let M=u.events;if(Array.isArray(M)&&M.includes(g)){m&&this.logger.log({local:`${t}.sendData-Pusher`,appId:u.appId,...y});try{let S=this.pusherClients[e];S?S.trigger(e,h,y):this.logger.error(`Pusher client not found for instance ${e}`)}catch(S){this.logger.error({local:`${t}.sendData-Pusher`,message:S?.message,error:S})}}}if(this.pusherConfig.GLOBAL?.ENABLED&&this.pusherConfig.EVENTS[g]){m&&this.logger.log({local:`${t}.sendData-Pusher-Global`,appId:this.pusherConfig.GLOBAL?.APP_ID,...y});try{this.globalPusherClient?this.globalPusherClient.trigger(e,h,y):this.logger.error("Global Pusher client not initialized")}catch(S){this.logger.error({local:`${t}.sendData-Pusher-Global`,message:S?.message,error:S})}}}}});import*as Oa from"amqplib/callback_api";var pi,Na=b(()=>{Z();_();We();pi=class extends oe{constructor(e,t){super(e,t,C.get("RABBITMQ")?.ENABLED,"rabbitmq");this.amqpChannel=null;this.logger=new A("RabbitmqController")}async init(){this.status&&await new Promise((e,t)=>{let s=C.get("RABBITMQ").URI,o=C.get("RABBITMQ").EXCHANGE_NAME;Oa.connect(s,(n,r)=>{if(n){t(n);return}r.createChannel((a,c)=>{if(a){t(a);return}let l=o;c.assertExchange(l,"topic",{durable:!0,autoDelete:!1}),this.amqpChannel=c,this.logger.info("AMQP initialized"),e()})})}).then(()=>{C.get("RABBITMQ")?.GLOBAL_ENABLED&&this.initGlobalQueues()})}set channel(e){this.amqpChannel=e}get channel(){return this.amqpChannel}async emit({instanceName:e,origin:t,event:s,data:o,serverUrl:n,dateTime:r,sender:a,apiKey:c,integration:l}){if(l&&!l.includes("rabbitmq")||!this.status)return;let d=await this.get(e),u=d?.events,g=C.get("RABBITMQ").GLOBAL_ENABLED,m=C.get("RABBITMQ").EVENTS,h=C.get("RABBITMQ").PREFIX_KEY,y=C.get("RABBITMQ").EXCHANGE_NAME,w=s.replace(/[.-]/gm,"_").toUpperCase(),E=C.get("LOG").LEVEL.includes("WEBHOOKS"),I={event:s,instance:e,data:o,server_url:n,date_time:r,sender:a,apikey:c};if(d?.enabled&&this.amqpChannel&&Array.isArray(u)&&u.includes(w)){let M=e??y,S=0;for(;S<3;)try{await this.amqpChannel.assertExchange(M,"topic",{durable:!0,autoDelete:!1});let v=s.replace(/_/g,".").toLowerCase(),O=`${e}.${v}`;if(await this.amqpChannel.assertQueue(O,{durable:!0,autoDelete:!1,arguments:{"x-queue-type":"quorum"}}),await this.amqpChannel.bindQueue(O,M,v),await this.amqpChannel.publish(M,s,Buffer.from(JSON.stringify(I))),E){let k={local:`${t}.sendData-RabbitMQ`,...I};this.logger.log(k)}break}catch{S++}}if(g&&m[w]&&this.amqpChannel){let M=y,S=0;for(;S<3;)try{await this.amqpChannel.assertExchange(M,"topic",{durable:!0,autoDelete:!1});let v=h?`${h}.${s.replace(/_/g,".").toLowerCase()}`:s.replace(/_/g,".").toLowerCase();if(await this.amqpChannel.assertQueue(v,{durable:!0,autoDelete:!1,arguments:{"x-queue-type":"quorum"}}),await this.amqpChannel.bindQueue(v,M,s),await this.amqpChannel.publish(M,s,Buffer.from(JSON.stringify(I))),E){let O={local:`${t}.sendData-RabbitMQ-Global`,...I};this.logger.log(O)}break}catch{S++}}}async initGlobalQueues(){this.logger.info("Initializing global queues");let e=C.get("RABBITMQ").EXCHANGE_NAME,t=C.get("RABBITMQ").EVENTS,s=C.get("RABBITMQ").PREFIX_KEY;if(!t){this.logger.warn("No events to initialize on AMQP");return}Object.keys(t).forEach(n=>{if(t[n]===!1)return;let r=s!==""?`${s}.${n.replace(/_/g,".").toLowerCase()}`:`${n.replace(/_/g,".").toLowerCase()}`,a=e;this.amqpChannel.assertExchange(a,"topic",{durable:!0,autoDelete:!1}),this.amqpChannel.assertQueue(r,{durable:!0,autoDelete:!1,arguments:{"x-queue-type":"quorum"}}),this.amqpChannel.bindQueue(r,a,n)})}}});import{SQS as bd}from"@aws-sdk/client-sqs";var li,ka=b(()=>{Z();_();We();li=class extends oe{constructor(e,t){super(e,t,C.get("SQS")?.ENABLED,"sqs");this.logger=new A("SqsController")}init(){this.status&&new Promise(e=>{let t=C.get("SQS");this.sqs=new bd({credentials:{accessKeyId:t.ACCESS_KEY_ID,secretAccessKey:t.SECRET_ACCESS_KEY},region:t.REGION}),this.logger.info("SQS initialized"),e()})}set channel(e){this.sqs=e}get channel(){return this.sqs}async emit({instanceName:e,origin:t,event:s,data:o,serverUrl:n,dateTime:r,sender:a,apiKey:c,integration:l}){if(l&&!l.includes("sqs")||!this.status)return;let d=await this.get(e),u=d?.events,g=s.replace(/[.-]/gm,"_").toUpperCase();if(d?.enabled&&this.sqs&&Array.isArray(u)&&u.includes(g)){let m=`${s.replace(".","_").toLowerCase()}`,h=`${e}_${m}.fifo`,y=C.get("SQS"),w=`https://sqs.${y.REGION}.amazonaws.com/${y.ACCOUNT_ID}/${h}`,E={event:s,instance:e,data:o,server_url:n,date_time:r,sender:a,apikey:c},I={MessageBody:JSON.stringify(E),MessageGroupId:"evolution",MessageDeduplicationId:`${e}_${m}_${Date.now()}`,QueueUrl:w};this.sqs.sendMessage(I,M=>{if(M)this.logger.error({local:`${t}.sendData-SQS`,message:M?.message,hostName:M?.hostname,code:M?.code,stack:M?.stack,name:M?.name,url:h,server_url:n});else if(C.get("LOG").LEVEL.includes("WEBHOOKS")){let S={local:`${t}.sendData-SQS`,...E};this.logger.log(S)}})}}async initQueues(e,t){if(!t||!t.length)return;t.map(o=>`${o.replace(/_/g,"_").toLowerCase()}`).forEach(o=>{let n=`${e}_${o}.fifo`;this.sqs.createQueue({QueueName:n,Attributes:{FifoQueue:"true"}},(r,a)=>{r?this.logger.error(`Error creating queue ${n}: ${r.message}`):this.logger.info(`Queue ${n} created: ${a.QueueUrl}`)})})}async removeQueues(e,t){let s=Array.isArray(t)?t.map(n=>String(n)):[];if(!t||!s.length)return;s.map(n=>`${n.replace(/_/g,"_").toLowerCase()}`).forEach(n=>{let r=`${e}_${n}.fifo`;this.sqs.getQueueUrl({QueueName:r},(a,c)=>{if(a)this.logger.error(`Error getting queue URL for ${r}: ${a.message}`);else{let l=c.QueueUrl;this.sqs.deleteQueue({QueueUrl:l},d=>{d?this.logger.error(`Error deleting queue ${r}: ${d.message}`):this.logger.info(`Queue ${r} deleted`)})}})})}}});import _a from"axios";import{isURL as Eo}from"class-validator";var ui,Ba=b(()=>{Z();_();ne();We();ui=class extends oe{constructor(e,t){super(e,t,!0,"webhook");this.logger=new A("WebhookController")}async set(e,t){if(!Eo(t.webhook.url,{require_tld:!1}))throw new f('Invalid "url" property');return t.webhook?.enabled?t.webhook.events.length===0&&(t.webhook.events=oe.events):t.webhook.events=[],this.prisma.webhook.upsert({where:{instanceId:this.monitor.waInstances[e].instanceId},update:{enabled:t.webhook?.enabled,events:t.webhook?.events,url:t.webhook?.url,headers:t.webhook?.headers,webhookBase64:t.webhook.base64,webhookByEvents:t.webhook.byEvents},create:{enabled:t.webhook?.enabled,events:t.webhook?.events,instanceId:this.monitor.waInstances[e].instanceId,url:t.webhook?.url,headers:t.webhook?.headers,webhookBase64:t.webhook.base64,webhookByEvents:t.webhook.byEvents}})}async emit({instanceName:e,origin:t,event:s,data:o,serverUrl:n,dateTime:r,sender:a,apiKey:c,local:l,integration:d}){if(d&&!d.includes("webhook"))return;let u=await this.get(e),g=C.get("WEBHOOK"),m=u?.events,h=u?.headers,y=s.replace(/[.-]/gm,"_").toUpperCase(),w=y.replace(/_/gm,"-").toLowerCase(),E=C.get("LOG").LEVEL.includes("WEBHOOKS"),I={event:s,instance:e,data:o,destination:u?.url||`${g.GLOBAL.URL}/${w}`,date_time:r,sender:a,server_url:n,apikey:c};if(l&&u?.enabled&&Array.isArray(m)&&m.includes(y)){let M;if(u?.webhookByEvents?M=`${u?.url}/${w}`:M=u?.url,E){let S={local:`${t}.sendData-Webhook`,url:M,...I};this.logger.log(S)}try{if(u?.enabled&&Eo(u.url,{require_tld:!1})){let S=_a.create({baseURL:M,headers:h});await this.retryWebhookRequest(S,I,`${t}.sendData-Webhook`,M,n)}}catch(S){this.logger.error({local:`${t}.sendData-Webhook`,message:`Todas as tentativas falharam: ${S?.message}`,hostName:S?.hostname,syscall:S?.syscall,code:S?.code,error:S?.errno,stack:S?.stack,name:S?.name,url:M,server_url:n})}}if(g.GLOBAL?.ENABLED&&g.EVENTS[y]){let M=g.GLOBAL.URL;if(g.GLOBAL.WEBHOOK_BY_EVENTS&&(M=`${M}/${w}`),E){let S={local:`${t}.sendData-Webhook-Global`,url:M,...I};this.logger.log(S)}try{if(Eo(M)){let S=_a.create({baseURL:M});await this.retryWebhookRequest(S,I,`${t}.sendData-Webhook-Global`,M,n)}}catch(S){this.logger.error({local:`${t}.sendData-Webhook-Global`,message:`Todas as tentativas falharam: ${S?.message}`,hostName:S?.hostname,syscall:S?.syscall,code:S?.code,error:S?.errno,stack:S?.stack,name:S?.name,url:M,server_url:n})}}}async retryWebhookRequest(e,t,s,o,n,r=10,a=30){let c=0;for(;c<r;)try{await e.post("",t),c>0&&this.logger.log({local:`${s}`,message:`Sucesso no envio ap\xF3s ${c+1} tentativas`,url:o});return}catch(l){if(c++,this.logger.error({local:`${s}`,message:`Tentativa ${c}/${r} falhou: ${l?.message}`,hostName:l?.hostname,syscall:l?.syscall,code:l?.code,error:l?.errno,stack:l?.stack,name:l?.name,url:o,server_url:n}),c===r)throw l;await new Promise(d=>setTimeout(d,a*1e3))}}}});import{Server as Sd}from"socket.io";var di,La=b(()=>{Z();_();We();di=class extends oe{constructor(e,t){super(e,t,C.get("WEBSOCKET")?.ENABLED,"websocket");this.logger=new A("WebsocketController");this.cors=C.get("CORS").ORIGIN}init(e){this.status&&(this.socket=new Sd(e,{cors:{origin:this.cors}}),this.socket.on("connection",t=>{this.logger.info("User connected"),t.on("disconnect",()=>{this.logger.info("User disconnected")}),t.on("sendNode",async s=>{try{await this.waMonitor.waInstances[s.instanceId].baileysSendNode(s.stanza),this.logger.info("Node sent successfully")}catch(o){this.logger.error("Error sending node:"),this.logger.error(o)}})}),this.logger.info("Socket.io initialized"))}set cors(e){this.corsConfig=e}get cors(){return this.corsConfig?.includes("*")?"*":this.corsConfig}set socket(e){this.io=e}get socket(){return this.io}async emit({instanceName:e,origin:t,event:s,data:o,serverUrl:n,dateTime:r,sender:a,apiKey:c,integration:l}){if(l&&!l.includes("websocket")||!this.status)return;let d=s.replace(/[.-]/gm,"_").toUpperCase(),u=C.get("LOG").LEVEL.includes("WEBSOCKET"),g={event:s,instance:e,data:o,server_url:n,date_time:r,sender:a,apikey:c};C.get("WEBSOCKET")?.GLOBAL_EVENTS&&(this.socket.emit(s,g),u&&this.logger.log({local:`${t}.sendData-WebsocketGlobal`,...g}));try{let m=await this.get(e);if(!m?.enabled)return;Array.isArray(m?.events)&&m?.events.includes(d)&&(this.socket.of(`/${e}`).emit(s,g),u&&this.logger.log({local:`${t}.sendData-Websocket`,...g}))}catch(m){u&&this.logger.log(m)}}}});var gi,Fa=b(()=>{xa();Na();ka();Ba();La();gi=class{constructor(i,e){this.prisma=i,this.monitor=e,this.websocket=new di(i,e),this.webhook=new ui(i,e),this.rabbitmq=new pi(i,e),this.sqs=new li(i,e),this.pusher=new ci(i,e)}set prisma(i){this.prismaRepository=i}get prisma(){return this.prismaRepository}set monitor(i){this.waMonitor=i}get monitor(){return this.waMonitor}set websocket(i){this.websocketController=i}get websocket(){return this.websocketController}set webhook(i){this.webhookController=i}get webhook(){return this.webhookController}set rabbitmq(i){this.rabbitmqController=i}get rabbitmq(){return this.rabbitmqController}set sqs(i){this.sqsController=i}get sqs(){return this.sqsController}set pusher(i){this.pusherController=i}get pusher(){return this.pusherController}init(i){this.websocket.init(i),this.rabbitmq.init(),this.sqs.init(),this.pusher.init()}async emit(i){await this.websocket.emit(i),await this.rabbitmq.emit(i),await this.sqs.emit(i),await this.webhook.emit(i),await this.pusher.emit(i)}async setInstance(i,e){e.websocket&&await this.websocket.set(i,{websocket:{enabled:!0,events:e.websocket?.events}}),e.rabbitmq&&await this.rabbitmq.set(i,{rabbitmq:{enabled:!0,events:e.rabbitmq?.events}}),e.sqs&&await this.sqs.set(i,{sqs:{enabled:!0,events:e.sqs?.events}}),e.webhook&&await this.webhook.set(i,{webhook:{enabled:!0,events:e.webhook?.events,url:e.webhook?.url,headers:e.webhook?.headers,base64:e.webhook?.base64,byEvents:e.webhook?.byEvents}}),e.pusher&&await this.pusher.set(i,{pusher:{enabled:!0,events:e.pusher?.events,appId:e.pusher?.appId,key:e.pusher?.key,secret:e.pusher?.secret,cluster:e.pusher?.cluster,useTLS:e.pusher?.useTLS}})}}});var mi,Ua=b(()=>{mi=class{constructor(i){this.s3Service=i}async getMedia(i,e){return this.s3Service.getMedia(i,e)}async getMediaUrl(i,e){return this.s3Service.getMediaUrl(i,e)}}});var hi,Ja=b(()=>{Tt();_();ne();hi=class{constructor(i){this.prismaRepository=i;this.logger=new A("S3Service")}async getMedia(i,e){try{let t={instanceId:i.instanceId,...e},s=await this.prismaRepository.media.findMany({where:t,select:{id:!0,fileName:!0,type:!0,mimetype:!0,createdAt:!0,Message:!0}});if(!s||s.length===0)throw"Media not found";return s}catch(t){throw new f(t)}}async getMediaUrl(i,e){let t=(await this.getMedia(i,{id:e.id}))[0];return{mediaUrl:await Ue(t.fileName,e.expiry),...t}}}});import{execSync as Ed}from"child_process";import{rmSync as Wa}from"fs";import{join as Io}from"path";var fi,$a=b(()=>{F();ge();_();qs();ne();fi=class{constructor(i,e,t,s,o,n,r){this.eventEmitter=i;this.configService=e;this.prismaRepository=t;this.providerFiles=s;this.cache=o;this.chatwootCache=n;this.baileysCache=r;this.db={};this.redis={};this.logger=new A("WAMonitoringService");this.waInstances={};this.providerSession=Object.freeze(this.configService.get("PROVIDER"));this.removeInstance(),this.noConnection(),Object.assign(this.db,e.get("DATABASE")),Object.assign(this.redis,e.get("CACHE"))}delInstanceTime(i){let e=this.configService.get("DEL_INSTANCE");typeof e=="number"&&e>0&&setTimeout(async()=>{this.waInstances[i]?.connectionStatus?.state!=="open"&&(this.waInstances[i]?.connectionStatus?.state==="connecting"?(await this.waInstances[i].integration===N.WHATSAPP_BAILEYS&&(await this.waInstances[i]?.client?.logout("Log out instance: "+i),this.waInstances[i]?.client?.ws?.close(),this.waInstances[i]?.client?.end(void 0)),this.eventEmitter.emit("remove.instance",i,"inner")):this.eventEmitter.emit("remove.instance",i,"inner"))},1e3*60*e)}async instanceInfo(i){if(i&&i.length>0){let o=i?i.filter(n=>!this.waInstances[n]):[];if(o.length>0)throw new H(`Instance${o.length>1?"s":""} "${o.join(", ")}" not found`)}let e=this.configService.get("DATABASE").CONNECTION.CLIENT_NAME,t=i&&i.length>0?{name:{in:i},clientName:e}:{clientName:e};return await this.prismaRepository.instance.findMany({where:t,include:{Chatwoot:!0,Proxy:!0,Rabbitmq:!0,Sqs:!0,Websocket:!0,Setting:!0,_count:{select:{Message:!0,Contact:!0,Chat:!0}}}})}async instanceInfoById(i,e){let t;if(i){if(t=await this.prismaRepository.instance.findFirst({where:{id:i}}).then(o=>o?.name),!t)throw new H(`Instance "${i}" not found`)}else if(e&&(t=await this.prismaRepository.instance.findFirst({where:{number:e}}).then(o=>o?.name),!t))throw new H(`Instance "${e}" not found`);if(!t)throw new H(`Instance "${i}" not found`);if(t&&!this.waInstances[t])throw new H(`Instance "${t}" not found`);let s=t?[t]:null;return this.instanceInfo(s)}async cleaningUp(i){let e;if(this.db.SAVE_DATA.INSTANCE&&await this.prismaRepository.instance.findFirst({where:{name:i}})){let s=await this.prismaRepository.instance.update({where:{name:i},data:{connectionStatus:"close"}});Wa(Io(Rt,s.id),{recursive:!0,force:!0}),e=s.id,await this.prismaRepository.session.deleteMany({where:{sessionId:s.id}})}this.redis.REDIS.ENABLED&&this.redis.REDIS.SAVE_INSTANCES&&(await this.cache.delete(i),e&&await this.cache.delete(e)),this.providerSession?.ENABLED&&await this.providerFiles.removeSession(i)}async cleaningStoreData(i){this.configService.get("CHATWOOT").ENABLED&&Ed(`rm -rf ${Io(Xr,"chatwoot",i+"*")}`);let e=await this.prismaRepository.instance.findFirst({where:{name:i}});e&&(Wa(Io(Rt,e.id),{recursive:!0,force:!0}),await this.prismaRepository.session.deleteMany({where:{sessionId:e.id}}),await this.prismaRepository.chat.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.contact.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.messageUpdate.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.message.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.webhook.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.chatwoot.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.proxy.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.rabbitmq.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.sqs.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.integrationSession.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.typebot.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.websocket.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.setting.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.label.deleteMany({where:{instanceId:e.id}}),await this.prismaRepository.instance.delete({where:{name:i}}))}async loadInstance(){try{this.providerSession?.ENABLED?await this.loadInstancesFromProvider():this.db.SAVE_DATA.INSTANCE?await this.loadInstancesFromDatabasePostgres():this.redis.REDIS.ENABLED&&this.redis.REDIS.SAVE_INSTANCES&&await this.loadInstancesFromRedis()}catch(i){this.logger.error(i)}}async saveInstance(i){try{let e=await this.configService.get("DATABASE").CONNECTION.CLIENT_NAME;await this.prismaRepository.instance.create({data:{id:i.instanceId,name:i.instanceName,ownerJid:i.ownerJid,profileName:i.profileName,profilePicUrl:i.profilePicUrl,connectionStatus:i.integration&&i.integration===N.WHATSAPP_BAILEYS?"close":i.status??"open",number:i.number,integration:i.integration||N.WHATSAPP_BAILEYS,token:i.hash,clientName:e,businessId:i.businessId}})}catch(e){this.logger.error(e)}}deleteInstance(i){try{this.eventEmitter.emit("remove.instance",i,"inner")}catch(e){this.logger.error(e)}}async setInstance(i){let e=as.init(i,{configService:this.configService,eventEmitter:this.eventEmitter,prismaRepository:this.prismaRepository,cache:this.cache,chatwootCache:this.chatwootCache,baileysCache:this.baileysCache,providerFiles:this.providerFiles});e&&(e.setInstance({instanceId:i.instanceId,instanceName:i.instanceName,integration:i.integration,token:i.token,number:i.number,businessId:i.businessId}),await e.connectToWhatsapp(),this.waInstances[i.instanceName]=e)}async loadInstancesFromRedis(){let i=await this.cache.keys();i?.length>0&&await Promise.all(i.map(async e=>{let t=await this.prismaRepository.instance.findUnique({where:{id:e.split(":")[1]}});if(!t)return;let s={instanceId:e.split(":")[1],instanceName:e.split(":")[2],integration:t.integration,token:t.token,number:t.number,businessId:t.businessId};this.setInstance(s)}))}async loadInstancesFromDatabasePostgres(){let i=await this.configService.get("DATABASE").CONNECTION.CLIENT_NAME,e=await this.prismaRepository.instance.findMany({where:{clientName:i}});e.length!==0&&await Promise.all(e.map(async t=>{this.setInstance({instanceId:t.id,instanceName:t.name,integration:t.integration,token:t.token,number:t.number,businessId:t.businessId})}))}async loadInstancesFromProvider(){let[i]=await this.providerFiles.allInstances();i?.data&&await Promise.all(i?.data?.map(async e=>{let t=await this.prismaRepository.instance.findUnique({where:{id:e}});this.setInstance({instanceId:t.id,instanceName:t.name,integration:t.integration,token:t.token,businessId:t.businessId})}))}removeInstance(){this.eventEmitter.on("remove.instance",async i=>{try{await this.waInstances[i]?.sendDataWebhook("remove.instance",null),this.cleaningUp(i),this.cleaningStoreData(i)}finally{this.logger.warn(`Instance "${i}" - REMOVED`)}try{delete this.waInstances[i]}catch(e){this.logger.error(e)}}),this.eventEmitter.on("logout.instance",async i=>{try{await this.waInstances[i]?.sendDataWebhook("logout.instance",null),this.configService.get("CHATWOOT").ENABLED&&this.waInstances[i]?.clearCacheChatwoot(),this.cleaningUp(i)}finally{this.logger.warn(`Instance "${i}" - LOGOUT`)}})}noConnection(){this.eventEmitter.on("no.connection",async i=>{try{await this.waInstances[i]?.client?.logout("Log out instance: "+i),this.waInstances[i]?.client?.ws?.close(),this.waInstances[i].instance.qrcode={count:0},this.waInstances[i].stateConnection.state="close"}catch(e){this.logger.error({localError:"noConnection",warn:"Error deleting instance from memory.",error:e})}finally{this.logger.warn(`Instance "${i}" - NOT CONNECTION`)}})}}});var yi,qa=b(()=>{_();yi=class{constructor(i){this.waMonitor=i;this.logger=new A("ProxyService")}create(i,e){return this.waMonitor.waInstances[i.instanceName].setProxy(e),{proxy:{...i,proxy:e}}}async find(i){try{let e=await this.waMonitor.waInstances[i.instanceName].findProxy();if(Object.keys(e).length===0)throw new Error("Proxy not found");return e}catch{return null}}}});var wi,Ha=b(()=>{_();wi=class{constructor(i){this.waMonitor=i;this.logger=new A("SettingsService")}async create(i,e){return await this.waMonitor.waInstances[i.instanceName].setSettings(e),{settings:{...i,settings:e}}}async find(i){try{let e=await this.waMonitor.waInstances[i.instanceName].findSettings();if(Object.keys(e).length===0)throw new Error("Settings not found");return e}catch{return null}}}});import Va from"axios";var bi,Ga=b(()=>{_();bi=class{constructor(i,e,t){this.waMonitor=i;this.prismaRepository=e;this.configService=t;this.logger=new A("TemplateService")}async find(i){let e=await this.waMonitor.waInstances[i.instanceName].instance;if(!e)throw new Error("Instance not found");this.businessId=e.businessId,this.token=e.token;let t=await this.requestTemplate({},"GET");if(!t)throw new Error("Error to create template");return t.data}async create(i,e){try{let t=await this.waMonitor.waInstances[i.instanceName].instance;if(!t)throw new Error("Instance not found");this.businessId=t.businessId,this.token=t.token;let s={name:e.name,category:e.category,allow_category_change:e.allowCategoryChange,language:e.language,components:e.components},o=await this.requestTemplate(s,"POST");if(!o||o.error)throw new Error("Error to create template");return await this.prismaRepository.template.create({data:{templateId:o.id,name:e.name,template:o,webhookUrl:e.webhookUrl,instanceId:t.id}})}catch(t){throw this.logger.error(t),new Error("Error to create template")}}async requestTemplate(i,e){try{let t=this.configService.get("WA_BUSINESS").URL,s=this.configService.get("WA_BUSINESS").VERSION;t=`${t}/${s}/${this.businessId}/message_templates`;let o={"Content-Type":"application/json",Authorization:`Bearer ${this.token}`};if(e==="GET")return(await Va.get(t,{headers:o})).data;if(e==="POST")return(await Va.post(t,i,{headers:o})).data}catch(t){return this.logger.error(t.response.data),t.response.data.error}}}});var Id,Si,Ei,ja,Mo,J,B,Md,To,Td,Co,Cd,Ii,Ka,Mi,Ya,vo,$e,we,Qa,te,ue,Ao,se,Je,as,za,Xa,Fe,vd,ye,Ad,le,Rd,be,Pd,Se,Dd,Ee,F=b(()=>{es();Z();ur();_();dr();gr();mr();Pr();Dr();Or();Nr();kr();_r();Ys();ha();fa();ya();pt();Ma();ys();Ta();so();Ca();va();Aa();Ra();Pa();no();Da();oo();Fa();Ua();Ja();$n();zt();Ws();$a();qa();Ha();Ga();Id=new A("WA MODULE"),Si=null;C.get("CHATWOOT").ENABLED&&(Si=new Be(new Ne(C,_e.name).getEngine()));Ei=new Be(new Ne(C,"instance").getEngine()),ja=new Be(new Ne(C,"baileys").getEngine()),Mo=null;C.get("PROVIDER").ENABLED&&(Mo=new ut(C));J=new dt(C),B=new fi(Hn,C,J,Mo,Ei,Si,ja),Md=new hi(J),To=new mi(Md),Td=new bi(B,J,C),Co=new ms(Td),Cd=new yi(B),Ii=new ls(Cd,B),Ka=new _e(B,C,J,Si),Mi=new Zs(Ka,C,J),Ya=new wi(B),vo=new gs(Ya),$e=new rs(B,C,J,Hn,Ka,Ya,Ii,Ei,Si,ja,Mo),we=new ds(B),Qa=new ts(B),te=new ss(B),ue=new is(B),Ao=new cs(B),se=new gi(J,B),Je=new fe(J,B),as=new ze(J,B),za=new Qs(J,B),Xa=new zs(J,B),Fe=new Xs(B),vd=new ft(B,C,J),ye=new ri(vd,J,B),Ad=new ht(B,C,J),le=new oi(Ad,J,B),Rd=new mt(B,C,J),be=new ei(Rd,J,B),Pd=new si(B,C,J),Se=new ti(Pd,J,B),Dd=new ni(B,C,J),Ee=new ii(Dd,J,B);Id.info("Module - ON")});async function Od(p,i,e){let t=C.get("AUTHENTICATION").API_KEY,s=p.get("apikey"),o=C.get("DATABASE");if(!s)throw new et;if(t.KEY===s)return e();if((p.originalUrl.includes("/instance/create")||p.originalUrl.includes("/instance/fetchInstances"))&&!s)throw new gt("Missing global api key","The global api key must be set");let n=p.params;try{if(n?.instanceName){if((await J.instance.findUnique({where:{name:n.instanceName}})).token===s)return e()}else if(p.originalUrl.includes("/instance/fetchInstances")&&o.SAVE_DATA.INSTANCE&&await J.instance.findFirst({where:{token:s}}))return e()}catch(r){xd.error(r)}throw new et}var xd,Ro,Za=b(()=>{F();Z();_();ne();xd=new A("GUARD");Ro={apikey:Od}});async function ec(p){try{let i=C.get("CACHE"),e=!!B.waInstances[p];if(i.REDIS.ENABLED&&i.REDIS.SAVE_INSTANCES){let t=await Ei.has(p);return e||t}return e||(await J.instance.findMany({where:{name:p}})).length>0}catch(i){throw new U(i?.toString())}}async function tc(p,i,e){if(p.originalUrl.includes("/instance/create")||p.originalUrl.includes("/instance/fetchInstances"))return e();let t=p.params;if(!t?.instanceName)throw new f('"instanceName" not provided.');if(!await ec(t.instanceName))throw new H(`The "${t.instanceName}" instance does not exist`);e()}async function sc(p,i,e){if(p.originalUrl.includes("/instance/create")){let t=p.body;if(await ec(t.instanceName))throw new gt(`This name "${t.instanceName}" is already in use.`);B.waInstances[t.instanceName]&&delete B.waInstances[t.instanceName]}e()}var ic=b(()=>{F();Z();ne()});var Po,nc,oc=b(()=>{je();Po=class{collectTelemetry(i,e,t){V(i.path),t()}},nc=Po});import"express-async-errors";import{validate as Nt}from"jsonschema";var kt,x,z=b(()=>{_();ne();kt=new A("Validate"),x=class{constructor(){}routerPath(i,e=!0){let t="/"+i;return e&&(t+="/:instanceName"),t}async dataValidate(i){let{request:e,schema:t,ClassRef:s,execute:o}=i,n=new s,r=e.body,a=e.params;e?.query&&Object.keys(e.query).length>0&&Object.assign(a,e.query),e.originalUrl.includes("/instance/create")&&Object.assign(a,r),Object.assign(n,r);let c=t?Nt(n,t):{valid:!0,errors:[]};if(!c.valid){let l=c.errors.map(({stack:d,schema:u})=>{let g;return u.description?g=u.description:g=d.replace("instance.",""),g});throw kt.error(l),new f(l)}return await o(a,n)}async groupNoValidate(i){let{request:e,ClassRef:t,schema:s,execute:o}=i,n=e.params,r=new t;Object.assign(r,e.body);let a=Nt(r,s);if(!a.valid){let c=a.errors.map(({property:l,stack:d,schema:u})=>{let g;return u.description?g=u.description:g=d.replace("instance.",""),{property:l.replace("instance.",""),message:g}});throw kt.error([...c]),new f(...c)}return await o(n,r)}async groupValidate(i){let{request:e,ClassRef:t,schema:s,execute:o}=i,n=e.params,r=e.body,a=r?.groupJid;if(!a)if(e.query?.groupJid)a=e.query.groupJid;else throw new f("The group id needs to be informed in the query",'ex: "groupJid=120362@g.us"');a.endsWith("@g.us")||(a=a+"@g.us"),Object.assign(r,{groupJid:a});let c=new t;Object.assign(c,r);let l=Nt(c,s);if(!l.valid){let d=l.errors.map(({property:u,stack:g,schema:m})=>{let h;return m.description?h=m.description:h=g.replace("instance.",""),{property:u.replace("instance.",""),message:h}});throw kt.error([...d]),new f(...d)}return await o(n,c)}async inviteCodeValidate(i){let{request:e,ClassRef:t,schema:s,execute:o}=i,n=e.query;if(!n?.inviteCode)throw new f("The group invite code id needs to be informed in the query",'ex: "inviteCode=F1EX5QZxO181L3TMVP31gY" (Obtained from group join link)');let r=e.params,a=e.body,c=new t;Object.assign(a,n),Object.assign(c,a);let l=Nt(c,s);if(!l.valid){let d=l.errors.map(({property:u,stack:g,schema:m})=>{let h;return m.description?h=m.description:h=g.replace("instance.",""),{property:u.replace("instance.",""),message:h}});throw kt.error([...d]),new f(...d)}return await o(r,c)}async getParticipantsValidate(i){let{request:e,ClassRef:t,schema:s,execute:o}=i,n=e.query;if(!n?.getParticipants)throw new f("The getParticipants needs to be informed in the query");let r=e.params,a=e.body,c=new t;Object.assign(a,n),Object.assign(c,a);let l=Nt(c,s);if(!l.valid){let d=l.errors.map(({property:u,stack:g,schema:m})=>{let h;return m.description?h=m.description:h=g.replace("instance.",""),{property:u.replace("instance.",""),message:h}});throw kt.error([...d]),new f(...d)}return await o(r,c)}}});import{Router as Nd}from"express";var Ti,rc=b(()=>{z();F();Ti=class extends x{constructor(e){super();this.configService=e;this.router=Nd();this.router.post(this.routerPath("webhook/evolution",!1),async(t,s)=>{let{body:o}=t,n=await za.receiveWebhook(o);return s.status(200).json(n)})}}});import{Router as kd}from"express";var Ci,ac=b(()=>{z();F();Ci=class extends x{constructor(e){super();this.configService=e;this.router=kd();this.router.get(this.routerPath("webhook/meta",!1),async(t,s)=>{t.query["hub.verify_token"]===e.get("WA_BUSINESS").TOKEN_WEBHOOK?s.send(t.query["hub.challenge"]):s.send("Error, wrong validation token")}).post(this.routerPath("webhook/meta",!1),async(t,s)=>{let{body:o}=t,n=await Xa.receiveWebhook(o);return s.status(200).json(n)})}}});function cc(p){return class extends p{}}var vi,Do=b(()=>{vi=class{}});function pc(p){return class extends p{}}var Ce,lt=b(()=>{Ce=class{}});var Ai,lc=b(()=>{Do();lt();Ai=class extends pc(cc(class{})){}});var R,Ri,ae=b(()=>{lc();R=class extends Ai{},Ri=class{}});var _d,P,uc,_t=b(()=>{ge();ee();_d=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},P={$id:T(),type:"object",properties:{instanceName:{type:"string"},token:{type:"string"},number:{type:"string",pattern:"^\\d+[\\.@\\w-]+"},businessId:{type:"string"},qrcode:{type:"boolean"},Integration:{type:"string",enum:Object.values(N)},rejectCall:{type:"boolean"},msgCall:{type:"string"},groupsIgnore:{type:"boolean"},alwaysOnline:{type:"boolean"},readMessages:{type:"boolean"},readStatus:{type:"boolean"},syncFullHistory:{type:"boolean"},wavoipToken:{type:"string"},proxyHost:{type:"string"},proxyPort:{type:"string"},proxyProtocol:{type:"string"},proxyUsername:{type:"string"},proxyPassword:{type:"string"},webhookUrl:{type:"string"},webhookByEvents:{type:"boolean"},webhookBase64:{type:"boolean"},webhookEvents:{type:"array",minItems:0,items:{type:"string",enum:["APPLICATION_STARTUP","QRCODE_UPDATED","MESSAGES_SET","MESSAGES_UPSERT","MESSAGES_EDITED","MESSAGES_UPDATE","MESSAGES_DELETE","SEND_MESSAGE","CONTACTS_SET","CONTACTS_UPSERT","CONTACTS_UPDATE","PRESENCE_UPDATE","CHATS_SET","CHATS_UPSERT","CHATS_UPDATE","CHATS_DELETE","GROUPS_UPSERT","GROUP_UPDATE","GROUP_PARTICIPANTS_UPDATE","CONNECTION_UPDATE","LABELS_EDIT","LABELS_ASSOCIATION","CALL","TYPEBOT_START","TYPEBOT_CHANGE_STATUS"]}},rabbitmqEnabled:{type:"boolean"},rabbitmqEvents:{type:"array",minItems:0,items:{type:"string",enum:["APPLICATION_STARTUP","QRCODE_UPDATED","MESSAGES_SET","MESSAGES_UPSERT","MESSAGES_EDITED","MESSAGES_UPDATE","MESSAGES_DELETE","SEND_MESSAGE","CONTACTS_SET","CONTACTS_UPSERT","CONTACTS_UPDATE","PRESENCE_UPDATE","CHATS_SET","CHATS_UPSERT","CHATS_UPDATE","CHATS_DELETE","GROUPS_UPSERT","GROUP_UPDATE","GROUP_PARTICIPANTS_UPDATE","CONNECTION_UPDATE","LABELS_EDIT","LABELS_ASSOCIATION","CALL","TYPEBOT_START","TYPEBOT_CHANGE_STATUS"]}},sqsEnabled:{type:"boolean"},sqsEvents:{type:"array",minItems:0,items:{type:"string",enum:["APPLICATION_STARTUP","QRCODE_UPDATED","MESSAGES_SET","MESSAGES_UPSERT","MESSAGES_EDITED","MESSAGES_UPDATE","MESSAGES_DELETE","SEND_MESSAGE","CONTACTS_SET","CONTACTS_UPSERT","CONTACTS_UPDATE","PRESENCE_UPDATE","CHATS_SET","CHATS_UPSERT","CHATS_UPDATE","CHATS_DELETE","GROUPS_UPSERT","GROUP_UPDATE","GROUP_PARTICIPANTS_UPDATE","CONNECTION_UPDATE","LABELS_EDIT","LABELS_ASSOCIATION","CALL","TYPEBOT_START","TYPEBOT_CHANGE_STATUS"]}},chatwootAccountId:{type:"string"},chatwootToken:{type:"string"},chatwootUrl:{type:"string"},chatwootSignMsg:{type:"boolean"},chatwootReopenConversation:{type:"boolean"},chatwootConversationPending:{type:"boolean"},chatwootImportContacts:{type:"boolean"},chatwootNameInbox:{type:"string"},chatwootMergeBrazilContacts:{type:"boolean"},chatwootImportMessages:{type:"boolean"},chatwootDaysLimitImportMessages:{type:"number"}},..._d("instanceName")},uc={$id:T(),type:"object",properties:{presence:{type:"string",enum:["unavailable","available","composing","recording","paused"]}},required:["presence"]}});import{Router as Bd}from"express";var Pi,dc=b(()=>{z();ae();j();F();_t();Pi=class extends x{constructor(...e){super();this.router=Bd();this.router.post(this.routerPath("onWhatsapp"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>Fe.onWhatsapp(n,t.body)});s.status(200).json(o)}).post(this.routerPath("profilePictureUrl"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>Fe.profilePictureUrl(n,t.body)});s.status(200).json(o)}).post(this.routerPath("assertSessions"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>Fe.assertSessions(n,t.body)});s.status(200).json(o)}).post(this.routerPath("createParticipantNodes"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>Fe.createParticipantNodes(n,t.body)});s.status(200).json(o)}).post(this.routerPath("getUSyncDevices"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>Fe.getUSyncDevices(n,t.body)});s.status(200).json(o)}).post(this.routerPath("generateMessageTag"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>Fe.generateMessageTag(n)});s.status(200).json(o)}).post(this.routerPath("sendNode"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>Fe.sendNode(n,t.body)});s.status(200).json(o)}).post(this.routerPath("signalRepositoryDecryptMessage"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>Fe.signalRepositoryDecryptMessage(n,t.body)});s.status(200).json(o)}).post(this.routerPath("getAuthState"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>Fe.getAuthState(n)});s.status(200).json(o)})}}});import{Router as Ld}from"express";var Di,gc=b(()=>{rc();ac();dc();Di=class{constructor(i,...e){this.router=Ld(),this.router.use("/",new Ti(i).router),this.router.use("/",new Ci(i).router),this.router.use("/baileys",new Pi(...e).router)}}});var me,Fd,mc,hc,fc,yc,wc,Bt,bc,Sc,Ec,xo,Ic,Mc,Tc,Cc,vc,Ac,Rc=b(()=>{ee();me=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Fd={type:"string",description:"Invalid format"},mc={$id:T(),type:"object",properties:{numbers:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",description:'"numbers" must be an array of numeric strings'}}}},hc={$id:T(),type:"object",properties:{readMessages:{type:"array",minItems:1,uniqueItems:!0,items:{properties:{id:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]},remoteJid:{type:"string"}},required:["id","fromMe","remoteJid"],...me("id","remoteJid")}}},required:["readMessages"]},fc={$id:T(),type:"object",properties:{chat:{type:"string"},lastMessage:{type:"object",properties:{key:{type:"object",properties:{id:{type:"string"},remoteJid:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]}},required:["id","fromMe","remoteJid"],...me("id","remoteJid")},messageTimestamp:{type:"integer",minLength:1}},required:["key"],...me("messageTimestamp")},archive:{type:"boolean",enum:[!0,!1]}},required:["archive"]},yc={$id:T(),type:"object",properties:{chat:{type:"string"},lastMessage:{type:"object",properties:{key:{type:"object",properties:{id:{type:"string"},remoteJid:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]}},required:["id","fromMe","remoteJid"],...me("id","remoteJid")},messageTimestamp:{type:"integer",minLength:1}},required:["key"],...me("messageTimestamp")}},required:["lastMessage"]},wc={$id:T(),type:"object",properties:{id:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]},remoteJid:{type:"string"},participant:{type:"string"}},required:["id","fromMe","remoteJid"],...me("id","remoteJid","participant")},Bt={$id:T(),type:"object",properties:{number:{type:"string"},picture:{type:"string"}}},bc={$id:T(),type:"object",properties:{number:{type:"string"},text:{type:"string"},key:{type:"object",properties:{id:{type:"string"},remoteJid:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]}},required:["id","fromMe","remoteJid"],...me("id","remoteJid")}},...me("number","text","key")},Sc={$id:T(),type:"object",properties:{number:{...Fd},delay:{type:"number"},presence:{type:"string",enum:["unavailable","available","composing","recording","paused"]}},required:["number","presence","delay"]},Ec={$id:T(),type:"object",properties:{number:{type:"string"},status:{type:"string",enum:["block","unblock"]}},required:["number","status"],...me("number","status")},xo={$id:T(),type:"object",properties:{where:{type:"object",properties:{_id:{type:"string",minLength:1},pushName:{type:"string",minLength:1},id:{type:"string",minLength:1}},...me("_id","id","pushName")}}},Ic={$id:T(),type:"object",properties:{where:{type:"object",properties:{_id:{type:"string",minLength:1},key:{type:"object",if:{propertyNames:{enum:["fromMe","remoteJid","id"]}},then:{properties:{remoteJid:{type:"string",minLength:1,description:"The property cannot be empty"},id:{type:"string",minLength:1,description:"The property cannot be empty"},fromMe:{type:"boolean",enum:[!0,!1]}}}},message:{type:"object"}},...me("_id")},limit:{type:"integer"}}},Mc={$id:T(),type:"object",properties:{where:{type:"object",properties:{_id:{type:"string"},remoteJid:{type:"string"},id:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]},participant:{type:"string"},status:{type:"string",enum:["ERROR","PENDING","SERVER_ACK","DELIVERY_ACK","READ","PLAYED"]}},...me("_id","remoteJid","id","status")},limit:{type:"integer"}}},Tc={$id:T(),type:"object",properties:{readreceipts:{type:"string",enum:["all","none"]},profile:{type:"string",enum:["all","contacts","contact_blacklist","none"]},status:{type:"string",enum:["all","contacts","contact_blacklist","none"]},online:{type:"string",enum:["all","match_last_seen"]},last:{type:"string",enum:["all","contacts","contact_blacklist","none"]},groupadd:{type:"string",enum:["all","contacts","contact_blacklist","none"]}},required:["readreceipts","profile","status","online","last","groupadd"],...me("readreceipts","profile","status","online","last","groupadd")},Cc={$id:T(),type:"object",properties:{name:{type:"string"}},...me("name")},vc={$id:T(),type:"object",properties:{status:{type:"string"}},...me("status")},Ac={type:"object",properties:{wuid:{type:"string"},name:{type:"string"},picture:{type:"string"},status:{type:"string"},isBusiness:{type:"boolean"}}}});var ve,Pc,Lt,Dc,xc,Oc,Nc,kc,_c,Bc,Lc,Fc,Uc,Jc=b(()=>{ee();ve=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Pc={$id:T(),type:"object",properties:{subject:{type:"string"},description:{type:"string"},profilePicture:{type:"string"},promoteParticipants:{type:"boolean",enum:[!0,!1]},participants:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",minLength:10,pattern:"\\d+",description:'"participants" must be an array of numeric strings'}}},required:["subject","participants"],...ve("subject","description","profilePicture")},Lt={$id:T(),type:"object",properties:{groupJid:{type:"string",pattern:"^[\\d-]+@g.us$"}},required:["groupJid"],...ve("groupJid")},Dc={$id:T(),type:"object",properties:{getParticipants:{type:"string",enum:["true","false"]}},required:["getParticipants"],...ve("getParticipants")},xc={$id:T(),type:"object",properties:{groupJid:{type:"string"},description:{type:"string"},numbers:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",minLength:10,pattern:"\\d+",description:'"numbers" must be an array of numeric strings'}}},required:["groupJid","description","numbers"],...ve("groupJid","description","numbers")},Oc={$id:T(),type:"object",properties:{inviteCode:{type:"string",pattern:"^[a-zA-Z0-9]{22}$"}},required:["inviteCode"],...ve("inviteCode")},Nc={$id:T(),type:"object",properties:{inviteCode:{type:"string",pattern:"^[a-zA-Z0-9]{22}$"}},required:["inviteCode"],...ve("inviteCode")},kc={$id:T(),type:"object",properties:{groupJid:{type:"string"},action:{type:"string",enum:["add","remove","promote","demote"]},participants:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",minLength:10,pattern:"\\d+",description:'"participants" must be an array of numeric strings'}}},required:["groupJid","action","participants"],...ve("groupJid","action")},_c={$id:T(),type:"object",properties:{groupJid:{type:"string"},action:{type:"string",enum:["announcement","not_announcement","locked","unlocked"]}},required:["groupJid","action"],...ve("groupJid","action")},Bc={$id:T(),type:"object",properties:{groupJid:{type:"string"},expiration:{type:"number",enum:[0,86400,604800,7776e3]}},required:["groupJid","expiration"],...ve("groupJid","expiration")},Lc={$id:T(),type:"object",properties:{groupJid:{type:"string"},image:{type:"string"}},required:["groupJid","image"],...ve("groupJid","image")},Fc={$id:T(),type:"object",properties:{groupJid:{type:"string"},subject:{type:"string"}},required:["groupJid","subject"],...ve("groupJid","subject")},Uc={$id:T(),type:"object",properties:{groupJid:{type:"string"},description:{type:"string"}},required:["groupJid","description"],...ve("groupJid","description")}});var Ud,Jd,Wc,$c=b(()=>{ee();Ud=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Jd={type:"string",description:"Invalid format"},Wc={$id:T(),type:"object",properties:{number:{...Jd},labelId:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["number","labelId","action"],...Ud("number","labelId","action")}});var bt,Ae,qc,qe,Hc,Vc,Gc,jc,Kc,Yc,Qc,zc,Xc,Zc,ep,tp,sp,ip=b(()=>{ee();bt=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Ae={type:"string",description:"Invalid format"},qc={$id:T(),type:"object",properties:{number:{...Ae},name:{type:"string"},language:{type:"string"},components:{type:"array"},webhookUrl:{type:"string"}},required:["name","language"]},qe={properties:{key:{type:"object",properties:{id:{type:"string"},remoteJid:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]}},required:["id"],...bt("id")},message:{type:"object"}}},Hc={$id:T(),type:"object",properties:{number:{...Ae},isVideo:{type:"boolean",enum:[!0,!1]},callDuration:{type:"integer",minimum:1,maximum:15}},required:["number","callDuration"]},Vc={$id:T(),type:"object",properties:{number:{...Ae},text:{type:"string"},linkPreview:{type:"boolean"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{...qe},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number","text"]},Gc={$id:T(),type:"object",properties:{number:{...Ae},mediatype:{type:"string",enum:["image","document","video","audio"]},mimetype:{type:"string"},media:{type:"string"},fileName:{type:"string"},caption:{type:"string"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{...qe},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number","mediatype"]},jc={$id:T(),type:"object",properties:{number:{...Ae},video:{type:"string"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{...qe},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number"]},Kc={$id:T(),type:"object",properties:{number:{...Ae},audio:{type:"string"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{...qe},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number"]},Yc={$id:T(),type:"object",properties:{type:{type:"string",enum:["text","image","audio","video"]},content:{type:"string"},caption:{type:"string"},backgroundColor:{type:"string"},font:{type:"integer",minimum:0,maximum:5},statusJidList:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"statusJidList" must be an array of numeric strings'}},allContacts:{type:"boolean",enum:[!0,!1]}},required:["type"]},Qc={$id:T(),type:"object",properties:{number:{...Ae},sticker:{type:"string"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{...qe},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number"]},zc={$id:T(),type:"object",properties:{number:{...Ae},latitude:{type:"number"},longitude:{type:"number"},name:{type:"string"},address:{type:"string"},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{...qe},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number","latitude","longitude","name","address"]},Xc={$id:T(),type:"object",properties:{number:{...Ae},contact:{type:"array",items:{type:"object",properties:{fullName:{type:"string"},wuid:{type:"string",minLength:10,pattern:"\\d+",description:'"wuid" must be a numeric string'},phoneNumber:{type:"string",minLength:10},organization:{type:"string"},email:{type:"string"},url:{type:"string"}},required:["fullName","phoneNumber"],...bt("fullName")},minItems:1,uniqueItems:!0}},required:["number","contact"]},Zc={$id:T(),type:"object",properties:{key:{type:"object",properties:{id:{type:"string"},remoteJid:{type:"string"},fromMe:{type:"boolean",enum:[!0,!1]}},required:["id","remoteJid","fromMe"],...bt("id","remoteJid")},reaction:{type:"string"}},required:["key","reaction"]},ep={$id:T(),type:"object",properties:{number:{...Ae},name:{type:"string"},selectableCount:{type:"integer",minimum:0,maximum:10},values:{type:"array",minItems:2,maxItems:10,uniqueItems:!0,items:{type:"string"}},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{...qe},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number","name","selectableCount","values"]},tp={$id:T(),type:"object",properties:{number:{...Ae},title:{type:"string"},description:{type:"string"},footerText:{type:"string"},buttonText:{type:"string"},sections:{type:"array",minItems:1,uniqueItems:!0,items:{type:"object",properties:{title:{type:"string"},rows:{type:"array",minItems:1,uniqueItems:!0,items:{type:"object",properties:{title:{type:"string"},description:{type:"string"},rowId:{type:"string"}},required:["title","rowId"],...bt("title","description","rowId")}}},required:["title","rows"],...bt("title")}},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{...qe},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number","title","footerText","buttonText","sections"]},sp={$id:T(),type:"object",properties:{number:{...Ae},thumbnailUrl:{type:"string"},title:{type:"string"},description:{type:"string"},footer:{type:"string"},buttons:{type:"array",items:{type:"object",properties:{type:{type:"string",enum:["reply","copy","url","call","pix"]},displayText:{type:"string"},id:{type:"string"},url:{type:"string"},phoneNumber:{type:"string"},currency:{type:"string"},name:{type:"string"},keyType:{type:"string",enum:["phone","email","cpf","cnpj","random"]},key:{type:"string"}},required:["type"],...bt("id","url","phoneNumber")}},delay:{type:"integer",description:"Enter a value in milliseconds"},quoted:{...qe},everyOne:{type:"boolean",enum:[!0,!1]},mentioned:{type:"array",minItems:1,uniqueItems:!0,items:{type:"string",pattern:"^\\d+",description:'"mentioned" must be an array of numeric strings'}}},required:["number"]}});var Wd,np,op=b(()=>{ee();Wd=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},np={$id:T(),type:"object",properties:{enabled:{type:"boolean",enum:[!0,!1]},host:{type:"string"},port:{type:"string"},protocol:{type:"string"},username:{type:"string"},password:{type:"string"}},required:["enabled","host","port","protocol"],...Wd("enabled","host","port","protocol")}});var $d,rp,ap=b(()=>{ee();$d=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},rp={$id:T(),type:"object",properties:{rejectCall:{type:"boolean"},msgCall:{type:"string"},groupsIgnore:{type:"boolean"},alwaysOnline:{type:"boolean"},readMessages:{type:"boolean"},readStatus:{type:"boolean"},syncFullHistory:{type:"boolean"},wavoipToken:{type:"string"}},required:["rejectCall","groupsIgnore","alwaysOnline","readMessages","readStatus","syncFullHistory"],...$d("rejectCall","groupsIgnore","alwaysOnline","readMessages","readStatus","syncFullHistory")}});var qd,cp,pp=b(()=>{ee();qd=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},cp={$id:T(),type:"object",properties:{name:{type:"string"},category:{type:"string",enum:["AUTHENTICATION","MARKETING","UTILITY"]},allowCategoryChange:{type:"boolean"},language:{type:"string"},components:{type:"array"},webhookUrl:{type:"string"}},required:["name","category","language","components"],...qd("name","category","language","components")}});var Hd,lp,up=b(()=>{ee();Hd=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},lp={$id:T(),type:"object",properties:{enabled:{type:"boolean",enum:[!0,!1]},accountId:{type:"string"},token:{type:"string"},url:{type:"string"},signMsg:{type:"boolean",enum:[!0,!1]},signDelimiter:{type:["string","null"]},nameInbox:{type:["string","null"]},reopenConversation:{type:"boolean",enum:[!0,!1]},conversationPending:{type:"boolean",enum:[!0,!1]},autoCreate:{type:"boolean",enum:[!0,!1]},importContacts:{type:"boolean",enum:[!0,!1]},mergeBrazilContacts:{type:"boolean",enum:[!0,!1]},importMessages:{type:"boolean",enum:[!0,!1]},daysLimitImportMessages:{type:"number"},ignoreJids:{type:"array",items:{type:"string"}}},required:["enabled","accountId","token","url","signMsg","reopenConversation","conversationPending"],...Hd("enabled","accountId","token","url","signMsg","reopenConversation","conversationPending")}});var xi,Oo,dp,gp,mp,hp=b(()=>{ee();xi=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Oo={$id:T(),type:"object",properties:{enabled:{type:"boolean"},description:{type:"string"},botType:{type:"string",enum:["chatBot","textGenerator","agent","workflow"]},apiUrl:{type:"string"},apiKey:{type:"string"},triggerType:{type:"string",enum:["all","keyword","none","advanced"]},triggerOperator:{type:"string",enum:["equals","contains","startsWith","endsWith","regex"]},triggerValue:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}},splitMessages:{type:"boolean"},timePerChar:{type:"integer"}},required:["enabled","botType","triggerType"],...xi("enabled","botType","triggerType")},dp={$id:T(),type:"object",properties:{remoteJid:{type:"string"},status:{type:"string",enum:["opened","closed","paused","delete"]}},required:["remoteJid","status"],...xi("remoteJid","status")},gp={$id:T(),type:"object",properties:{expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}},difyIdFallback:{type:"string"},splitMessages:{type:"boolean"},timePerChar:{type:"integer"}},required:["expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids","splitMessages","timePerChar"],...xi("expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids","splitMessages","timePerChar")},mp={$id:T(),type:"object",properties:{remoteJid:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["remoteJid","action"],...xi("remoteJid","action")}});var Oi,No,fp,yp,wp,ko=b(()=>{ee();Oi=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},No={$id:T(),type:"object",properties:{enabled:{type:"boolean"},description:{type:"string"},apiUrl:{type:"string"},apiKey:{type:"string"},triggerType:{type:"string",enum:["all","keyword","none","advanced"]},triggerOperator:{type:"string",enum:["equals","contains","startsWith","endsWith","regex"]},triggerValue:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}},splitMessages:{type:"boolean"},timePerChar:{type:"integer"}},required:["enabled","apiUrl","triggerType"],...Oi("enabled","apiUrl","triggerType")},fp={$id:T(),type:"object",properties:{remoteJid:{type:"string"},status:{type:"string",enum:["opened","closed","paused","delete"]}},required:["remoteJid","status"],...Oi("remoteJid","status")},yp={$id:T(),type:"object",properties:{expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}},botIdFallback:{type:"string"},splitMessages:{type:"boolean"},timePerChar:{type:"integer"}},required:["expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids","splitMessages","timePerChar"],...Oi("expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids","splitMessages","timePerChar")},wp={$id:T(),type:"object",properties:{remoteJid:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["remoteJid","action"],...Oi("remoteJid","action")}});var Ni,_o,bp,Sp,Ep,Bo=b(()=>{ee();Ni=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},_o={$id:T(),type:"object",properties:{enabled:{type:"boolean"},description:{type:"string"},apiUrl:{type:"string"},apiKey:{type:"string"},triggerType:{type:"string",enum:["all","keyword","none","advanced"]},triggerOperator:{type:"string",enum:["equals","contains","startsWith","endsWith","regex"]},triggerValue:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}}},required:["enabled","apiUrl","triggerType"],...Ni("enabled","apiUrl","triggerType")},bp={$id:T(),type:"object",properties:{remoteJid:{type:"string"},status:{type:"string",enum:["opened","closed","paused","delete"]}},required:["remoteJid","status"],...Ni("remoteJid","status")},Sp={$id:T(),type:"object",properties:{expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}},botIdFallback:{type:"string"}},required:["expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids"],...Ni("expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids")},Ep={$id:T(),type:"object",properties:{remoteJid:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["remoteJid","action"],...Ni("remoteJid","action")}});var Ft,Lo,Ip,Mp,Tp,Cp,vp=b(()=>{ee();Ft=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Lo={$id:T(),type:"object",properties:{enabled:{type:"boolean"},description:{type:"string"},openaiCredsId:{type:"string"},botType:{type:"string",enum:["assistant","chatCompletion"]},assistantId:{type:"string"},functionUrl:{type:"string"},model:{type:"string"},systemMessages:{type:"array",items:{type:"string"}},assistantMessages:{type:"array",items:{type:"string"}},userMessages:{type:"array",items:{type:"string"}},maxTokens:{type:"integer"},triggerType:{type:"string",enum:["all","keyword","none","advanced"]},triggerOperator:{type:"string",enum:["equals","contains","startsWith","endsWith","regex"]},triggerValue:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},ignoreJids:{type:"array",items:{type:"string"}}},required:["enabled","openaiCredsId","botType","triggerType"],...Ft("enabled","openaiCredsId","botType","triggerType")},Ip={$id:T(),type:"object",properties:{name:{type:"string"},apiKey:{type:"string"}},required:["name","apiKey"],...Ft("name","apiKey")},Mp={$id:T(),type:"object",properties:{remoteJid:{type:"string"},status:{type:"string",enum:["opened","closed","paused","delete"]}},required:["remoteJid","status"],...Ft("remoteJid","status")},Tp={$id:T(),type:"object",properties:{openaiCredsId:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},speechToText:{type:"boolean"},ignoreJids:{type:"array",items:{type:"string"}},openaiIdFallback:{type:"string"}},required:["openaiCredsId","expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids"],...Ft("openaiCredsId","expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe","keepOpen","debounceTime","ignoreJids")},Cp={$id:T(),type:"object",properties:{remoteJid:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["remoteJid","action"],...Ft("remoteJid","action")}});var Ut,Fo,Ap,Rp,Pp,Dp,xp=b(()=>{ee();Ut=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Fo={$id:T(),type:"object",properties:{enabled:{type:"boolean"},description:{type:"string"},url:{type:"string"},typebot:{type:"string"},triggerType:{type:"string",enum:["all","keyword","none","advanced"]},triggerOperator:{type:"string",enum:["equals","contains","startsWith","endsWith","regex"]},triggerValue:{type:"string"},expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},ignoreJids:{type:"array",items:{type:"string"}}},required:["enabled","url","typebot","triggerType"],...Ut("enabled","url","typebot","triggerType")},Ap={$id:T(),type:"object",properties:{remoteJid:{type:"string"},status:{type:"string",enum:["opened","closed","paused","delete"]}},required:["remoteJid","status"],...Ut("remoteJid","status")},Rp={$id:T(),type:"object",properties:{remoteJid:{type:"string"},url:{type:"string"},typebot:{type:"string"}},required:["remoteJid","url","typebot"],...Ut("remoteJid","url","typebot")},Pp={$id:T(),type:"object",properties:{expire:{type:"integer"},keywordFinish:{type:"string"},delayMessage:{type:"integer"},unknownMessage:{type:"string"},listeningFromMe:{type:"boolean"},stopBotFromMe:{type:"boolean"},keepOpen:{type:"boolean"},debounceTime:{type:"integer"},typebotIdFallback:{type:"string"},ignoreJids:{type:"array",items:{type:"string"}}},required:["expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe"],...Ut("expire","keywordFinish","delayMessage","unknownMessage","listeningFromMe","stopBotFromMe")},Dp={$id:T(),type:"object",properties:{remoteJid:{type:"string"},action:{type:"string",enum:["add","remove"]}},required:["remoteJid","action"],...Ut("remoteJid","action")}});var Op=b(()=>{up();hp();ko();Bo();vp();xp()});var Vd,Np,kp=b(()=>{ee();We();Vd=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},Np={$id:T(),type:"object",properties:{pusher:{type:"object",properties:{enabled:{type:"boolean"},appId:{type:"string"},key:{type:"string"},secret:{type:"string"},cluster:{type:"string"},useTLS:{type:"boolean"},events:{type:"array",minItems:0,items:{type:"string",enum:oe.events}}},required:["enabled","appId","key","secret","cluster","useTLS"],...Vd("enabled","appId","key","secret","cluster","useTLS")}},required:["pusher"]}});var Gd,_p,Bp=b(()=>{ee();We();Gd=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},_p={$id:T(),type:"object",properties:{webhook:{type:"object",properties:{enabled:{type:"boolean"},url:{type:"string"},headers:{type:"object"},byEvents:{type:"boolean"},base64:{type:"boolean"},events:{type:"array",minItems:0,items:{type:"string",enum:oe.events}}},required:["enabled","url"],...Gd("enabled","url")}},required:["webhook"]}});var St,Lp=b(()=>{ee();We();kp();Bp();St={$id:T(),type:"object",properties:{websocket:{$ref:"#/$defs/event"},rabbitmq:{$ref:"#/$defs/event"},sqs:{$ref:"#/$defs/event"}},$defs:{event:{type:"object",properties:{enabled:{type:"boolean",enum:[!0,!1]},events:{type:"array",minItems:0,items:{type:"string",enum:oe.events}}},required:["enabled"]}}}});var re=b(()=>{Rc();Jc();_t();$c();ip();op();ap();pp();Op();Lp()});import{Router as jd}from"express";var ki,Fp=b(()=>{z();ae();Do();j();F();re();ki=class extends x{constructor(...e){super();this.router=jd();this.router.post(this.routerPath("set"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:lp,ClassRef:vi,execute:(n,r)=>Mi.createChatwoot(n,r)});s.status(201).json(o)}).get(this.routerPath("find"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>Mi.findChatwoot(n)});s.status(200).json(o)}).post(this.routerPath("webhook"),async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:(n,r)=>Mi.receiveWebhook(n,r)});s.status(200).json(o)})}}});var Re,Et=b(()=>{Re=class{}});var Jt,_i,Up=b(()=>{Jt=class{},_i=class{}});import{Router as Kd}from"express";var Bi,Jp=b(()=>{z();Et();ae();Up();j();F();re();Bi=class extends x{constructor(...e){super();this.router=Kd();this.router.post(this.routerPath("create"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Oo,ClassRef:Jt,execute:(n,r)=>be.createBot(n,r)});s.status(201).json(o)}).get(this.routerPath("find"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>be.findBot(n)});s.status(200).json(o)}).get(this.routerPath("fetch/:difyId"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>be.fetchBot(n,t.params.difyId)});s.status(200).json(o)}).put(this.routerPath("update/:difyId"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Oo,ClassRef:Jt,execute:(n,r)=>be.updateBot(n,t.params.difyId,r)});s.status(200).json(o)}).delete(this.routerPath("delete/:difyId"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>be.deleteBot(n,t.params.difyId)});s.status(200).json(o)}).post(this.routerPath("settings"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:gp,ClassRef:_i,execute:(n,r)=>be.settings(n,r)});s.status(200).json(o)}).get(this.routerPath("fetchSettings"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>be.fetchSettings(n)});s.status(200).json(o)}).post(this.routerPath("changeStatus"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:dp,ClassRef:R,execute:(n,r)=>be.changeStatus(n,r)});s.status(200).json(o)}).get(this.routerPath("fetchSessions/:difyId"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>be.fetchSessions(n,t.params.difyId)});s.status(200).json(o)}).post(this.routerPath("ignoreJid"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:mp,ClassRef:Re,execute:(n,r)=>be.ignoreJid(n,r)});s.status(200).json(o)})}}});var Li,Wt,Fi,Wp=b(()=>{Li=class{},Wt=class{},Fi=class{}});import{Router as Yd}from"express";var Ui,$p=b(()=>{z();Et();ae();Wp();j();F();re();Ui=class extends x{constructor(...e){super();this.router=Yd();this.router.post(this.routerPath("creds"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Ip,ClassRef:Li,execute:(n,r)=>le.createOpenaiCreds(n,r)});s.status(201).json(o)}).get(this.routerPath("creds"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>le.findOpenaiCreds(n)});s.status(200).json(o)}).delete(this.routerPath("creds/:openaiCredsId"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>le.deleteCreds(n,t.params.openaiCredsId)});s.status(200).json(o)}).post(this.routerPath("create"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Lo,ClassRef:Wt,execute:(n,r)=>le.createBot(n,r)});s.status(201).json(o)}).get(this.routerPath("find"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>le.findBot(n)});s.status(200).json(o)}).get(this.routerPath("fetch/:openaiBotId"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>le.fetchBot(n,t.params.openaiBotId)});s.status(200).json(o)}).put(this.routerPath("update/:openaiBotId"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Lo,ClassRef:Wt,execute:(n,r)=>le.updateBot(n,t.params.openaiBotId,r)});s.status(200).json(o)}).delete(this.routerPath("delete/:openaiBotId"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>le.deleteBot(n,t.params.openaiBotId)});s.status(200).json(o)}).post(this.routerPath("settings"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Tp,ClassRef:Fi,execute:(n,r)=>le.settings(n,r)});s.status(200).json(o)}).get(this.routerPath("fetchSettings"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>le.fetchSettings(n)});s.status(200).json(o)}).post(this.routerPath("changeStatus"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Mp,ClassRef:R,execute:(n,r)=>le.changeStatus(n,r)});s.status(200).json(o)}).get(this.routerPath("fetchSessions/:openaiBotId"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>le.fetchSessions(n,t.params.openaiBotId)});s.status(200).json(o)}).post(this.routerPath("ignoreJid"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Cp,ClassRef:Re,execute:(n,r)=>le.ignoreJid(n,r)});s.status(200).json(o)}).get(this.routerPath("getModels"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>le.getModels(n)});s.status(200).json(o)})}}});var $t,Ji,qp=b(()=>{$t=class{},Ji=class{}});import{Router as Qd}from"express";var Wi,Hp=b(()=>{z();Et();ae();qp();j();F();re();Wi=class extends x{constructor(...e){super();this.router=Qd();this.router.post(this.routerPath("create"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Fo,ClassRef:$t,execute:(n,r)=>ye.createBot(n,r)});s.status(201).json(o)}).get(this.routerPath("find"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>ye.findBot(n)});s.status(200).json(o)}).get(this.routerPath("fetch/:typebotId"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>ye.fetchBot(n,t.params.typebotId)});s.status(200).json(o)}).put(this.routerPath("update/:typebotId"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Fo,ClassRef:$t,execute:(n,r)=>ye.updateBot(n,t.params.typebotId,r)});s.status(200).json(o)}).delete(this.routerPath("delete/:typebotId"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>ye.deleteBot(n,t.params.typebotId)});s.status(200).json(o)}).post(this.routerPath("settings"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Pp,ClassRef:Ji,execute:(n,r)=>ye.settings(n,r)});s.status(200).json(o)}).get(this.routerPath("fetchSettings"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>ye.fetchSettings(n)});s.status(200).json(o)}).post(this.routerPath("start"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Rp,ClassRef:R,execute:(n,r)=>ye.startBot(n,r)});s.status(200).json(o)}).post(this.routerPath("changeStatus"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Ap,ClassRef:R,execute:(n,r)=>ye.changeStatus(n,r)});s.status(200).json(o)}).get(this.routerPath("fetchSessions/:typebotId"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>ye.fetchSessions(n,t.params.typebotId)});s.status(200).json(o)}).post(this.routerPath("ignoreJid"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Dp,ClassRef:Re,execute:(n,r)=>ye.ignoreJid(n,r)});s.status(200).json(o)})}}});var qt,$i,Vp=b(()=>{qt=class{},$i=class{}});import{Router as zd}from"express";var qi,Gp=b(()=>{z();Et();ae();j();F();_t();Vp();ko();qi=class extends x{constructor(...e){super();this.router=zd();this.router.post(this.routerPath("create"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:No,ClassRef:qt,execute:(n,r)=>Se.createBot(n,r)});s.status(201).json(o)}).get(this.routerPath("find"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>Se.findBot(n)});s.status(200).json(o)}).get(this.routerPath("fetch/:evolutionBotId"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>Se.fetchBot(n,t.params.evolutionBotId)});s.status(200).json(o)}).put(this.routerPath("update/:evolutionBotId"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:No,ClassRef:qt,execute:(n,r)=>Se.updateBot(n,t.params.evolutionBotId,r)});s.status(200).json(o)}).delete(this.routerPath("delete/:evolutionBotId"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>Se.deleteBot(n,t.params.evolutionBotId)});s.status(200).json(o)}).post(this.routerPath("settings"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:yp,ClassRef:$i,execute:(n,r)=>Se.settings(n,r)});s.status(200).json(o)}).get(this.routerPath("fetchSettings"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>Se.fetchSettings(n)});s.status(200).json(o)}).post(this.routerPath("changeStatus"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:fp,ClassRef:R,execute:(n,r)=>Se.changeStatus(n,r)});s.status(200).json(o)}).get(this.routerPath("fetchSessions/:evolutionBotId"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>Se.fetchSessions(n,t.params.evolutionBotId)});s.status(200).json(o)}).post(this.routerPath("ignoreJid"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:wp,ClassRef:Re,execute:(n,r)=>Se.ignoreJid(n,r)});s.status(200).json(o)})}}});var Ht,Hi,jp=b(()=>{Ht=class{},Hi=class{}});import{Router as Xd}from"express";var Vi,Kp=b(()=>{z();Et();ae();j();F();_t();jp();Bo();Vi=class extends x{constructor(...e){super();this.router=Xd();this.router.post(this.routerPath("create"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:_o,ClassRef:Ht,execute:(n,r)=>Ee.createBot(n,r)});s.status(201).json(o)}).get(this.routerPath("find"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>Ee.findBot(n)});s.status(200).json(o)}).get(this.routerPath("fetch/:flowiseId"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>Ee.fetchBot(n,t.params.flowiseId)});s.status(200).json(o)}).put(this.routerPath("update/:flowiseId"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:_o,ClassRef:Ht,execute:(n,r)=>Ee.updateBot(n,t.params.flowiseId,r)});s.status(200).json(o)}).delete(this.routerPath("delete/:flowiseId"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>Ee.deleteBot(n,t.params.flowiseId)});s.status(200).json(o)}).post(this.routerPath("settings"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Sp,ClassRef:Hi,execute:(n,r)=>Ee.settings(n,r)});s.status(200).json(o)}).get(this.routerPath("fetchSettings"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>Ee.fetchSettings(n)});s.status(200).json(o)}).post(this.routerPath("changeStatus"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:bp,ClassRef:R,execute:(n,r)=>Ee.changeStatus(n,r)});s.status(200).json(o)}).get(this.routerPath("fetchSessions/:flowiseId"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>Ee.fetchSessions(n,t.params.flowiseId)});s.status(200).json(o)}).post(this.routerPath("ignoreJid"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Ep,ClassRef:Re,execute:(n,r)=>Ee.ignoreJid(n,r)});s.status(200).json(o)})}}});import{Router as Zd}from"express";var Gi,Yp=b(()=>{Fp();Jp();$p();Hp();Gp();Kp();Gi=class{constructor(...i){this.router=Zd(),this.router.use("/evolutionBot",new qi(...i).router),this.router.use("/chatwoot",new ki(...i).router),this.router.use("/typebot",new Wi(...i).router),this.router.use("/openai",new Ui(...i).router),this.router.use("/dify",new Bi(...i).router),this.router.use("/flowise",new Vi(...i).router)}}});import{Router as eg}from"express";var ji,Qp=b(()=>{z();ae();lt();j();F();re();ji=class extends x{constructor(...e){super();this.router=eg();this.router.post(this.routerPath("set"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Np,ClassRef:Ce,execute:(n,r)=>se.pusher.set(n.instanceName,r)});s.status(201).json(o)}).get(this.routerPath("find"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>se.pusher.get(n.instanceName)});s.status(200).json(o)})}}});import{Router as tg}from"express";var Ki,zp=b(()=>{z();ae();lt();j();F();re();Ki=class extends x{constructor(...e){super();this.router=tg();this.router.post(this.routerPath("set"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:St,ClassRef:Ce,execute:(n,r)=>se.rabbitmq.set(n.instanceName,r)});s.status(201).json(o)}).get(this.routerPath("find"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>se.rabbitmq.get(n.instanceName)});s.status(200).json(o)})}}});import{Router as sg}from"express";var Yi,Xp=b(()=>{z();ae();lt();j();F();re();Yi=class extends x{constructor(...e){super();this.router=sg();this.router.post(this.routerPath("set"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:St,ClassRef:Ce,execute:(n,r)=>se.sqs.set(n.instanceName,r)});s.status(201).json(o)}).get(this.routerPath("find"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>se.sqs.get(n.instanceName)});s.status(200).json(o)})}}});import{Router as ig}from"express";var Qi,Zp=b(()=>{z();ae();lt();j();F();re();Qi=class extends x{constructor(e,...t){super();this.configService=e;this.router=ig();this.router.post(this.routerPath("set"),...t,async(s,o)=>{let n=await this.dataValidate({request:s,schema:_p,ClassRef:Ce,execute:(r,a)=>se.webhook.set(r.instanceName,a)});o.status(201).json(n)}).get(this.routerPath("find"),...t,async(s,o)=>{let n=await this.dataValidate({request:s,schema:P,ClassRef:R,execute:r=>se.webhook.get(r.instanceName)});o.status(200).json(n)})}}});import{Router as ng}from"express";var zi,el=b(()=>{z();ae();lt();j();F();re();zi=class extends x{constructor(...e){super();this.router=ng();this.router.post(this.routerPath("set"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:St,ClassRef:Ce,execute:(n,r)=>se.websocket.set(n.instanceName,r)});s.status(201).json(o)}).get(this.routerPath("find"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>se.websocket.get(n.instanceName)});s.status(200).json(o)})}}});import{Router as og}from"express";var Xi,tl=b(()=>{Qp();zp();Xp();Zp();el();Xi=class{constructor(i,...e){this.router=og(),this.router.use("/webhook",new Qi(i,...e).router),this.router.use("/websocket",new zi(...e).router),this.router.use("/rabbitmq",new Ki(...e).router),this.router.use("/pusher",new ji(...e).router),this.router.use("/sqs",new Yi(...e).router)}}});var Vt,sl=b(()=>{Vt=class{}});var il,nl,ol,rl=b(()=>{ee();il=(...p)=>{let i={};return p.forEach(e=>i[e]={minLength:1,description:`The "${e}" cannot be empty`}),{if:{propertyNames:{enum:[...p]}},then:{properties:i}}},nl={$id:T(),type:"object",properties:{id:{type:"string"},type:{type:"string"},messageId:{type:"integer"}},...il("id","type","messageId")},ol={$id:T(),type:"object",properties:{id:{type:"string",pattern:"\\d+",minLength:1},expiry:{type:"string",pattern:"\\d+",minLength:1}},...il("id"),required:["id"]}});import{Router as rg}from"express";var Zi,al=b(()=>{z();sl();rl();j();F();Zi=class extends x{constructor(...e){super();this.router=rg();this.router.post(this.routerPath("getMedia"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:nl,ClassRef:Vt,execute:(n,r)=>To.getMedia(n,r)});s.status(201).json(o)}).post(this.routerPath("getMediaUrl"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:ol,ClassRef:Vt,execute:(n,r)=>To.getMediaUrl(n,r)});s.status(200).json(o)})}}});import{Router as ag}from"express";var en,cl=b(()=>{al();en=class{constructor(...i){this.router=ag(),this.router.use("/s3",new Zi(...i).router)}}});var Uo,tn,pl=b(()=>{Uo=class{},tn=class extends Uo{}});import{Router as cg}from"express";var sn,ll=b(()=>{z();pl();F();re();j();sn=class extends x{constructor(...e){super();this.router=cg();this.router.post(this.routerPath("offer"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Hc,ClassRef:tn,execute:(n,r)=>Qa.offerCall(n,r)});return s.status(201).json(o)})}}});import{Router as pg}from"express";var nn,ul=b(()=>{z();lo();ae();zt();F();re();j();nn=class extends x{constructor(...e){super();this.router=pg();this.router.post(this.routerPath("whatsappNumbers"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:mc,ClassRef:Ps,execute:(n,r)=>te.whatsappNumber(n,r)});return s.status(200).json(o)}).post(this.routerPath("markMessageAsRead"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:hc,ClassRef:Os,execute:(n,r)=>te.readMessage(n,r)});return s.status(201).json(o)}).post(this.routerPath("archiveChat"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:fc,ClassRef:Ns,execute:(n,r)=>te.archiveChat(n,r)});return s.status(201).json(o)}).post(this.routerPath("markChatUnread"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:yc,ClassRef:ks,execute:(n,r)=>te.markChatUnread(n,r)});return s.status(201).json(o)}).delete(this.routerPath("deleteMessageForEveryone"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:wc,ClassRef:Bs,execute:(n,r)=>te.deleteMessage(n,r)});return s.status(201).json(o)}).post(this.routerPath("fetchProfilePictureUrl"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Bt,ClassRef:At,execute:(n,r)=>te.fetchProfilePicture(n,r)});return s.status(200).json(o)}).post(this.routerPath("getBase64FromMediaMessage"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:null,ClassRef:Rs,execute:(n,r)=>te.getBase64FromMediaMessage(n,r)});return s.status(201).json(o)}).post(this.routerPath("updateMessage"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:bc,ClassRef:Us,execute:(n,r)=>te.updateMessage(n,r)});return s.status(200).json(o)}).post(this.routerPath("sendPresence"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Sc,ClassRef:Fs,execute:(n,r)=>te.sendPresence(n,r)});return s.status(201).json(o)}).post(this.routerPath("updateBlockStatus"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Ec,ClassRef:Js,execute:(n,r)=>te.blockUser(n,r)});return s.status(201).json(o)}).post(this.routerPath("findContacts"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:xo,ClassRef:Ze,execute:(n,r)=>te.fetchContacts(n,r)});return s.status(200).json(o)}).post(this.routerPath("findMessages"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Ic,ClassRef:Ze,execute:(n,r)=>te.fetchMessages(n,r)});return s.status(200).json(o)}).post(this.routerPath("findStatusMessage"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Mc,ClassRef:Ze,execute:(n,r)=>te.fetchStatusMessage(n,r)});return s.status(200).json(o)}).post(this.routerPath("findChats"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:xo,ClassRef:Ze,execute:(n,r)=>te.fetchChats(n,r)});return s.status(200).json(o)}).post(this.routerPath("fetchBusinessProfile"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Bt,ClassRef:wt,execute:(n,r)=>te.fetchBusinessProfile(n,r)});return s.status(200).json(o)}).post(this.routerPath("fetchProfile"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Ac,ClassRef:At,execute:(n,r)=>te.fetchProfile(n,r)});return s.status(200).json(o)}).post(this.routerPath("updateProfileName"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Cc,ClassRef:Ds,execute:(n,r)=>te.updateProfileName(n,r)});return s.status(200).json(o)}).post(this.routerPath("updateProfileStatus"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:vc,ClassRef:xs,execute:(n,r)=>te.updateProfileStatus(n,r)});return s.status(200).json(o)}).post(this.routerPath("updateProfilePicture"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Bt,ClassRef:wt,execute:(n,r)=>te.updateProfilePicture(n,r)});return s.status(200).json(o)}).delete(this.routerPath("removeProfilePicture"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Bt,ClassRef:wt,execute:n=>te.removeProfilePicture(n)});return s.status(200).json(o)}).get(this.routerPath("fetchPrivacySettings"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:null,ClassRef:R,execute:n=>te.fetchPrivacySettings(n)});return s.status(200).json(o)}).post(this.routerPath("updatePrivacySettings"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Tc,ClassRef:_s,execute:(n,r)=>te.updatePrivacySettings(n,r)});return s.status(201).json(o)})}}});var on,rn,an,cn,Oe,pn,ln,un,dn,gn,mn,hn,dl=b(()=>{on=class{},rn=class{},an=class{},cn=class{},Oe=class{},pn=class{},ln=class{},un=class{},dn=class{},gn=class extends Oe{},mn=class extends Oe{},hn=class extends Oe{}});import{Router as lg}from"express";var fn,gl=b(()=>{z();dl();F();re();j();fn=class extends x{constructor(...e){super();this.router=lg();this.router.post(this.routerPath("create"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Pc,ClassRef:on,execute:(n,r)=>ue.createGroup(n,r)});s.status(201).json(o)}).post(this.routerPath("updateGroupSubject"),...e,async(t,s)=>{let o=await this.groupValidate({request:t,schema:Fc,ClassRef:an,execute:(n,r)=>ue.updateGroupSubject(n,r)});s.status(201).json(o)}).post(this.routerPath("updateGroupPicture"),...e,async(t,s)=>{let o=await this.groupValidate({request:t,schema:Lc,ClassRef:rn,execute:(n,r)=>ue.updateGroupPicture(n,r)});s.status(201).json(o)}).post(this.routerPath("updateGroupDescription"),...e,async(t,s)=>{let o=await this.groupValidate({request:t,schema:Uc,ClassRef:cn,execute:(n,r)=>ue.updateGroupDescription(n,r)});s.status(201).json(o)}).get(this.routerPath("findGroupInfos"),...e,async(t,s)=>{let o=await this.groupValidate({request:t,schema:Lt,ClassRef:Oe,execute:(n,r)=>ue.findGroupInfo(n,r)});s.status(200).json(o)}).get(this.routerPath("fetchAllGroups"),...e,async(t,s)=>{let o=await this.getParticipantsValidate({request:t,schema:Dc,ClassRef:pn,execute:(n,r)=>ue.fetchAllGroups(n,r)});s.status(200).json(o)}).get(this.routerPath("participants"),...e,async(t,s)=>{let o=await this.groupValidate({request:t,schema:Lt,ClassRef:Oe,execute:(n,r)=>ue.findParticipants(n,r)});s.status(200).json(o)}).get(this.routerPath("inviteCode"),...e,async(t,s)=>{let o=await this.groupValidate({request:t,schema:Lt,ClassRef:Oe,execute:(n,r)=>ue.inviteCode(n,r)});s.status(200).json(o)}).get(this.routerPath("inviteInfo"),...e,async(t,s)=>{let o=await this.inviteCodeValidate({request:t,schema:Oc,ClassRef:ln,execute:(n,r)=>ue.inviteInfo(n,r)});s.status(200).json(o)}).get(this.routerPath("acceptInviteCode"),...e,async(t,s)=>{let o=await this.inviteCodeValidate({request:t,schema:Nc,ClassRef:un,execute:(n,r)=>ue.acceptInviteCode(n,r)});s.status(200).json(o)}).post(this.routerPath("sendInvite"),...e,async(t,s)=>{let o=await this.groupNoValidate({request:t,schema:xc,ClassRef:dn,execute:(n,r)=>ue.sendInvite(n,r)});s.status(200).json(o)}).post(this.routerPath("revokeInviteCode"),...e,async(t,s)=>{let o=await this.groupValidate({request:t,schema:Lt,ClassRef:Oe,execute:(n,r)=>ue.revokeInviteCode(n,r)});s.status(201).json(o)}).post(this.routerPath("updateParticipant"),...e,async(t,s)=>{let o=await this.groupValidate({request:t,schema:kc,ClassRef:gn,execute:(n,r)=>ue.updateGParticipate(n,r)});s.status(201).json(o)}).post(this.routerPath("updateSetting"),...e,async(t,s)=>{let o=await this.groupValidate({request:t,schema:_c,ClassRef:mn,execute:(n,r)=>ue.updateGSetting(n,r)});s.status(201).json(o)}).post(this.routerPath("toggleEphemeral"),...e,async(t,s)=>{let o=await this.groupValidate({request:t,schema:Bc,ClassRef:hn,execute:(n,r)=>ue.toggleEphemeral(n,r)});s.status(201).json(o)}).delete(this.routerPath("leaveGroup"),...e,async(t,s)=>{let o=await this.groupValidate({request:t,schema:{},ClassRef:Oe,execute:(n,r)=>ue.leaveGroup(n,r)});s.status(200).json(o)})}}});import{Router as ug}from"express";var yn,ml=b(()=>{z();ae();F();re();j();yn=class extends x{constructor(e,...t){super();this.configService=e;this.router=ug();this.router.post("/create",...t,async(s,o)=>{console.log("create instance",s.body);let n=await this.dataValidate({request:s,schema:P,ClassRef:R,execute:r=>$e.createInstance(r)});return o.status(201).json(n)}).post(this.routerPath("restart"),...t,async(s,o)=>{let n=await this.dataValidate({request:s,schema:null,ClassRef:R,execute:r=>$e.restartInstance(r)});return o.status(200).json(n)}).get(this.routerPath("connect"),...t,async(s,o)=>{let n=await this.dataValidate({request:s,schema:null,ClassRef:R,execute:r=>$e.connectToWhatsapp(r)});return o.status(200).json(n)}).get(this.routerPath("connectionState"),...t,async(s,o)=>{let n=await this.dataValidate({request:s,schema:null,ClassRef:R,execute:r=>$e.connectionState(r)});return o.status(200).json(n)}).get(this.routerPath("fetchInstances",!1),...t,async(s,o)=>{let n=s.get("apikey"),r=await this.dataValidate({request:s,schema:null,ClassRef:R,execute:a=>$e.fetchInstances(a,n)});return o.status(200).json(r)}).post(this.routerPath("setPresence"),...t,async(s,o)=>{let n=await this.dataValidate({request:s,schema:uc,ClassRef:Ri,execute:(r,a)=>$e.setPresence(r,a)});return o.status(201).json(n)}).delete(this.routerPath("logout"),...t,async(s,o)=>{let n=await this.dataValidate({request:s,schema:null,ClassRef:R,execute:r=>$e.logout(r)});return o.status(200).json(n)}).delete(this.routerPath("delete"),...t,async(s,o)=>{let n=await this.dataValidate({request:s,schema:null,ClassRef:R,execute:r=>$e.deleteInstance(r)});return o.status(200).json(n)})}}});var wn,bn,hl=b(()=>{wn=class{},bn=class{}});import{Router as dg}from"express";var Sn,fl=b(()=>{z();hl();F();re();j();Sn=class extends x{constructor(...e){super();this.router=dg();this.router.get(this.routerPath("findLabels"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:null,ClassRef:wn,execute:n=>Ao.fetchLabels(n)});return s.status(200).json(o)}).post(this.routerPath("handleLabel"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Wc,ClassRef:bn,execute:(n,r)=>Ao.handleLabel(n,r)});return s.status(200).json(o)})}}});var En,yl=b(()=>{En=class{}});import{Router as gg}from"express";var In,wl=b(()=>{z();ae();yl();F();re();j();In=class extends x{constructor(...e){super();this.router=gg();this.router.post(this.routerPath("set"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:np,ClassRef:En,execute:(n,r)=>Ii.createProxy(n,r)});s.status(201).json(o)}).get(this.routerPath("find"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:P,ClassRef:R,execute:n=>Ii.findProxy(n)});s.status(200).json(o)})}}});var Ie,Mn,Tn,Cn,Gt,vn,An,Rn,Pn,Dn,xn,On,Nn,bl=b(()=>{Ie=class{},Mn=class extends Ie{},Tn=class extends Ie{},Cn=class extends Ie{},Gt=class extends Ie{},vn=class extends Ie{},An=class extends Ie{},Rn=class extends Ie{},Pn=class extends Ie{},Dn=class extends Ie{},xn=class extends Ie{},On=class extends Ie{},Nn=class{}});import{Router as mg}from"express";import Sl from"multer";var jt,kn,El=b(()=>{z();bl();F();re();j();jt=Sl({storage:Sl.memoryStorage()}),kn=class extends x{constructor(...e){super();this.router=mg();this.router.post(this.routerPath("sendTemplate"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:qc,ClassRef:xn,execute:(n,r)=>we.sendTemplate(n,r)});return s.status(201).json(o)}).post(this.routerPath("sendText"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Vc,ClassRef:Mn,execute:(n,r)=>we.sendText(n,r)});return s.status(201).json(o)}).post(this.routerPath("sendMedia"),...e,jt.single("file"),async(t,s)=>{let o=t.body,n=await this.dataValidate({request:t,schema:Gc,ClassRef:Gt,execute:r=>we.sendMedia(r,o,t.file)});return s.status(201).json(n)}).post(this.routerPath("sendPtv"),...e,jt.single("file"),async(t,s)=>{let o=t.body,n=await this.dataValidate({request:t,schema:jc,ClassRef:vn,execute:r=>we.sendPtv(r,o,t.file)});return s.status(201).json(n)}).post(this.routerPath("sendWhatsAppAudio"),...e,jt.single("file"),async(t,s)=>{let o=t.body,n=await this.dataValidate({request:t,schema:Kc,ClassRef:Gt,execute:r=>we.sendWhatsAppAudio(r,o,t.file)});return s.status(201).json(n)}).post(this.routerPath("sendStatus"),...e,jt.single("file"),async(t,s)=>{let o=t.body,n=await this.dataValidate({request:t,schema:Yc,ClassRef:Tn,execute:r=>we.sendStatus(r,o,t.file)});return s.status(201).json(n)}).post(this.routerPath("sendSticker"),...e,jt.single("file"),async(t,s)=>{let o=t.body,n=await this.dataValidate({request:t,schema:Qc,ClassRef:An,execute:r=>we.sendSticker(r,o,t.file)});return s.status(201).json(n)}).post(this.routerPath("sendLocation"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:zc,ClassRef:Pn,execute:(n,r)=>we.sendLocation(n,r)});return s.status(201).json(o)}).post(this.routerPath("sendContact"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Xc,ClassRef:On,execute:(n,r)=>we.sendContact(n,r)});return s.status(201).json(o)}).post(this.routerPath("sendReaction"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:Zc,ClassRef:Nn,execute:(n,r)=>we.sendReaction(n,r)});return s.status(201).json(o)}).post(this.routerPath("sendPoll"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:ep,ClassRef:Cn,execute:(n,r)=>we.sendPoll(n,r)});return s.status(201).json(o)}).post(this.routerPath("sendList"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:tp,ClassRef:Dn,execute:(n,r)=>we.sendList(n,r)});return s.status(201).json(o)}).post(this.routerPath("sendButtons"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:sp,ClassRef:Rn,execute:(n,r)=>we.sendButtons(n,r)});return s.status(201).json(o)})}}});var _n,Il=b(()=>{_n=class{}});import{Router as hg}from"express";var Bn,Ml=b(()=>{z();ae();Il();F();re();j();Bn=class extends x{constructor(...e){super();this.router=hg();this.router.post(this.routerPath("set"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:rp,ClassRef:_n,execute:(n,r)=>vo.createSettings(n,r)});s.status(201).json(o)}).get(this.routerPath("find"),...e,async(t,s)=>{let o=await this.dataValidate({request:t,schema:null,ClassRef:R,execute:n=>vo.findSettings(n)});s.status(200).json(o)})}}});var Ln,Tl=b(()=>{Ln=class{}});import{Router as fg}from"express";var Fn,Cl=b(()=>{z();ae();Tl();F();re();j();Fn=class extends x{constructor(e,...t){super();this.configService=e;this.router=fg();this.router.post(this.routerPath("create"),...t,async(s,o)=>{let n=await this.dataValidate({request:s,schema:cp,ClassRef:Ln,execute:(r,a)=>Co.createTemplate(r,a)});o.status(201).json(n)}).get(this.routerPath("find"),...t,async(s,o)=>{let n=await this.dataValidate({request:s,schema:P,ClassRef:R,execute:r=>Co.findTemplate(r)});o.status(200).json(n)})}}});import yg,{Router as wg}from"express";import vl from"path";var Un,Al=b(()=>{z();Un=class extends x{constructor(){super(),this.router=wg();let i=vl.join(process.cwd(),"manager","dist"),e=vl.join(i,"index.html");this.router.use(yg.static(i)),this.router.get("*",(t,s)=>{s.sendFile(e)})}}});import{Router as bg}from"express";import Jo from"fs";import Sg from"mime-types";import Rl from"path";var Kt,Pl,Me,Eg,Ig,j=b(()=>{Za();ic();oc();gc();Yp();tl();cl();Z();ll();ul();gl();ml();fl();wl();El();Ml();Cl();Al();Kt=bg(),Pl=C.get("SERVER"),Me=[tc,sc,Ro.apikey],Eg=new nc,Ig=JSON.parse(Jo.readFileSync("./package.json","utf8"));Pl.DISABLE_MANAGER||Kt.use("/manager",new Un().router);Kt.get("/assets/*",(p,i)=>{let e=p.params[0],t=Rl.join(process.cwd(),"manager","dist"),s=Rl.join(t,"assets/",e);Jo.existsSync(s)?(i.set("Content-Type",Sg.lookup(s)||"text/css"),i.send(Jo.readFileSync(s))):i.status(404).send("File not found")});Kt.use((p,i,e)=>Eg.collectTelemetry(p,i,e)).get("/",(p,i)=>{i.status(200).json({status:200,message:"Welcome to the Evolution API, it is working!",version:Ig.version,clientName:process.env.DATABASE_CONNECTION_CLIENT_NAME,manager:Pl.DISABLE_MANAGER?void 0:`${p.protocol}://${p.get("host")}/manager`,documentation:"https://doc.evolution-api.com"})}).post("/verify-creds",Ro.apikey,async(p,i)=>i.status(200).json({status:200,message:"Credentials are valid",facebookAppId:process.env.FACEBOOK_APP_ID,facebookConfigId:process.env.FACEBOOK_CONFIG_ID,facebookUserToken:process.env.FACEBOOK_USER_TOKEN})).use("/instance",new yn(C,...Me).router).use("/message",new kn(...Me).router).use("/call",new sn(...Me).router).use("/chat",new nn(...Me).router).use("/group",new fn(...Me).router).use("/template",new Fn(C,...Me).router).use("/settings",new Bn(...Me).router).use("/proxy",new In(...Me).router).use("/label",new Sn(...Me).router).use("",new Di(C,...Me).router).use("",new Xi(C,...Me).router).use("",new Gi(...Me).router).use("",new en(...Me).router)});function Dl(){process.on("uncaughtException",(p,i)=>{new A("uncaughtException").error({origin:i,stderr:process.stderr.fd,error:p})}),process.on("unhandledRejection",(p,i)=>{let e=new A("unhandledRejection");e.error({origin:i,stderr:process.stderr.fd}),e.error(p)})}var xl=b(()=>{_()});import{readFileSync as Ol}from"fs";import*as Nl from"http";import*as kl from"https";var It,Yt,Qt,_l=b(()=>{Z();Yt=class Yt{static set app(i){Yo(this,It,i)}static get https(){let{FULLCHAIN:i,PRIVKEY:e}=C.get("SSL_CONF");return kl.createServer({cert:Ol(i),key:Ol(e)},Wn(Yt,It))}static get http(){return Nl.createServer(Wn(Yt,It))}};It=new WeakMap,Ko(Yt,It);Qt=Yt});import*as Bl from"@sentry/node";import Mg from"axios";import Tg from"compression";import Cg from"cors";import Wo,{json as vg,urlencoded as Ag}from"express";import{join as $o}from"path";var Dg=Go(()=>{var pD=ql(Xo());$n();zt();j();F();Z();xl();_();qs();_l();function Rg(){B.loadInstance()}async function Pg(){let p=new A("SERVER"),i=Wo(),e=null;C.get("PROVIDER").ENABLED&&(e=new ut(C),await e.onModuleInit(),p.info("Provider:Files - ON")),await new dt(C).onModuleInit(),i.use(Cg({origin(n,r){let{ORIGIN:a}=C.get("CORS");return a.includes("*")||a.indexOf(n)!==-1?r(null,!0):r(new Error("Not allowed by CORS"))},methods:[...C.get("CORS").METHODS],credentials:C.get("CORS").CREDENTIALS}),Ag({extended:!0,limit:"136mb"}),vg({limit:"136mb"}),Tg()),i.set("view engine","hbs"),i.set("views",$o(Ye,"views")),i.use(Wo.static($o(Ye,"public"))),i.use("/store",Wo.static($o(Ye,"store"))),i.use("/",Kt),i.use((n,r,a,c)=>{if(n){let l=C.get("WEBHOOK");if(l.EVENTS.ERRORS_WEBHOOK&&l.EVENTS.ERRORS_WEBHOOK!=""&&l.EVENTS.ERRORS){let d=new Date().getTimezoneOffset()*6e4,g=new Date(Date.now()-d).toISOString(),m=C.get("AUTHENTICATION").API_KEY.KEY,h=C.get("SERVER").URL,y={event:"error",data:{error:n.error||"Internal Server Error",message:n.message||"Internal Server Error",status:n.status||500,response:{message:n.message||"Internal Server Error"}},date_time:g,api_key:m,server_url:h};p.error(y);let w=l.EVENTS.ERRORS_WEBHOOK;Mg.create({baseURL:w}).post("",y)}return a.status(n.status||500).json({status:n.status||500,error:n.error||"Internal Server Error",response:{message:n.message||"Internal Server Error"}})}c()},(n,r,a)=>{let{method:c,url:l}=n;r.status(404).json({status:404,error:"Not Found",response:{message:[`Cannot ${c.toUpperCase()} ${l}`]}}),a()});let s=C.get("SERVER");Qt.app=i;let o=Qt[s.TYPE];se.init(o),process.env.SENTRY_DSN&&(p.info("Sentry - ON"),Bl.setupExpressErrorHandler(i)),o.listen(s.PORT,()=>p.log(s.TYPE.toUpperCase()+" - ON: "+s.PORT)),Rg(),Dl()}Pg()});export default Dg();
/**
 * ┌──────────────────────────────────────────────────────────────────────────────┐
 * │ @author jrCleber                                                             │
 * │ @filename use-multi-file-auth-state-provider-files.ts                              │
 * │ Developed by: Cleber Wilson                                                  │
 * │ Creation date: May 31, 2024                                                 │
 * │ Contact: contato@codechat.dev                                                │
 * ├──────────────────────────────────────────────────────────────────────────────┤
 * │ @copyright © Cleber Wilson 2023. All rights reserved.                        │
 * │ Licensed under the Apache License, Version 2.0                               │
 * │                                                                              │
 * │  @license "https://github.com/code-chat-br/whatsapp-api/blob/main/LICENSE"   │
 * │                                                                              │
 * │ You may not use this file except in compliance with the License.             │
 * │ You may obtain a copy of the License at                                      │
 * │                                                                              │
 * │    http://www.apache.org/licenses/LICENSE-2.0                                │
 * │                                                                              │
 * │ Unless required by applicable law or agreed to in writing, software          │
 * │ distributed under the License is distributed on an "AS IS" BASIS,            │
 * │ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     │
 * │                                                                              │
 * │ See the License for the specific language governing permissions and          │
 * │ limitations under the License.                                               │
 * │                                                                              │
 * │ @type {AuthState}                                                            │
 * │ @function useMultiFileAuthStateRedisDb                                       │
 * │ @returns {Promise<AuthState>}                                                │
 * ├──────────────────────────────────────────────────────────────────────────────┤
 * │ @important                                                                   │
 * │ For any future changes to the code in this file, it is recommended to        │
 * │ contain, together with the modification, the information of the developer    │
 * │ who changed it and the date of modification.                                 │
 * └──────────────────────────────────────────────────────────────────────────────┘
 */
//# sourceMappingURL=main.mjs.map