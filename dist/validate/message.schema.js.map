{"version":3,"sources":["../../src/validate/message.schema.ts","../../node_modules/uuid/dist/esm-node/rng.js","../../node_modules/uuid/dist/esm-node/stringify.js","../../node_modules/uuid/dist/esm-node/native.js","../../node_modules/uuid/dist/esm-node/v4.js"],"sourcesContent":["import { JSONSchema7, JSONSchema7Definition } from 'json-schema';\r\nimport { v4 } from 'uuid';\r\n\r\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\r\n  const properties = {};\r\n  propertyNames.forEach(\r\n    (property) =>\r\n      (properties[property] = {\r\n        minLength: 1,\r\n        description: `The \"${property}\" cannot be empty`,\r\n      }),\r\n  );\r\n  return {\r\n    if: {\r\n      propertyNames: {\r\n        enum: [...propertyNames],\r\n      },\r\n    },\r\n    then: { properties },\r\n  };\r\n};\r\n\r\nconst numberDefinition: JSONSchema7Definition = {\r\n  type: 'string',\r\n  description: 'Invalid format',\r\n};\r\n\r\nexport const templateMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    name: { type: 'string' },\r\n    language: { type: 'string' },\r\n    components: { type: 'array' },\r\n    webhookUrl: { type: 'string' },\r\n  },\r\n  required: ['name', 'language'],\r\n};\r\n\r\nconst quotedOptionsSchema: JSONSchema7 = {\r\n  properties: {\r\n    key: {\r\n      type: 'object',\r\n      properties: {\r\n        id: { type: 'string' },\r\n        remoteJid: { type: 'string' },\r\n        fromMe: { type: 'boolean', enum: [true, false] },\r\n      },\r\n      required: ['id'],\r\n      ...isNotEmpty('id'),\r\n    },\r\n    message: { type: 'object' },\r\n  },\r\n};\r\n\r\nexport const offerCallSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    isVideo: { type: 'boolean', enum: [true, false] },\r\n    callDuration: { type: 'integer', minimum: 1, maximum: 15 },\r\n  },\r\n  required: ['number', 'callDuration'],\r\n};\r\n\r\nexport const textMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    text: { type: 'string' },\r\n    linkPreview: { type: 'boolean' },\r\n    delay: {\r\n      type: 'integer',\r\n      description: 'Enter a value in milliseconds',\r\n    },\r\n    quoted: { ...quotedOptionsSchema },\r\n    everyOne: { type: 'boolean', enum: [true, false] },\r\n    mentioned: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        pattern: '^\\\\d+',\r\n        description: '\"mentioned\" must be an array of numeric strings',\r\n      },\r\n    },\r\n  },\r\n  required: ['number', 'text'],\r\n};\r\n\r\nexport const mediaMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    mediatype: { type: 'string', enum: ['image', 'document', 'video', 'audio'] },\r\n    mimetype: { type: 'string' },\r\n    media: { type: 'string' },\r\n    fileName: { type: 'string' },\r\n    caption: { type: 'string' },\r\n    delay: {\r\n      type: 'integer',\r\n      description: 'Enter a value in milliseconds',\r\n    },\r\n    quoted: { ...quotedOptionsSchema },\r\n    everyOne: { type: 'boolean', enum: [true, false] },\r\n    mentioned: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        pattern: '^\\\\d+',\r\n        description: '\"mentioned\" must be an array of numeric strings',\r\n      },\r\n    },\r\n  },\r\n  required: ['number', 'mediatype'],\r\n};\r\n\r\nexport const ptvMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    video: { type: 'string' },\r\n    delay: {\r\n      type: 'integer',\r\n      description: 'Enter a value in milliseconds',\r\n    },\r\n    quoted: { ...quotedOptionsSchema },\r\n    everyOne: { type: 'boolean', enum: [true, false] },\r\n    mentioned: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        pattern: '^\\\\d+',\r\n        description: '\"mentioned\" must be an array of numeric strings',\r\n      },\r\n    },\r\n  },\r\n  required: ['number'],\r\n};\r\n\r\nexport const audioMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    audio: { type: 'string' },\r\n    delay: {\r\n      type: 'integer',\r\n      description: 'Enter a value in milliseconds',\r\n    },\r\n    quoted: { ...quotedOptionsSchema },\r\n    everyOne: { type: 'boolean', enum: [true, false] },\r\n    mentioned: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        pattern: '^\\\\d+',\r\n        description: '\"mentioned\" must be an array of numeric strings',\r\n      },\r\n    },\r\n  },\r\n  required: ['number'],\r\n};\r\n\r\nexport const statusMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    type: { type: 'string', enum: ['text', 'image', 'audio', 'video'] },\r\n    content: { type: 'string' },\r\n    caption: { type: 'string' },\r\n    backgroundColor: { type: 'string' },\r\n    font: { type: 'integer', minimum: 0, maximum: 5 },\r\n    statusJidList: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        pattern: '^\\\\d+',\r\n        description: '\"statusJidList\" must be an array of numeric strings',\r\n      },\r\n    },\r\n    allContacts: { type: 'boolean', enum: [true, false] },\r\n  },\r\n  required: ['type'],\r\n};\r\n\r\nexport const stickerMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    sticker: { type: 'string' },\r\n    delay: {\r\n      type: 'integer',\r\n      description: 'Enter a value in milliseconds',\r\n    },\r\n    quoted: { ...quotedOptionsSchema },\r\n    everyOne: { type: 'boolean', enum: [true, false] },\r\n    mentioned: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        pattern: '^\\\\d+',\r\n        description: '\"mentioned\" must be an array of numeric strings',\r\n      },\r\n    },\r\n  },\r\n  required: ['number'],\r\n};\r\n\r\nexport const locationMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    latitude: { type: 'number' },\r\n    longitude: { type: 'number' },\r\n    name: { type: 'string' },\r\n    address: { type: 'string' },\r\n    delay: {\r\n      type: 'integer',\r\n      description: 'Enter a value in milliseconds',\r\n    },\r\n    quoted: { ...quotedOptionsSchema },\r\n    everyOne: { type: 'boolean', enum: [true, false] },\r\n    mentioned: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        pattern: '^\\\\d+',\r\n        description: '\"mentioned\" must be an array of numeric strings',\r\n      },\r\n    },\r\n  },\r\n  required: ['number', 'latitude', 'longitude', 'name', 'address'],\r\n};\r\n\r\nexport const contactMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    contact: {\r\n      type: 'array',\r\n      items: {\r\n        type: 'object',\r\n        properties: {\r\n          fullName: { type: 'string' },\r\n          wuid: {\r\n            type: 'string',\r\n            minLength: 10,\r\n            pattern: '\\\\d+',\r\n            description: '\"wuid\" must be a numeric string',\r\n          },\r\n          phoneNumber: { type: 'string', minLength: 10 },\r\n          organization: { type: 'string' },\r\n          email: { type: 'string' },\r\n          url: { type: 'string' },\r\n        },\r\n        required: ['fullName', 'phoneNumber'],\r\n        ...isNotEmpty('fullName'),\r\n      },\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n    },\r\n  },\r\n  required: ['number', 'contact'],\r\n};\r\n\r\nexport const reactionMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    key: {\r\n      type: 'object',\r\n      properties: {\r\n        id: { type: 'string' },\r\n        remoteJid: { type: 'string' },\r\n        fromMe: { type: 'boolean', enum: [true, false] },\r\n      },\r\n      required: ['id', 'remoteJid', 'fromMe'],\r\n      ...isNotEmpty('id', 'remoteJid'),\r\n    },\r\n    reaction: { type: 'string' },\r\n  },\r\n  required: ['key', 'reaction'],\r\n};\r\n\r\nexport const pollMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    name: { type: 'string' },\r\n    selectableCount: { type: 'integer', minimum: 0, maximum: 10 },\r\n    values: {\r\n      type: 'array',\r\n      minItems: 2,\r\n      maxItems: 10,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n      },\r\n    },\r\n    delay: {\r\n      type: 'integer',\r\n      description: 'Enter a value in milliseconds',\r\n    },\r\n    quoted: { ...quotedOptionsSchema },\r\n    everyOne: { type: 'boolean', enum: [true, false] },\r\n    mentioned: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        pattern: '^\\\\d+',\r\n        description: '\"mentioned\" must be an array of numeric strings',\r\n      },\r\n    },\r\n  },\r\n  required: ['number', 'name', 'selectableCount', 'values'],\r\n};\r\n\r\nexport const listMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    title: { type: 'string' },\r\n    description: { type: 'string' },\r\n    footerText: { type: 'string' },\r\n    buttonText: { type: 'string' },\r\n    sections: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'object',\r\n        properties: {\r\n          title: { type: 'string' },\r\n          rows: {\r\n            type: 'array',\r\n            minItems: 1,\r\n            uniqueItems: true,\r\n            items: {\r\n              type: 'object',\r\n              properties: {\r\n                title: { type: 'string' },\r\n                description: { type: 'string' },\r\n                rowId: { type: 'string' },\r\n              },\r\n              required: ['title', 'rowId'],\r\n              ...isNotEmpty('title', 'description', 'rowId'),\r\n            },\r\n          },\r\n        },\r\n        required: ['title', 'rows'],\r\n        ...isNotEmpty('title'),\r\n      },\r\n    },\r\n    delay: {\r\n      type: 'integer',\r\n      description: 'Enter a value in milliseconds',\r\n    },\r\n    quoted: { ...quotedOptionsSchema },\r\n    everyOne: { type: 'boolean', enum: [true, false] },\r\n    mentioned: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        pattern: '^\\\\d+',\r\n        description: '\"mentioned\" must be an array of numeric strings',\r\n      },\r\n    },\r\n  },\r\n  required: ['number', 'title', 'footerText', 'buttonText', 'sections'],\r\n};\r\n\r\nexport const buttonsMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    thumbnailUrl: { type: 'string' },\r\n    title: { type: 'string' },\r\n    description: { type: 'string' },\r\n    footer: { type: 'string' },\r\n    buttons: {\r\n      type: 'array',\r\n      items: {\r\n        type: 'object',\r\n        properties: {\r\n          type: {\r\n            type: 'string',\r\n            enum: ['reply', 'copy', 'url', 'call', 'pix'],\r\n          },\r\n          displayText: { type: 'string' },\r\n          id: { type: 'string' },\r\n          url: { type: 'string' },\r\n          phoneNumber: { type: 'string' },\r\n          currency: { type: 'string' },\r\n          name: { type: 'string' },\r\n          keyType: { type: 'string', enum: ['phone', 'email', 'cpf', 'cnpj', 'random'] },\r\n          key: { type: 'string' },\r\n        },\r\n        required: ['type'],\r\n        ...isNotEmpty('id', 'url', 'phoneNumber'),\r\n      },\r\n    },\r\n    delay: {\r\n      type: 'integer',\r\n      description: 'Enter a value in milliseconds',\r\n    },\r\n    quoted: { ...quotedOptionsSchema },\r\n    everyOne: { type: 'boolean', enum: [true, false] },\r\n    mentioned: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        pattern: '^\\\\d+',\r\n        description: '\"mentioned\" must be an array of numeric strings',\r\n      },\r\n    },\r\n  },\r\n  required: ['number'],\r\n};\r\n","import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import crypto from 'crypto';\nexport default {\n  randomUUID: crypto.randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;"],"mappings":"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","names":["message_schema_exports","__export","audioMessageSchema","buttonsMessageSchema","contactMessageSchema","listMessageSchema","locationMessageSchema","mediaMessageSchema","offerCallSchema","pollMessageSchema","ptvMessageSchema","reactionMessageSchema","statusMessageSchema","stickerMessageSchema","templateMessageSchema","textMessageSchema","__toCommonJS","import_crypto","rnds8Pool","poolPtr","rng","crypto","byteToHex","i","unsafeStringify","arr","offset","import_crypto","native_default","crypto","v4","options","buf","offset","native_default","rnds","rng","i","unsafeStringify","v4_default","isNotEmpty","propertyNames","properties","property","numberDefinition","templateMessageSchema","v4_default","quotedOptionsSchema","offerCallSchema","textMessageSchema","mediaMessageSchema","ptvMessageSchema","audioMessageSchema","statusMessageSchema","stickerMessageSchema","locationMessageSchema","contactMessageSchema","reactionMessageSchema","pollMessageSchema","listMessageSchema","buttonsMessageSchema"]}