{"version":3,"sources":["../../src/validate/validate.schema.ts","../../node_modules/uuid/dist/esm-node/rng.js","../../node_modules/uuid/dist/esm-node/stringify.js","../../node_modules/uuid/dist/esm-node/native.js","../../node_modules/uuid/dist/esm-node/v4.js","../../src/validate/chat.schema.ts","../../src/validate/group.schema.ts","../../src/api/types/wa.types.ts","../../src/validate/instance.schema.ts","../../src/validate/label.schema.ts","../../src/validate/message.schema.ts","../../src/validate/proxy.schema.ts","../../src/validate/settings.schema.ts","../../src/validate/template.schema.ts","../../src/api/integrations/chatbot/chatwoot/validate/chatwoot.schema.ts","../../src/api/integrations/chatbot/dify/validate/dify.schema.ts","../../src/api/integrations/chatbot/evolutionBot/validate/evolutionBot.schema.ts","../../src/api/integrations/chatbot/flowise/validate/flowise.schema.ts","../../src/api/integrations/chatbot/openai/validate/openai.schema.ts","../../src/api/integrations/chatbot/typebot/validate/typebot.schema.ts","../../src/api/integrations/event/event.controller.ts","../../src/api/integrations/event/pusher/pusher.schema.ts","../../src/api/integrations/event/webhook/webhook.schema.ts","../../src/api/integrations/event/event.schema.ts"],"sourcesContent":["// Integrations Schema\r\nexport * from './chat.schema';\r\nexport * from './group.schema';\r\nexport * from './instance.schema';\r\nexport * from './label.schema';\r\nexport * from './message.schema';\r\nexport * from './proxy.schema';\r\nexport * from './settings.schema';\r\nexport * from './template.schema';\r\nexport * from '@api/integrations/chatbot/chatbot.schema';\r\nexport * from '@api/integrations/event/event.schema';\r\n","import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import crypto from 'crypto';\nexport default {\n  randomUUID: crypto.randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { JSONSchema7, JSONSchema7Definition } from 'json-schema';\r\nimport { v4 } from 'uuid';\r\n\r\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\r\n  const properties = {};\r\n  propertyNames.forEach(\r\n    (property) =>\r\n      (properties[property] = {\r\n        minLength: 1,\r\n        description: `The \"${property}\" cannot be empty`,\r\n      }),\r\n  );\r\n  return {\r\n    if: {\r\n      propertyNames: {\r\n        enum: [...propertyNames],\r\n      },\r\n    },\r\n    then: { properties },\r\n  };\r\n};\r\n\r\nconst numberDefinition: JSONSchema7Definition = {\r\n  type: 'string',\r\n  description: 'Invalid format',\r\n};\r\n\r\nexport const whatsappNumberSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    numbers: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        description: '\"numbers\" must be an array of numeric strings',\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport const readMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    readMessages: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        properties: {\r\n          id: { type: 'string' },\r\n          fromMe: { type: 'boolean', enum: [true, false] },\r\n          remoteJid: { type: 'string' },\r\n        },\r\n        required: ['id', 'fromMe', 'remoteJid'],\r\n        ...isNotEmpty('id', 'remoteJid'),\r\n      },\r\n    },\r\n  },\r\n  required: ['readMessages'],\r\n};\r\n\r\nexport const archiveChatSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    chat: { type: 'string' },\r\n    lastMessage: {\r\n      type: 'object',\r\n      properties: {\r\n        key: {\r\n          type: 'object',\r\n          properties: {\r\n            id: { type: 'string' },\r\n            remoteJid: { type: 'string' },\r\n            fromMe: { type: 'boolean', enum: [true, false] },\r\n          },\r\n          required: ['id', 'fromMe', 'remoteJid'],\r\n          ...isNotEmpty('id', 'remoteJid'),\r\n        },\r\n        messageTimestamp: { type: 'integer', minLength: 1 },\r\n      },\r\n      required: ['key'],\r\n      ...isNotEmpty('messageTimestamp'),\r\n    },\r\n    archive: { type: 'boolean', enum: [true, false] },\r\n  },\r\n  required: ['archive'],\r\n};\r\n\r\nexport const markChatUnreadSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    chat: { type: 'string' },\r\n    lastMessage: {\r\n      type: 'object',\r\n      properties: {\r\n        key: {\r\n          type: 'object',\r\n          properties: {\r\n            id: { type: 'string' },\r\n            remoteJid: { type: 'string' },\r\n            fromMe: { type: 'boolean', enum: [true, false] },\r\n          },\r\n          required: ['id', 'fromMe', 'remoteJid'],\r\n          ...isNotEmpty('id', 'remoteJid'),\r\n        },\r\n        messageTimestamp: { type: 'integer', minLength: 1 },\r\n      },\r\n      required: ['key'],\r\n      ...isNotEmpty('messageTimestamp'),\r\n    },\r\n  },\r\n  required: ['lastMessage'],\r\n};\r\n\r\nexport const deleteMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    id: { type: 'string' },\r\n    fromMe: { type: 'boolean', enum: [true, false] },\r\n    remoteJid: { type: 'string' },\r\n    participant: { type: 'string' },\r\n  },\r\n  required: ['id', 'fromMe', 'remoteJid'],\r\n  ...isNotEmpty('id', 'remoteJid', 'participant'),\r\n};\r\n\r\nexport const profilePictureSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { type: 'string' },\r\n    picture: { type: 'string' },\r\n  },\r\n};\r\n\r\nexport const updateMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { type: 'string' },\r\n    text: { type: 'string' },\r\n    key: {\r\n      type: 'object',\r\n      properties: {\r\n        id: { type: 'string' },\r\n        remoteJid: { type: 'string' },\r\n        fromMe: { type: 'boolean', enum: [true, false] },\r\n      },\r\n      required: ['id', 'fromMe', 'remoteJid'],\r\n      ...isNotEmpty('id', 'remoteJid'),\r\n    },\r\n  },\r\n  ...isNotEmpty('number', 'text', 'key'),\r\n};\r\n\r\nexport const presenceSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    delay: { type: 'number' },\r\n    presence: {\r\n      type: 'string',\r\n      enum: ['unavailable', 'available', 'composing', 'recording', 'paused'],\r\n    },\r\n  },\r\n  required: ['number', 'presence', 'delay'],\r\n};\r\n\r\nexport const blockUserSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { type: 'string' },\r\n    status: { type: 'string', enum: ['block', 'unblock'] },\r\n  },\r\n  required: ['number', 'status'],\r\n  ...isNotEmpty('number', 'status'),\r\n};\r\n\r\nexport const contactValidateSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    where: {\r\n      type: 'object',\r\n      properties: {\r\n        _id: { type: 'string', minLength: 1 },\r\n        pushName: { type: 'string', minLength: 1 },\r\n        id: { type: 'string', minLength: 1 },\r\n      },\r\n      ...isNotEmpty('_id', 'id', 'pushName'),\r\n    },\r\n  },\r\n};\r\n\r\nexport const messageValidateSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    where: {\r\n      type: 'object',\r\n      properties: {\r\n        _id: { type: 'string', minLength: 1 },\r\n        key: {\r\n          type: 'object',\r\n          if: {\r\n            propertyNames: {\r\n              enum: ['fromMe', 'remoteJid', 'id'],\r\n            },\r\n          },\r\n          then: {\r\n            properties: {\r\n              remoteJid: {\r\n                type: 'string',\r\n                minLength: 1,\r\n                description: 'The property cannot be empty',\r\n              },\r\n              id: {\r\n                type: 'string',\r\n                minLength: 1,\r\n                description: 'The property cannot be empty',\r\n              },\r\n              fromMe: { type: 'boolean', enum: [true, false] },\r\n            },\r\n          },\r\n        },\r\n        message: { type: 'object' },\r\n      },\r\n      ...isNotEmpty('_id'),\r\n    },\r\n    limit: { type: 'integer' },\r\n  },\r\n};\r\n\r\nexport const messageUpSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    where: {\r\n      type: 'object',\r\n      properties: {\r\n        _id: { type: 'string' },\r\n        remoteJid: { type: 'string' },\r\n        id: { type: 'string' },\r\n        fromMe: { type: 'boolean', enum: [true, false] },\r\n        participant: { type: 'string' },\r\n        status: {\r\n          type: 'string',\r\n          enum: ['ERROR', 'PENDING', 'SERVER_ACK', 'DELIVERY_ACK', 'READ', 'PLAYED'],\r\n        },\r\n      },\r\n      ...isNotEmpty('_id', 'remoteJid', 'id', 'status'),\r\n    },\r\n    limit: { type: 'integer' },\r\n  },\r\n};\r\n\r\nexport const privacySettingsSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    readreceipts: { type: 'string', enum: ['all', 'none'] },\r\n    profile: {\r\n      type: 'string',\r\n      enum: ['all', 'contacts', 'contact_blacklist', 'none'],\r\n    },\r\n    status: {\r\n      type: 'string',\r\n      enum: ['all', 'contacts', 'contact_blacklist', 'none'],\r\n    },\r\n    online: { type: 'string', enum: ['all', 'match_last_seen'] },\r\n    last: { type: 'string', enum: ['all', 'contacts', 'contact_blacklist', 'none'] },\r\n    groupadd: {\r\n      type: 'string',\r\n      enum: ['all', 'contacts', 'contact_blacklist', 'none'],\r\n    },\r\n  },\r\n  required: ['readreceipts', 'profile', 'status', 'online', 'last', 'groupadd'],\r\n  ...isNotEmpty('readreceipts', 'profile', 'status', 'online', 'last', 'groupadd'),\r\n};\r\n\r\nexport const profileNameSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    name: { type: 'string' },\r\n  },\r\n  ...isNotEmpty('name'),\r\n};\r\n\r\nexport const profileStatusSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    status: { type: 'string' },\r\n  },\r\n  ...isNotEmpty('status'),\r\n};\r\n\r\nexport const profileSchema: JSONSchema7 = {\r\n  type: 'object',\r\n  properties: {\r\n    wuid: { type: 'string' },\r\n    name: { type: 'string' },\r\n    picture: { type: 'string' },\r\n    status: { type: 'string' },\r\n    isBusiness: { type: 'boolean' },\r\n  },\r\n};\r\n","import { JSONSchema7 } from 'json-schema';\r\nimport { v4 } from 'uuid';\r\n\r\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\r\n  const properties = {};\r\n  propertyNames.forEach(\r\n    (property) =>\r\n      (properties[property] = {\r\n        minLength: 1,\r\n        description: `The \"${property}\" cannot be empty`,\r\n      }),\r\n  );\r\n  return {\r\n    if: {\r\n      propertyNames: {\r\n        enum: [...propertyNames],\r\n      },\r\n    },\r\n    then: { properties },\r\n  };\r\n};\r\n\r\nexport const createGroupSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    subject: { type: 'string' },\r\n    description: { type: 'string' },\r\n    profilePicture: { type: 'string' },\r\n    promoteParticipants: { type: 'boolean', enum: [true, false] },\r\n    participants: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        minLength: 10,\r\n        pattern: '\\\\d+',\r\n        description: '\"participants\" must be an array of numeric strings',\r\n      },\r\n    },\r\n  },\r\n  required: ['subject', 'participants'],\r\n  ...isNotEmpty('subject', 'description', 'profilePicture'),\r\n};\r\n\r\nexport const groupJidSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    groupJid: { type: 'string', pattern: '^[\\\\d-]+@g.us$' },\r\n  },\r\n  required: ['groupJid'],\r\n  ...isNotEmpty('groupJid'),\r\n};\r\n\r\nexport const getParticipantsSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    getParticipants: { type: 'string', enum: ['true', 'false'] },\r\n  },\r\n  required: ['getParticipants'],\r\n  ...isNotEmpty('getParticipants'),\r\n};\r\n\r\nexport const groupSendInviteSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    groupJid: { type: 'string' },\r\n    description: { type: 'string' },\r\n    numbers: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        minLength: 10,\r\n        pattern: '\\\\d+',\r\n        description: '\"numbers\" must be an array of numeric strings',\r\n      },\r\n    },\r\n  },\r\n  required: ['groupJid', 'description', 'numbers'],\r\n  ...isNotEmpty('groupJid', 'description', 'numbers'),\r\n};\r\n\r\nexport const groupInviteSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    inviteCode: { type: 'string', pattern: '^[a-zA-Z0-9]{22}$' },\r\n  },\r\n  required: ['inviteCode'],\r\n  ...isNotEmpty('inviteCode'),\r\n};\r\n\r\nexport const AcceptGroupInviteSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    inviteCode: { type: 'string', pattern: '^[a-zA-Z0-9]{22}$' },\r\n  },\r\n  required: ['inviteCode'],\r\n  ...isNotEmpty('inviteCode'),\r\n};\r\n\r\nexport const updateParticipantsSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    groupJid: { type: 'string' },\r\n    action: {\r\n      type: 'string',\r\n      enum: ['add', 'remove', 'promote', 'demote'],\r\n    },\r\n    participants: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        minLength: 10,\r\n        pattern: '\\\\d+',\r\n        description: '\"participants\" must be an array of numeric strings',\r\n      },\r\n    },\r\n  },\r\n  required: ['groupJid', 'action', 'participants'],\r\n  ...isNotEmpty('groupJid', 'action'),\r\n};\r\n\r\nexport const updateSettingsSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    groupJid: { type: 'string' },\r\n    action: {\r\n      type: 'string',\r\n      enum: ['announcement', 'not_announcement', 'locked', 'unlocked'],\r\n    },\r\n  },\r\n  required: ['groupJid', 'action'],\r\n  ...isNotEmpty('groupJid', 'action'),\r\n};\r\n\r\nexport const toggleEphemeralSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    groupJid: { type: 'string' },\r\n    expiration: {\r\n      type: 'number',\r\n      enum: [0, 86400, 604800, 7776000],\r\n    },\r\n  },\r\n  required: ['groupJid', 'expiration'],\r\n  ...isNotEmpty('groupJid', 'expiration'),\r\n};\r\n\r\nexport const updateGroupPictureSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    groupJid: { type: 'string' },\r\n    image: { type: 'string' },\r\n  },\r\n  required: ['groupJid', 'image'],\r\n  ...isNotEmpty('groupJid', 'image'),\r\n};\r\n\r\nexport const updateGroupSubjectSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    groupJid: { type: 'string' },\r\n    subject: { type: 'string' },\r\n  },\r\n  required: ['groupJid', 'subject'],\r\n  ...isNotEmpty('groupJid', 'subject'),\r\n};\r\n\r\nexport const updateGroupDescriptionSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    groupJid: { type: 'string' },\r\n    description: { type: 'string' },\r\n  },\r\n  required: ['groupJid', 'description'],\r\n  ...isNotEmpty('groupJid', 'description'),\r\n};\r\n","/* eslint-disable @typescript-eslint/no-namespace */\r\nimport { JsonValue } from '@prisma/client/runtime/library';\r\nimport { AuthenticationState, WAConnectionState } from 'baileys';\r\n\r\nexport enum Events {\r\n  APPLICATION_STARTUP = 'application.startup',\r\n  INSTANCE_CREATE = 'instance.create',\r\n  INSTANCE_DELETE = 'instance.delete',\r\n  QRCODE_UPDATED = 'qrcode.updated',\r\n  CONNECTION_UPDATE = 'connection.update',\r\n  STATUS_INSTANCE = 'status.instance',\r\n  MESSAGES_SET = 'messages.set',\r\n  MESSAGES_UPSERT = 'messages.upsert',\r\n  MESSAGES_EDITED = 'messages.edited',\r\n  MESSAGES_UPDATE = 'messages.update',\r\n  MESSAGES_DELETE = 'messages.delete',\r\n  SEND_MESSAGE = 'send.message',\r\n  CONTACTS_SET = 'contacts.set',\r\n  CONTACTS_UPSERT = 'contacts.upsert',\r\n  CONTACTS_UPDATE = 'contacts.update',\r\n  PRESENCE_UPDATE = 'presence.update',\r\n  CHATS_SET = 'chats.set',\r\n  CHATS_UPDATE = 'chats.update',\r\n  CHATS_UPSERT = 'chats.upsert',\r\n  CHATS_DELETE = 'chats.delete',\r\n  GROUPS_UPSERT = 'groups.upsert',\r\n  GROUPS_UPDATE = 'groups.update',\r\n  GROUP_PARTICIPANTS_UPDATE = 'group-participants.update',\r\n  CALL = 'call',\r\n  TYPEBOT_START = 'typebot.start',\r\n  TYPEBOT_CHANGE_STATUS = 'typebot.change-status',\r\n  LABELS_EDIT = 'labels.edit',\r\n  LABELS_ASSOCIATION = 'labels.association',\r\n  CREDS_UPDATE = 'creds.update',\r\n  MESSAGING_HISTORY_SET = 'messaging-history.set',\r\n  REMOVE_INSTANCE = 'remove.instance',\r\n  LOGOUT_INSTANCE = 'logout.instance',\r\n}\r\n\r\nexport declare namespace wa {\r\n  export type QrCode = {\r\n    count?: number;\r\n    pairingCode?: string;\r\n    base64?: string;\r\n    code?: string;\r\n  };\r\n\r\n  export type Instance = {\r\n    id?: string;\r\n    qrcode?: QrCode;\r\n    pairingCode?: string;\r\n    authState?: { state: AuthenticationState; saveCreds: () => void };\r\n    name?: string;\r\n    wuid?: string;\r\n    profileName?: string;\r\n    profilePictureUrl?: string;\r\n    token?: string;\r\n    number?: string;\r\n    integration?: string;\r\n    businessId?: string;\r\n  };\r\n\r\n  export type LocalChatwoot = {\r\n    enabled?: boolean;\r\n    accountId?: string;\r\n    token?: string;\r\n    url?: string;\r\n    nameInbox?: string;\r\n    signMsg?: boolean;\r\n    signDelimiter?: string;\r\n    number?: string;\r\n    reopenConversation?: boolean;\r\n    conversationPending?: boolean;\r\n    mergeBrazilContacts?: boolean;\r\n    importContacts?: boolean;\r\n    importMessages?: boolean;\r\n    daysLimitImportMessages?: number;\r\n  };\r\n\r\n  export type LocalSettings = {\r\n    rejectCall?: boolean;\r\n    msgCall?: string;\r\n    groupsIgnore?: boolean;\r\n    alwaysOnline?: boolean;\r\n    readMessages?: boolean;\r\n    readStatus?: boolean;\r\n    syncFullHistory?: boolean;\r\n    wavoipToken?: string;\r\n  };\r\n\r\n  export type LocalEvent = {\r\n    enabled?: boolean;\r\n    events?: JsonValue;\r\n  };\r\n\r\n  export type LocalWebHook = LocalEvent & {\r\n    url?: string;\r\n    headers?: JsonValue;\r\n    webhookByEvents?: boolean;\r\n    webhookBase64?: boolean;\r\n  };\r\n\r\n  export type LocalPusher = LocalEvent & {\r\n    appId?: string;\r\n    key?: string;\r\n    secret?: string;\r\n    cluster?: string;\r\n    useTLS?: boolean;\r\n  };\r\n\r\n  type Session = {\r\n    remoteJid?: string;\r\n    sessionId?: string;\r\n    createdAt?: number;\r\n  };\r\n\r\n  export type LocalProxy = {\r\n    enabled?: boolean;\r\n    host?: string;\r\n    port?: string;\r\n    protocol?: string;\r\n    username?: string;\r\n    password?: string;\r\n  };\r\n\r\n  export type StateConnection = {\r\n    instance?: string;\r\n    state?: WAConnectionState | 'refused';\r\n    statusReason?: number;\r\n  };\r\n\r\n  export type StatusMessage = 'ERROR' | 'PENDING' | 'SERVER_ACK' | 'DELIVERY_ACK' | 'READ' | 'DELETED' | 'PLAYED';\r\n}\r\n\r\nexport const TypeMediaMessage = [\r\n  'imageMessage',\r\n  'documentMessage',\r\n  'audioMessage',\r\n  'videoMessage',\r\n  'stickerMessage',\r\n  'ptvMessage',\r\n];\r\n\r\nexport const MessageSubtype = [\r\n  'ephemeralMessage',\r\n  'documentWithCaptionMessage',\r\n  'viewOnceMessage',\r\n  'viewOnceMessageV2',\r\n];\r\n\r\nexport const Integration = {\r\n  WHATSAPP_BUSINESS: 'WHATSAPP-BUSINESS',\r\n  WHATSAPP_BAILEYS: 'WHATSAPP-BAILEYS',\r\n  EVOLUTION: 'EVOLUTION',\r\n};\r\n","import { Integration } from '@api/types/wa.types';\r\nimport { JSONSchema7 } from 'json-schema';\r\nimport { v4 } from 'uuid';\r\n\r\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\r\n  const properties = {};\r\n  propertyNames.forEach(\r\n    (property) =>\r\n      (properties[property] = {\r\n        minLength: 1,\r\n        description: `The \"${property}\" cannot be empty`,\r\n      }),\r\n  );\r\n  return {\r\n    if: {\r\n      propertyNames: {\r\n        enum: [...propertyNames],\r\n      },\r\n    },\r\n    then: { properties },\r\n  };\r\n};\r\n\r\nexport const instanceSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    // Instance\r\n    instanceName: { type: 'string' },\r\n    token: { type: 'string' },\r\n    number: { type: 'string', pattern: '^\\\\d+[\\\\.@\\\\w-]+' },\r\n    businessId: { type: 'string' },\r\n    qrcode: { type: 'boolean' },\r\n    Integration: {\r\n      type: 'string',\r\n      enum: Object.values(Integration),\r\n    },\r\n    // Settings\r\n    rejectCall: { type: 'boolean' },\r\n    msgCall: { type: 'string' },\r\n    groupsIgnore: { type: 'boolean' },\r\n    alwaysOnline: { type: 'boolean' },\r\n    readMessages: { type: 'boolean' },\r\n    readStatus: { type: 'boolean' },\r\n    syncFullHistory: { type: 'boolean' },\r\n    wavoipToken: { type: 'string' },\r\n    // Proxy\r\n    proxyHost: { type: 'string' },\r\n    proxyPort: { type: 'string' },\r\n    proxyProtocol: { type: 'string' },\r\n    proxyUsername: { type: 'string' },\r\n    proxyPassword: { type: 'string' },\r\n    // Webhook\r\n    webhookUrl: { type: 'string' },\r\n    webhookByEvents: { type: 'boolean' },\r\n    webhookBase64: { type: 'boolean' },\r\n    webhookEvents: {\r\n      type: 'array',\r\n      minItems: 0,\r\n      items: {\r\n        type: 'string',\r\n        enum: [\r\n          'APPLICATION_STARTUP',\r\n          'QRCODE_UPDATED',\r\n          'MESSAGES_SET',\r\n          'MESSAGES_UPSERT',\r\n          'MESSAGES_EDITED',\r\n          'MESSAGES_UPDATE',\r\n          'MESSAGES_DELETE',\r\n          'SEND_MESSAGE',\r\n          'CONTACTS_SET',\r\n          'CONTACTS_UPSERT',\r\n          'CONTACTS_UPDATE',\r\n          'PRESENCE_UPDATE',\r\n          'CHATS_SET',\r\n          'CHATS_UPSERT',\r\n          'CHATS_UPDATE',\r\n          'CHATS_DELETE',\r\n          'GROUPS_UPSERT',\r\n          'GROUP_UPDATE',\r\n          'GROUP_PARTICIPANTS_UPDATE',\r\n          'CONNECTION_UPDATE',\r\n          'LABELS_EDIT',\r\n          'LABELS_ASSOCIATION',\r\n          'CALL',\r\n          'TYPEBOT_START',\r\n          'TYPEBOT_CHANGE_STATUS',\r\n        ],\r\n      },\r\n    },\r\n    // RabbitMQ\r\n    rabbitmqEnabled: { type: 'boolean' },\r\n    rabbitmqEvents: {\r\n      type: 'array',\r\n      minItems: 0,\r\n      items: {\r\n        type: 'string',\r\n        enum: [\r\n          'APPLICATION_STARTUP',\r\n          'QRCODE_UPDATED',\r\n          'MESSAGES_SET',\r\n          'MESSAGES_UPSERT',\r\n          'MESSAGES_EDITED',\r\n          'MESSAGES_UPDATE',\r\n          'MESSAGES_DELETE',\r\n          'SEND_MESSAGE',\r\n          'CONTACTS_SET',\r\n          'CONTACTS_UPSERT',\r\n          'CONTACTS_UPDATE',\r\n          'PRESENCE_UPDATE',\r\n          'CHATS_SET',\r\n          'CHATS_UPSERT',\r\n          'CHATS_UPDATE',\r\n          'CHATS_DELETE',\r\n          'GROUPS_UPSERT',\r\n          'GROUP_UPDATE',\r\n          'GROUP_PARTICIPANTS_UPDATE',\r\n          'CONNECTION_UPDATE',\r\n          'LABELS_EDIT',\r\n          'LABELS_ASSOCIATION',\r\n          'CALL',\r\n          'TYPEBOT_START',\r\n          'TYPEBOT_CHANGE_STATUS',\r\n        ],\r\n      },\r\n    },\r\n    // SQS\r\n    sqsEnabled: { type: 'boolean' },\r\n    sqsEvents: {\r\n      type: 'array',\r\n      minItems: 0,\r\n      items: {\r\n        type: 'string',\r\n        enum: [\r\n          'APPLICATION_STARTUP',\r\n          'QRCODE_UPDATED',\r\n          'MESSAGES_SET',\r\n          'MESSAGES_UPSERT',\r\n          'MESSAGES_EDITED',\r\n          'MESSAGES_UPDATE',\r\n          'MESSAGES_DELETE',\r\n          'SEND_MESSAGE',\r\n          'CONTACTS_SET',\r\n          'CONTACTS_UPSERT',\r\n          'CONTACTS_UPDATE',\r\n          'PRESENCE_UPDATE',\r\n          'CHATS_SET',\r\n          'CHATS_UPSERT',\r\n          'CHATS_UPDATE',\r\n          'CHATS_DELETE',\r\n          'GROUPS_UPSERT',\r\n          'GROUP_UPDATE',\r\n          'GROUP_PARTICIPANTS_UPDATE',\r\n          'CONNECTION_UPDATE',\r\n          'LABELS_EDIT',\r\n          'LABELS_ASSOCIATION',\r\n          'CALL',\r\n          'TYPEBOT_START',\r\n          'TYPEBOT_CHANGE_STATUS',\r\n        ],\r\n      },\r\n    },\r\n    // Chatwoot\r\n    chatwootAccountId: { type: 'string' },\r\n    chatwootToken: { type: 'string' },\r\n    chatwootUrl: { type: 'string' },\r\n    chatwootSignMsg: { type: 'boolean' },\r\n    chatwootReopenConversation: { type: 'boolean' },\r\n    chatwootConversationPending: { type: 'boolean' },\r\n    chatwootImportContacts: { type: 'boolean' },\r\n    chatwootNameInbox: { type: 'string' },\r\n    chatwootMergeBrazilContacts: { type: 'boolean' },\r\n    chatwootImportMessages: { type: 'boolean' },\r\n    chatwootDaysLimitImportMessages: { type: 'number' },\r\n  },\r\n  ...isNotEmpty('instanceName'),\r\n};\r\n\r\nexport const presenceOnlySchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    presence: {\r\n      type: 'string',\r\n      enum: ['unavailable', 'available', 'composing', 'recording', 'paused'],\r\n    },\r\n  },\r\n  required: ['presence'],\r\n};\r\n","import { JSONSchema7, JSONSchema7Definition } from 'json-schema';\r\nimport { v4 } from 'uuid';\r\n\r\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\r\n  const properties = {};\r\n  propertyNames.forEach(\r\n    (property) =>\r\n      (properties[property] = {\r\n        minLength: 1,\r\n        description: `The \"${property}\" cannot be empty`,\r\n      }),\r\n  );\r\n  return {\r\n    if: {\r\n      propertyNames: {\r\n        enum: [...propertyNames],\r\n      },\r\n    },\r\n    then: { properties },\r\n  };\r\n};\r\n\r\nconst numberDefinition: JSONSchema7Definition = {\r\n  type: 'string',\r\n  description: 'Invalid format',\r\n};\r\n\r\nexport const handleLabelSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    labelId: { type: 'string' },\r\n    action: { type: 'string', enum: ['add', 'remove'] },\r\n  },\r\n  required: ['number', 'labelId', 'action'],\r\n  ...isNotEmpty('number', 'labelId', 'action'),\r\n};\r\n","import { JSONSchema7, JSONSchema7Definition } from 'json-schema';\r\nimport { v4 } from 'uuid';\r\n\r\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\r\n  const properties = {};\r\n  propertyNames.forEach(\r\n    (property) =>\r\n      (properties[property] = {\r\n        minLength: 1,\r\n        description: `The \"${property}\" cannot be empty`,\r\n      }),\r\n  );\r\n  return {\r\n    if: {\r\n      propertyNames: {\r\n        enum: [...propertyNames],\r\n      },\r\n    },\r\n    then: { properties },\r\n  };\r\n};\r\n\r\nconst numberDefinition: JSONSchema7Definition = {\r\n  type: 'string',\r\n  description: 'Invalid format',\r\n};\r\n\r\nexport const templateMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    name: { type: 'string' },\r\n    language: { type: 'string' },\r\n    components: { type: 'array' },\r\n    webhookUrl: { type: 'string' },\r\n  },\r\n  required: ['name', 'language'],\r\n};\r\n\r\nconst quotedOptionsSchema: JSONSchema7 = {\r\n  properties: {\r\n    key: {\r\n      type: 'object',\r\n      properties: {\r\n        id: { type: 'string' },\r\n        remoteJid: { type: 'string' },\r\n        fromMe: { type: 'boolean', enum: [true, false] },\r\n      },\r\n      required: ['id'],\r\n      ...isNotEmpty('id'),\r\n    },\r\n    message: { type: 'object' },\r\n  },\r\n};\r\n\r\nexport const offerCallSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    isVideo: { type: 'boolean', enum: [true, false] },\r\n    callDuration: { type: 'integer', minimum: 1, maximum: 15 },\r\n  },\r\n  required: ['number', 'callDuration'],\r\n};\r\n\r\nexport const textMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    text: { type: 'string' },\r\n    linkPreview: { type: 'boolean' },\r\n    delay: {\r\n      type: 'integer',\r\n      description: 'Enter a value in milliseconds',\r\n    },\r\n    quoted: { ...quotedOptionsSchema },\r\n    everyOne: { type: 'boolean', enum: [true, false] },\r\n    mentioned: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        pattern: '^\\\\d+',\r\n        description: '\"mentioned\" must be an array of numeric strings',\r\n      },\r\n    },\r\n  },\r\n  required: ['number', 'text'],\r\n};\r\n\r\nexport const mediaMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    mediatype: { type: 'string', enum: ['image', 'document', 'video', 'audio'] },\r\n    mimetype: { type: 'string' },\r\n    media: { type: 'string' },\r\n    fileName: { type: 'string' },\r\n    caption: { type: 'string' },\r\n    delay: {\r\n      type: 'integer',\r\n      description: 'Enter a value in milliseconds',\r\n    },\r\n    quoted: { ...quotedOptionsSchema },\r\n    everyOne: { type: 'boolean', enum: [true, false] },\r\n    mentioned: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        pattern: '^\\\\d+',\r\n        description: '\"mentioned\" must be an array of numeric strings',\r\n      },\r\n    },\r\n  },\r\n  required: ['number', 'mediatype'],\r\n};\r\n\r\nexport const ptvMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    video: { type: 'string' },\r\n    delay: {\r\n      type: 'integer',\r\n      description: 'Enter a value in milliseconds',\r\n    },\r\n    quoted: { ...quotedOptionsSchema },\r\n    everyOne: { type: 'boolean', enum: [true, false] },\r\n    mentioned: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        pattern: '^\\\\d+',\r\n        description: '\"mentioned\" must be an array of numeric strings',\r\n      },\r\n    },\r\n  },\r\n  required: ['number'],\r\n};\r\n\r\nexport const audioMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    audio: { type: 'string' },\r\n    delay: {\r\n      type: 'integer',\r\n      description: 'Enter a value in milliseconds',\r\n    },\r\n    quoted: { ...quotedOptionsSchema },\r\n    everyOne: { type: 'boolean', enum: [true, false] },\r\n    mentioned: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        pattern: '^\\\\d+',\r\n        description: '\"mentioned\" must be an array of numeric strings',\r\n      },\r\n    },\r\n  },\r\n  required: ['number'],\r\n};\r\n\r\nexport const statusMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    type: { type: 'string', enum: ['text', 'image', 'audio', 'video'] },\r\n    content: { type: 'string' },\r\n    caption: { type: 'string' },\r\n    backgroundColor: { type: 'string' },\r\n    font: { type: 'integer', minimum: 0, maximum: 5 },\r\n    statusJidList: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        pattern: '^\\\\d+',\r\n        description: '\"statusJidList\" must be an array of numeric strings',\r\n      },\r\n    },\r\n    allContacts: { type: 'boolean', enum: [true, false] },\r\n  },\r\n  required: ['type'],\r\n};\r\n\r\nexport const stickerMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    sticker: { type: 'string' },\r\n    delay: {\r\n      type: 'integer',\r\n      description: 'Enter a value in milliseconds',\r\n    },\r\n    quoted: { ...quotedOptionsSchema },\r\n    everyOne: { type: 'boolean', enum: [true, false] },\r\n    mentioned: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        pattern: '^\\\\d+',\r\n        description: '\"mentioned\" must be an array of numeric strings',\r\n      },\r\n    },\r\n  },\r\n  required: ['number'],\r\n};\r\n\r\nexport const locationMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    latitude: { type: 'number' },\r\n    longitude: { type: 'number' },\r\n    name: { type: 'string' },\r\n    address: { type: 'string' },\r\n    delay: {\r\n      type: 'integer',\r\n      description: 'Enter a value in milliseconds',\r\n    },\r\n    quoted: { ...quotedOptionsSchema },\r\n    everyOne: { type: 'boolean', enum: [true, false] },\r\n    mentioned: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        pattern: '^\\\\d+',\r\n        description: '\"mentioned\" must be an array of numeric strings',\r\n      },\r\n    },\r\n  },\r\n  required: ['number', 'latitude', 'longitude', 'name', 'address'],\r\n};\r\n\r\nexport const contactMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    contact: {\r\n      type: 'array',\r\n      items: {\r\n        type: 'object',\r\n        properties: {\r\n          fullName: { type: 'string' },\r\n          wuid: {\r\n            type: 'string',\r\n            minLength: 10,\r\n            pattern: '\\\\d+',\r\n            description: '\"wuid\" must be a numeric string',\r\n          },\r\n          phoneNumber: { type: 'string', minLength: 10 },\r\n          organization: { type: 'string' },\r\n          email: { type: 'string' },\r\n          url: { type: 'string' },\r\n        },\r\n        required: ['fullName', 'phoneNumber'],\r\n        ...isNotEmpty('fullName'),\r\n      },\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n    },\r\n  },\r\n  required: ['number', 'contact'],\r\n};\r\n\r\nexport const reactionMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    key: {\r\n      type: 'object',\r\n      properties: {\r\n        id: { type: 'string' },\r\n        remoteJid: { type: 'string' },\r\n        fromMe: { type: 'boolean', enum: [true, false] },\r\n      },\r\n      required: ['id', 'remoteJid', 'fromMe'],\r\n      ...isNotEmpty('id', 'remoteJid'),\r\n    },\r\n    reaction: { type: 'string' },\r\n  },\r\n  required: ['key', 'reaction'],\r\n};\r\n\r\nexport const pollMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    name: { type: 'string' },\r\n    selectableCount: { type: 'integer', minimum: 0, maximum: 10 },\r\n    values: {\r\n      type: 'array',\r\n      minItems: 2,\r\n      maxItems: 10,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n      },\r\n    },\r\n    delay: {\r\n      type: 'integer',\r\n      description: 'Enter a value in milliseconds',\r\n    },\r\n    quoted: { ...quotedOptionsSchema },\r\n    everyOne: { type: 'boolean', enum: [true, false] },\r\n    mentioned: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        pattern: '^\\\\d+',\r\n        description: '\"mentioned\" must be an array of numeric strings',\r\n      },\r\n    },\r\n  },\r\n  required: ['number', 'name', 'selectableCount', 'values'],\r\n};\r\n\r\nexport const listMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    title: { type: 'string' },\r\n    description: { type: 'string' },\r\n    footerText: { type: 'string' },\r\n    buttonText: { type: 'string' },\r\n    sections: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'object',\r\n        properties: {\r\n          title: { type: 'string' },\r\n          rows: {\r\n            type: 'array',\r\n            minItems: 1,\r\n            uniqueItems: true,\r\n            items: {\r\n              type: 'object',\r\n              properties: {\r\n                title: { type: 'string' },\r\n                description: { type: 'string' },\r\n                rowId: { type: 'string' },\r\n              },\r\n              required: ['title', 'rowId'],\r\n              ...isNotEmpty('title', 'description', 'rowId'),\r\n            },\r\n          },\r\n        },\r\n        required: ['title', 'rows'],\r\n        ...isNotEmpty('title'),\r\n      },\r\n    },\r\n    delay: {\r\n      type: 'integer',\r\n      description: 'Enter a value in milliseconds',\r\n    },\r\n    quoted: { ...quotedOptionsSchema },\r\n    everyOne: { type: 'boolean', enum: [true, false] },\r\n    mentioned: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        pattern: '^\\\\d+',\r\n        description: '\"mentioned\" must be an array of numeric strings',\r\n      },\r\n    },\r\n  },\r\n  required: ['number', 'title', 'footerText', 'buttonText', 'sections'],\r\n};\r\n\r\nexport const buttonsMessageSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    number: { ...numberDefinition },\r\n    thumbnailUrl: { type: 'string' },\r\n    title: { type: 'string' },\r\n    description: { type: 'string' },\r\n    footer: { type: 'string' },\r\n    buttons: {\r\n      type: 'array',\r\n      items: {\r\n        type: 'object',\r\n        properties: {\r\n          type: {\r\n            type: 'string',\r\n            enum: ['reply', 'copy', 'url', 'call', 'pix'],\r\n          },\r\n          displayText: { type: 'string' },\r\n          id: { type: 'string' },\r\n          url: { type: 'string' },\r\n          phoneNumber: { type: 'string' },\r\n          currency: { type: 'string' },\r\n          name: { type: 'string' },\r\n          keyType: { type: 'string', enum: ['phone', 'email', 'cpf', 'cnpj', 'random'] },\r\n          key: { type: 'string' },\r\n        },\r\n        required: ['type'],\r\n        ...isNotEmpty('id', 'url', 'phoneNumber'),\r\n      },\r\n    },\r\n    delay: {\r\n      type: 'integer',\r\n      description: 'Enter a value in milliseconds',\r\n    },\r\n    quoted: { ...quotedOptionsSchema },\r\n    everyOne: { type: 'boolean', enum: [true, false] },\r\n    mentioned: {\r\n      type: 'array',\r\n      minItems: 1,\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'string',\r\n        pattern: '^\\\\d+',\r\n        description: '\"mentioned\" must be an array of numeric strings',\r\n      },\r\n    },\r\n  },\r\n  required: ['number'],\r\n};\r\n","import { JSONSchema7 } from 'json-schema';\r\nimport { v4 } from 'uuid';\r\n\r\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\r\n  const properties = {};\r\n  propertyNames.forEach(\r\n    (property) =>\r\n      (properties[property] = {\r\n        minLength: 1,\r\n        description: `The \"${property}\" cannot be empty`,\r\n      }),\r\n  );\r\n  return {\r\n    if: {\r\n      propertyNames: {\r\n        enum: [...propertyNames],\r\n      },\r\n    },\r\n    then: { properties },\r\n  };\r\n};\r\n\r\nexport const proxySchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    enabled: { type: 'boolean', enum: [true, false] },\r\n    host: { type: 'string' },\r\n    port: { type: 'string' },\r\n    protocol: { type: 'string' },\r\n    username: { type: 'string' },\r\n    password: { type: 'string' },\r\n  },\r\n  required: ['enabled', 'host', 'port', 'protocol'],\r\n  ...isNotEmpty('enabled', 'host', 'port', 'protocol'),\r\n};\r\n","import { JSONSchema7 } from 'json-schema';\r\nimport { v4 } from 'uuid';\r\n\r\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\r\n  const properties = {};\r\n  propertyNames.forEach(\r\n    (property) =>\r\n      (properties[property] = {\r\n        minLength: 1,\r\n        description: `The \"${property}\" cannot be empty`,\r\n      }),\r\n  );\r\n  return {\r\n    if: {\r\n      propertyNames: {\r\n        enum: [...propertyNames],\r\n      },\r\n    },\r\n    then: { properties },\r\n  };\r\n};\r\n\r\nexport const settingsSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    rejectCall: { type: 'boolean' },\r\n    msgCall: { type: 'string' },\r\n    groupsIgnore: { type: 'boolean' },\r\n    alwaysOnline: { type: 'boolean' },\r\n    readMessages: { type: 'boolean' },\r\n    readStatus: { type: 'boolean' },\r\n    syncFullHistory: { type: 'boolean' },\r\n    wavoipToken: { type: 'string' },\r\n  },\r\n  required: ['rejectCall', 'groupsIgnore', 'alwaysOnline', 'readMessages', 'readStatus', 'syncFullHistory'],\r\n  ...isNotEmpty('rejectCall', 'groupsIgnore', 'alwaysOnline', 'readMessages', 'readStatus', 'syncFullHistory'),\r\n};\r\n","import { JSONSchema7 } from 'json-schema';\r\nimport { v4 } from 'uuid';\r\n\r\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\r\n  const properties = {};\r\n  propertyNames.forEach(\r\n    (property) =>\r\n      (properties[property] = {\r\n        minLength: 1,\r\n        description: `The \"${property}\" cannot be empty`,\r\n      }),\r\n  );\r\n  return {\r\n    if: {\r\n      propertyNames: {\r\n        enum: [...propertyNames],\r\n      },\r\n    },\r\n    then: { properties },\r\n  };\r\n};\r\n\r\nexport const templateSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    name: { type: 'string' },\r\n    category: { type: 'string', enum: ['AUTHENTICATION', 'MARKETING', 'UTILITY'] },\r\n    allowCategoryChange: { type: 'boolean' },\r\n    language: { type: 'string' },\r\n    components: { type: 'array' },\r\n    webhookUrl: { type: 'string' },\r\n  },\r\n  required: ['name', 'category', 'language', 'components'],\r\n  ...isNotEmpty('name', 'category', 'language', 'components'),\r\n};\r\n","import { JSONSchema7 } from 'json-schema';\r\nimport { v4 } from 'uuid';\r\n\r\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\r\n  const properties = {};\r\n  propertyNames.forEach(\r\n    (property) =>\r\n      (properties[property] = {\r\n        minLength: 1,\r\n        description: `The \"${property}\" cannot be empty`,\r\n      }),\r\n  );\r\n  return {\r\n    if: {\r\n      propertyNames: {\r\n        enum: [...propertyNames],\r\n      },\r\n    },\r\n    then: { properties },\r\n  };\r\n};\r\n\r\nexport const chatwootSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    enabled: { type: 'boolean', enum: [true, false] },\r\n    accountId: { type: 'string' },\r\n    token: { type: 'string' },\r\n    url: { type: 'string' },\r\n    signMsg: { type: 'boolean', enum: [true, false] },\r\n    signDelimiter: { type: ['string', 'null'] },\r\n    nameInbox: { type: ['string', 'null'] },\r\n    reopenConversation: { type: 'boolean', enum: [true, false] },\r\n    conversationPending: { type: 'boolean', enum: [true, false] },\r\n    autoCreate: { type: 'boolean', enum: [true, false] },\r\n    importContacts: { type: 'boolean', enum: [true, false] },\r\n    mergeBrazilContacts: { type: 'boolean', enum: [true, false] },\r\n    importMessages: { type: 'boolean', enum: [true, false] },\r\n    daysLimitImportMessages: { type: 'number' },\r\n    ignoreJids: { type: 'array', items: { type: 'string' } },\r\n  },\r\n  required: ['enabled', 'accountId', 'token', 'url', 'signMsg', 'reopenConversation', 'conversationPending'],\r\n  ...isNotEmpty('enabled', 'accountId', 'token', 'url', 'signMsg', 'reopenConversation', 'conversationPending'),\r\n};\r\n","import { JSONSchema7 } from 'json-schema';\r\nimport { v4 } from 'uuid';\r\n\r\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\r\n  const properties = {};\r\n  propertyNames.forEach(\r\n    (property) =>\r\n      (properties[property] = {\r\n        minLength: 1,\r\n        description: `The \"${property}\" cannot be empty`,\r\n      }),\r\n  );\r\n  return {\r\n    if: {\r\n      propertyNames: {\r\n        enum: [...propertyNames],\r\n      },\r\n    },\r\n    then: { properties },\r\n  };\r\n};\r\n\r\nexport const difySchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    enabled: { type: 'boolean' },\r\n    description: { type: 'string' },\r\n    botType: { type: 'string', enum: ['chatBot', 'textGenerator', 'agent', 'workflow'] },\r\n    apiUrl: { type: 'string' },\r\n    apiKey: { type: 'string' },\r\n    triggerType: { type: 'string', enum: ['all', 'keyword', 'none', 'advanced'] },\r\n    triggerOperator: { type: 'string', enum: ['equals', 'contains', 'startsWith', 'endsWith', 'regex'] },\r\n    triggerValue: { type: 'string' },\r\n    expire: { type: 'integer' },\r\n    keywordFinish: { type: 'string' },\r\n    delayMessage: { type: 'integer' },\r\n    unknownMessage: { type: 'string' },\r\n    listeningFromMe: { type: 'boolean' },\r\n    stopBotFromMe: { type: 'boolean' },\r\n    keepOpen: { type: 'boolean' },\r\n    debounceTime: { type: 'integer' },\r\n    ignoreJids: { type: 'array', items: { type: 'string' } },\r\n    splitMessages: { type: 'boolean' },\r\n    timePerChar: { type: 'integer' },\r\n  },\r\n  required: ['enabled', 'botType', 'triggerType'],\r\n  ...isNotEmpty('enabled', 'botType', 'triggerType'),\r\n};\r\n\r\nexport const difyStatusSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    remoteJid: { type: 'string' },\r\n    status: { type: 'string', enum: ['opened', 'closed', 'paused', 'delete'] },\r\n  },\r\n  required: ['remoteJid', 'status'],\r\n  ...isNotEmpty('remoteJid', 'status'),\r\n};\r\n\r\nexport const difySettingSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    expire: { type: 'integer' },\r\n    keywordFinish: { type: 'string' },\r\n    delayMessage: { type: 'integer' },\r\n    unknownMessage: { type: 'string' },\r\n    listeningFromMe: { type: 'boolean' },\r\n    stopBotFromMe: { type: 'boolean' },\r\n    keepOpen: { type: 'boolean' },\r\n    debounceTime: { type: 'integer' },\r\n    ignoreJids: { type: 'array', items: { type: 'string' } },\r\n    difyIdFallback: { type: 'string' },\r\n    splitMessages: { type: 'boolean' },\r\n    timePerChar: { type: 'integer' },\r\n  },\r\n  required: [\r\n    'expire',\r\n    'keywordFinish',\r\n    'delayMessage',\r\n    'unknownMessage',\r\n    'listeningFromMe',\r\n    'stopBotFromMe',\r\n    'keepOpen',\r\n    'debounceTime',\r\n    'ignoreJids',\r\n    'splitMessages',\r\n    'timePerChar',\r\n  ],\r\n  ...isNotEmpty(\r\n    'expire',\r\n    'keywordFinish',\r\n    'delayMessage',\r\n    'unknownMessage',\r\n    'listeningFromMe',\r\n    'stopBotFromMe',\r\n    'keepOpen',\r\n    'debounceTime',\r\n    'ignoreJids',\r\n    'splitMessages',\r\n    'timePerChar',\r\n  ),\r\n};\r\n\r\nexport const difyIgnoreJidSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    remoteJid: { type: 'string' },\r\n    action: { type: 'string', enum: ['add', 'remove'] },\r\n  },\r\n  required: ['remoteJid', 'action'],\r\n  ...isNotEmpty('remoteJid', 'action'),\r\n};\r\n","import { JSONSchema7 } from 'json-schema';\r\nimport { v4 } from 'uuid';\r\n\r\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\r\n  const properties = {};\r\n  propertyNames.forEach(\r\n    (property) =>\r\n      (properties[property] = {\r\n        minLength: 1,\r\n        description: `The \"${property}\" cannot be empty`,\r\n      }),\r\n  );\r\n  return {\r\n    if: {\r\n      propertyNames: {\r\n        enum: [...propertyNames],\r\n      },\r\n    },\r\n    then: { properties },\r\n  };\r\n};\r\n\r\nexport const evolutionBotSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    enabled: { type: 'boolean' },\r\n    description: { type: 'string' },\r\n    apiUrl: { type: 'string' },\r\n    apiKey: { type: 'string' },\r\n    triggerType: { type: 'string', enum: ['all', 'keyword', 'none', 'advanced'] },\r\n    triggerOperator: { type: 'string', enum: ['equals', 'contains', 'startsWith', 'endsWith', 'regex'] },\r\n    triggerValue: { type: 'string' },\r\n    expire: { type: 'integer' },\r\n    keywordFinish: { type: 'string' },\r\n    delayMessage: { type: 'integer' },\r\n    unknownMessage: { type: 'string' },\r\n    listeningFromMe: { type: 'boolean' },\r\n    stopBotFromMe: { type: 'boolean' },\r\n    keepOpen: { type: 'boolean' },\r\n    debounceTime: { type: 'integer' },\r\n    ignoreJids: { type: 'array', items: { type: 'string' } },\r\n    splitMessages: { type: 'boolean' },\r\n    timePerChar: { type: 'integer' },\r\n  },\r\n  required: ['enabled', 'apiUrl', 'triggerType'],\r\n  ...isNotEmpty('enabled', 'apiUrl', 'triggerType'),\r\n};\r\n\r\nexport const evolutionBotStatusSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    remoteJid: { type: 'string' },\r\n    status: { type: 'string', enum: ['opened', 'closed', 'paused', 'delete'] },\r\n  },\r\n  required: ['remoteJid', 'status'],\r\n  ...isNotEmpty('remoteJid', 'status'),\r\n};\r\n\r\nexport const evolutionBotSettingSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    expire: { type: 'integer' },\r\n    keywordFinish: { type: 'string' },\r\n    delayMessage: { type: 'integer' },\r\n    unknownMessage: { type: 'string' },\r\n    listeningFromMe: { type: 'boolean' },\r\n    stopBotFromMe: { type: 'boolean' },\r\n    keepOpen: { type: 'boolean' },\r\n    debounceTime: { type: 'integer' },\r\n    ignoreJids: { type: 'array', items: { type: 'string' } },\r\n    botIdFallback: { type: 'string' },\r\n    splitMessages: { type: 'boolean' },\r\n    timePerChar: { type: 'integer' },\r\n  },\r\n  required: [\r\n    'expire',\r\n    'keywordFinish',\r\n    'delayMessage',\r\n    'unknownMessage',\r\n    'listeningFromMe',\r\n    'stopBotFromMe',\r\n    'keepOpen',\r\n    'debounceTime',\r\n    'ignoreJids',\r\n    'splitMessages',\r\n    'timePerChar',\r\n  ],\r\n  ...isNotEmpty(\r\n    'expire',\r\n    'keywordFinish',\r\n    'delayMessage',\r\n    'unknownMessage',\r\n    'listeningFromMe',\r\n    'stopBotFromMe',\r\n    'keepOpen',\r\n    'debounceTime',\r\n    'ignoreJids',\r\n    'splitMessages',\r\n    'timePerChar',\r\n  ),\r\n};\r\n\r\nexport const evolutionBotIgnoreJidSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    remoteJid: { type: 'string' },\r\n    action: { type: 'string', enum: ['add', 'remove'] },\r\n  },\r\n  required: ['remoteJid', 'action'],\r\n  ...isNotEmpty('remoteJid', 'action'),\r\n};\r\n","import { JSONSchema7 } from 'json-schema';\r\nimport { v4 } from 'uuid';\r\n\r\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\r\n  const properties = {};\r\n  propertyNames.forEach(\r\n    (property) =>\r\n      (properties[property] = {\r\n        minLength: 1,\r\n        description: `The \"${property}\" cannot be empty`,\r\n      }),\r\n  );\r\n  return {\r\n    if: {\r\n      propertyNames: {\r\n        enum: [...propertyNames],\r\n      },\r\n    },\r\n    then: { properties },\r\n  };\r\n};\r\n\r\nexport const flowiseSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    enabled: { type: 'boolean' },\r\n    description: { type: 'string' },\r\n    apiUrl: { type: 'string' },\r\n    apiKey: { type: 'string' },\r\n    triggerType: { type: 'string', enum: ['all', 'keyword', 'none', 'advanced'] },\r\n    triggerOperator: { type: 'string', enum: ['equals', 'contains', 'startsWith', 'endsWith', 'regex'] },\r\n    triggerValue: { type: 'string' },\r\n    expire: { type: 'integer' },\r\n    keywordFinish: { type: 'string' },\r\n    delayMessage: { type: 'integer' },\r\n    unknownMessage: { type: 'string' },\r\n    listeningFromMe: { type: 'boolean' },\r\n    stopBotFromMe: { type: 'boolean' },\r\n    keepOpen: { type: 'boolean' },\r\n    debounceTime: { type: 'integer' },\r\n    ignoreJids: { type: 'array', items: { type: 'string' } },\r\n  },\r\n  required: ['enabled', 'apiUrl', 'triggerType'],\r\n  ...isNotEmpty('enabled', 'apiUrl', 'triggerType'),\r\n};\r\n\r\nexport const flowiseStatusSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    remoteJid: { type: 'string' },\r\n    status: { type: 'string', enum: ['opened', 'closed', 'paused', 'delete'] },\r\n  },\r\n  required: ['remoteJid', 'status'],\r\n  ...isNotEmpty('remoteJid', 'status'),\r\n};\r\n\r\nexport const flowiseSettingSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    expire: { type: 'integer' },\r\n    keywordFinish: { type: 'string' },\r\n    delayMessage: { type: 'integer' },\r\n    unknownMessage: { type: 'string' },\r\n    listeningFromMe: { type: 'boolean' },\r\n    stopBotFromMe: { type: 'boolean' },\r\n    keepOpen: { type: 'boolean' },\r\n    debounceTime: { type: 'integer' },\r\n    ignoreJids: { type: 'array', items: { type: 'string' } },\r\n    botIdFallback: { type: 'string' },\r\n  },\r\n  required: [\r\n    'expire',\r\n    'keywordFinish',\r\n    'delayMessage',\r\n    'unknownMessage',\r\n    'listeningFromMe',\r\n    'stopBotFromMe',\r\n    'keepOpen',\r\n    'debounceTime',\r\n    'ignoreJids',\r\n  ],\r\n  ...isNotEmpty(\r\n    'expire',\r\n    'keywordFinish',\r\n    'delayMessage',\r\n    'unknownMessage',\r\n    'listeningFromMe',\r\n    'stopBotFromMe',\r\n    'keepOpen',\r\n    'debounceTime',\r\n    'ignoreJids',\r\n  ),\r\n};\r\n\r\nexport const flowiseIgnoreJidSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    remoteJid: { type: 'string' },\r\n    action: { type: 'string', enum: ['add', 'remove'] },\r\n  },\r\n  required: ['remoteJid', 'action'],\r\n  ...isNotEmpty('remoteJid', 'action'),\r\n};\r\n","import { JSONSchema7 } from 'json-schema';\r\nimport { v4 } from 'uuid';\r\n\r\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\r\n  const properties = {};\r\n  propertyNames.forEach(\r\n    (property) =>\r\n      (properties[property] = {\r\n        minLength: 1,\r\n        description: `The \"${property}\" cannot be empty`,\r\n      }),\r\n  );\r\n  return {\r\n    if: {\r\n      propertyNames: {\r\n        enum: [...propertyNames],\r\n      },\r\n    },\r\n    then: { properties },\r\n  };\r\n};\r\n\r\nexport const openaiSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    enabled: { type: 'boolean' },\r\n    description: { type: 'string' },\r\n    openaiCredsId: { type: 'string' },\r\n    botType: { type: 'string', enum: ['assistant', 'chatCompletion'] },\r\n    assistantId: { type: 'string' },\r\n    functionUrl: { type: 'string' },\r\n    model: { type: 'string' },\r\n    systemMessages: { type: 'array', items: { type: 'string' } },\r\n    assistantMessages: { type: 'array', items: { type: 'string' } },\r\n    userMessages: { type: 'array', items: { type: 'string' } },\r\n    maxTokens: { type: 'integer' },\r\n    triggerType: { type: 'string', enum: ['all', 'keyword', 'none', 'advanced'] },\r\n    triggerOperator: { type: 'string', enum: ['equals', 'contains', 'startsWith', 'endsWith', 'regex'] },\r\n    triggerValue: { type: 'string' },\r\n    expire: { type: 'integer' },\r\n    keywordFinish: { type: 'string' },\r\n    delayMessage: { type: 'integer' },\r\n    unknownMessage: { type: 'string' },\r\n    listeningFromMe: { type: 'boolean' },\r\n    stopBotFromMe: { type: 'boolean' },\r\n    keepOpen: { type: 'boolean' },\r\n    debounceTime: { type: 'integer' },\r\n    ignoreJids: { type: 'array', items: { type: 'string' } },\r\n  },\r\n  required: ['enabled', 'openaiCredsId', 'botType', 'triggerType'],\r\n  ...isNotEmpty('enabled', 'openaiCredsId', 'botType', 'triggerType'),\r\n};\r\n\r\nexport const openaiCredsSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    name: { type: 'string' },\r\n    apiKey: { type: 'string' },\r\n  },\r\n  required: ['name', 'apiKey'],\r\n  ...isNotEmpty('name', 'apiKey'),\r\n};\r\n\r\nexport const openaiStatusSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    remoteJid: { type: 'string' },\r\n    status: { type: 'string', enum: ['opened', 'closed', 'paused', 'delete'] },\r\n  },\r\n  required: ['remoteJid', 'status'],\r\n  ...isNotEmpty('remoteJid', 'status'),\r\n};\r\n\r\nexport const openaiSettingSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    openaiCredsId: { type: 'string' },\r\n    expire: { type: 'integer' },\r\n    keywordFinish: { type: 'string' },\r\n    delayMessage: { type: 'integer' },\r\n    unknownMessage: { type: 'string' },\r\n    listeningFromMe: { type: 'boolean' },\r\n    stopBotFromMe: { type: 'boolean' },\r\n    keepOpen: { type: 'boolean' },\r\n    debounceTime: { type: 'integer' },\r\n    speechToText: { type: 'boolean' },\r\n    ignoreJids: { type: 'array', items: { type: 'string' } },\r\n    openaiIdFallback: { type: 'string' },\r\n  },\r\n  required: [\r\n    'openaiCredsId',\r\n    'expire',\r\n    'keywordFinish',\r\n    'delayMessage',\r\n    'unknownMessage',\r\n    'listeningFromMe',\r\n    'stopBotFromMe',\r\n    'keepOpen',\r\n    'debounceTime',\r\n    'ignoreJids',\r\n  ],\r\n  ...isNotEmpty(\r\n    'openaiCredsId',\r\n    'expire',\r\n    'keywordFinish',\r\n    'delayMessage',\r\n    'unknownMessage',\r\n    'listeningFromMe',\r\n    'stopBotFromMe',\r\n    'keepOpen',\r\n    'debounceTime',\r\n    'ignoreJids',\r\n  ),\r\n};\r\n\r\nexport const openaiIgnoreJidSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    remoteJid: { type: 'string' },\r\n    action: { type: 'string', enum: ['add', 'remove'] },\r\n  },\r\n  required: ['remoteJid', 'action'],\r\n  ...isNotEmpty('remoteJid', 'action'),\r\n};\r\n","import { JSONSchema7 } from 'json-schema';\r\nimport { v4 } from 'uuid';\r\n\r\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\r\n  const properties = {};\r\n  propertyNames.forEach(\r\n    (property) =>\r\n      (properties[property] = {\r\n        minLength: 1,\r\n        description: `The \"${property}\" cannot be empty`,\r\n      }),\r\n  );\r\n  return {\r\n    if: {\r\n      propertyNames: {\r\n        enum: [...propertyNames],\r\n      },\r\n    },\r\n    then: { properties },\r\n  };\r\n};\r\n\r\nexport const typebotSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    enabled: { type: 'boolean' },\r\n    description: { type: 'string' },\r\n    url: { type: 'string' },\r\n    typebot: { type: 'string' },\r\n    triggerType: { type: 'string', enum: ['all', 'keyword', 'none', 'advanced'] },\r\n    triggerOperator: { type: 'string', enum: ['equals', 'contains', 'startsWith', 'endsWith', 'regex'] },\r\n    triggerValue: { type: 'string' },\r\n    expire: { type: 'integer' },\r\n    keywordFinish: { type: 'string' },\r\n    delayMessage: { type: 'integer' },\r\n    unknownMessage: { type: 'string' },\r\n    listeningFromMe: { type: 'boolean' },\r\n    stopBotFromMe: { type: 'boolean' },\r\n    ignoreJids: { type: 'array', items: { type: 'string' } },\r\n  },\r\n  required: ['enabled', 'url', 'typebot', 'triggerType'],\r\n  ...isNotEmpty('enabled', 'url', 'typebot', 'triggerType'),\r\n};\r\n\r\nexport const typebotStatusSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    remoteJid: { type: 'string' },\r\n    status: { type: 'string', enum: ['opened', 'closed', 'paused', 'delete'] },\r\n  },\r\n  required: ['remoteJid', 'status'],\r\n  ...isNotEmpty('remoteJid', 'status'),\r\n};\r\n\r\nexport const typebotStartSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    remoteJid: { type: 'string' },\r\n    url: { type: 'string' },\r\n    typebot: { type: 'string' },\r\n  },\r\n  required: ['remoteJid', 'url', 'typebot'],\r\n  ...isNotEmpty('remoteJid', 'url', 'typebot'),\r\n};\r\n\r\nexport const typebotSettingSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    expire: { type: 'integer' },\r\n    keywordFinish: { type: 'string' },\r\n    delayMessage: { type: 'integer' },\r\n    unknownMessage: { type: 'string' },\r\n    listeningFromMe: { type: 'boolean' },\r\n    stopBotFromMe: { type: 'boolean' },\r\n    keepOpen: { type: 'boolean' },\r\n    debounceTime: { type: 'integer' },\r\n    typebotIdFallback: { type: 'string' },\r\n    ignoreJids: { type: 'array', items: { type: 'string' } },\r\n  },\r\n  required: ['expire', 'keywordFinish', 'delayMessage', 'unknownMessage', 'listeningFromMe', 'stopBotFromMe'],\r\n  ...isNotEmpty('expire', 'keywordFinish', 'delayMessage', 'unknownMessage', 'listeningFromMe', 'stopBotFromMe'),\r\n};\r\n\r\nexport const typebotIgnoreJidSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    remoteJid: { type: 'string' },\r\n    action: { type: 'string', enum: ['add', 'remove'] },\r\n  },\r\n  required: ['remoteJid', 'action'],\r\n  ...isNotEmpty('remoteJid', 'action'),\r\n};\r\n","import { EventDto } from '@api/integrations/event/event.dto';\r\nimport { PrismaRepository } from '@api/repository/repository.service';\r\nimport { WAMonitoringService } from '@api/services/monitor.service';\r\nimport { wa } from '@api/types/wa.types';\r\n\r\nexport type EmitData = {\r\n  instanceName: string;\r\n  origin: string;\r\n  event: string;\r\n  data: any;\r\n  serverUrl: string;\r\n  dateTime: string;\r\n  sender: string;\r\n  apiKey?: string;\r\n  local?: boolean;\r\n  integration?: string[];\r\n};\r\n\r\nexport interface EventControllerInterface {\r\n  set(instanceName: string, data: any): Promise<any>;\r\n  get(instanceName: string): Promise<any>;\r\n  emit({ instanceName, origin, event, data, serverUrl, dateTime, sender, apiKey, local }: EmitData): Promise<void>;\r\n}\r\n\r\nexport class EventController {\r\n  public prismaRepository: PrismaRepository;\r\n  protected waMonitor: WAMonitoringService;\r\n  private integrationStatus: boolean;\r\n  private integrationName: string;\r\n\r\n  constructor(\r\n    prismaRepository: PrismaRepository,\r\n    waMonitor: WAMonitoringService,\r\n    integrationStatus: boolean,\r\n    integrationName: string,\r\n  ) {\r\n    this.prisma = prismaRepository;\r\n    this.monitor = waMonitor;\r\n    this.status = integrationStatus;\r\n    this.name = integrationName;\r\n  }\r\n\r\n  public set prisma(prisma: PrismaRepository) {\r\n    this.prismaRepository = prisma;\r\n  }\r\n\r\n  public get prisma() {\r\n    return this.prismaRepository;\r\n  }\r\n\r\n  public set monitor(waMonitor: WAMonitoringService) {\r\n    this.waMonitor = waMonitor;\r\n  }\r\n\r\n  public get monitor() {\r\n    return this.waMonitor;\r\n  }\r\n\r\n  public set name(name: string) {\r\n    this.integrationName = name;\r\n  }\r\n\r\n  public get name() {\r\n    return this.integrationName;\r\n  }\r\n\r\n  public set status(status: boolean) {\r\n    this.integrationStatus = status;\r\n  }\r\n\r\n  public get status() {\r\n    return this.integrationStatus;\r\n  }\r\n\r\n  public async set(instanceName: string, data: EventDto): Promise<wa.LocalEvent> {\r\n    if (!this.status) {\r\n      return;\r\n    }\r\n\r\n    if (!data[this.name]?.enabled) {\r\n      data[this.name].events = [];\r\n    } else {\r\n      if (0 === data[this.name].events.length) {\r\n        data[this.name].events = EventController.events;\r\n      }\r\n    }\r\n\r\n    return this.prisma[this.name].upsert({\r\n      where: {\r\n        instanceId: this.monitor.waInstances[instanceName].instanceId,\r\n      },\r\n      update: {\r\n        enabled: data[this.name]?.enabled,\r\n        events: data[this.name].events,\r\n      },\r\n      create: {\r\n        enabled: data[this.name]?.enabled,\r\n        events: data[this.name].events,\r\n        instanceId: this.monitor.waInstances[instanceName].instanceId,\r\n      },\r\n    });\r\n  }\r\n\r\n  public async get(instanceName: string): Promise<wa.LocalEvent> {\r\n    if (!this.status) {\r\n      return;\r\n    }\r\n\r\n    if (undefined === this.monitor.waInstances[instanceName]) {\r\n      return null;\r\n    }\r\n\r\n    const data = await this.prisma[this.name].findUnique({\r\n      where: {\r\n        instanceId: this.monitor.waInstances[instanceName].instanceId,\r\n      },\r\n    });\r\n\r\n    if (!data) {\r\n      return null;\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  public static readonly events = [\r\n    'APPLICATION_STARTUP',\r\n    'QRCODE_UPDATED',\r\n    'MESSAGES_SET',\r\n    'MESSAGES_UPSERT',\r\n    'MESSAGES_EDITED',\r\n    'MESSAGES_UPDATE',\r\n    'MESSAGES_DELETE',\r\n    'SEND_MESSAGE',\r\n    'CONTACTS_SET',\r\n    'CONTACTS_UPSERT',\r\n    'CONTACTS_UPDATE',\r\n    'PRESENCE_UPDATE',\r\n    'CHATS_SET',\r\n    'CHATS_UPSERT',\r\n    'CHATS_UPDATE',\r\n    'CHATS_DELETE',\r\n    'GROUPS_UPSERT',\r\n    'GROUP_UPDATE',\r\n    'GROUP_PARTICIPANTS_UPDATE',\r\n    'CONNECTION_UPDATE',\r\n    'LABELS_EDIT',\r\n    'LABELS_ASSOCIATION',\r\n    'CALL',\r\n    'TYPEBOT_START',\r\n    'TYPEBOT_CHANGE_STATUS',\r\n    'REMOVE_INSTANCE',\r\n    'LOGOUT_INSTANCE',\r\n  ];\r\n}\r\n","import { JSONSchema7 } from 'json-schema';\r\nimport { v4 } from 'uuid';\r\n\r\nimport { EventController } from '../event.controller';\r\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\r\n  const properties = {};\r\n  propertyNames.forEach(\r\n    (property) =>\r\n      (properties[property] = {\r\n        minLength: 1,\r\n        description: `The \"${property}\" cannot be empty`,\r\n      }),\r\n  );\r\n  return {\r\n    if: {\r\n      propertyNames: {\r\n        enum: [...propertyNames],\r\n      },\r\n    },\r\n    then: { properties },\r\n  };\r\n};\r\nexport const pusherSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    pusher: {\r\n      type: 'object',\r\n      properties: {\r\n        enabled: { type: 'boolean' },\r\n        appId: { type: 'string' },\r\n        key: { type: 'string' },\r\n        secret: { type: 'string' },\r\n        cluster: { type: 'string' },\r\n        useTLS: { type: 'boolean' },\r\n        events: {\r\n          type: 'array',\r\n          minItems: 0,\r\n          items: {\r\n            type: 'string',\r\n            enum: EventController.events,\r\n          },\r\n        },\r\n      },\r\n      required: ['enabled', 'appId', 'key', 'secret', 'cluster', 'useTLS'],\r\n      ...isNotEmpty('enabled', 'appId', 'key', 'secret', 'cluster', 'useTLS'),\r\n    },\r\n  },\r\n  required: ['pusher'],\r\n};\r\n","import { JSONSchema7 } from 'json-schema';\r\nimport { v4 } from 'uuid';\r\n\r\nimport { EventController } from '../event.controller';\r\n\r\nconst isNotEmpty = (...propertyNames: string[]): JSONSchema7 => {\r\n  const properties = {};\r\n  propertyNames.forEach(\r\n    (property) =>\r\n      (properties[property] = {\r\n        minLength: 1,\r\n        description: `The \"${property}\" cannot be empty`,\r\n      }),\r\n  );\r\n  return {\r\n    if: {\r\n      propertyNames: {\r\n        enum: [...propertyNames],\r\n      },\r\n    },\r\n    then: { properties },\r\n  };\r\n};\r\n\r\nexport const webhookSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    webhook: {\r\n      type: 'object',\r\n      properties: {\r\n        enabled: { type: 'boolean' },\r\n        url: { type: 'string' },\r\n        headers: { type: 'object' },\r\n        byEvents: { type: 'boolean' },\r\n        base64: { type: 'boolean' },\r\n        events: {\r\n          type: 'array',\r\n          minItems: 0,\r\n          items: {\r\n            type: 'string',\r\n            enum: EventController.events,\r\n          },\r\n        },\r\n      },\r\n      required: ['enabled', 'url'],\r\n      ...isNotEmpty('enabled', 'url'),\r\n    },\r\n  },\r\n  required: ['webhook'],\r\n};\r\n","import { JSONSchema7 } from 'json-schema';\r\nimport { v4 } from 'uuid';\r\n\r\nimport { EventController } from './event.controller';\r\n\r\nexport * from '@api/integrations/event/pusher/pusher.schema';\r\nexport * from '@api/integrations/event/webhook/webhook.schema';\r\n\r\nexport const eventSchema: JSONSchema7 = {\r\n  $id: v4(),\r\n  type: 'object',\r\n  properties: {\r\n    websocket: {\r\n      $ref: '#/$defs/event',\r\n    },\r\n    rabbitmq: {\r\n      $ref: '#/$defs/event',\r\n    },\r\n    sqs: {\r\n      $ref: '#/$defs/event',\r\n    },\r\n  },\r\n  $defs: {\r\n    event: {\r\n      type: 'object',\r\n      properties: {\r\n        enabled: { type: 'boolean', enum: [true, false] },\r\n        events: {\r\n          type: 'array',\r\n          minItems: 0,\r\n          items: {\r\n            type: 'string',\r\n            enum: EventController.events,\r\n          },\r\n        },\r\n      },\r\n      required: ['enabled'],\r\n    },\r\n  },\r\n};\r\n"],"mappings":"6iBAAA,IAAAA,GAAA,GAAAC,EAAAD,GAAA,6BAAAE,GAAA,sBAAAC,EAAA,uBAAAC,GAAA,oBAAAC,EAAA,yBAAAC,GAAA,mBAAAC,GAAA,yBAAAC,GAAA,0BAAAC,EAAA,sBAAAC,GAAA,wBAAAC,EAAA,wBAAAC,GAAA,eAAAC,GAAA,sBAAAC,GAAA,qBAAAC,GAAA,gBAAAC,GAAA,gCAAAC,GAAA,uBAAAC,GAAA,8BAAAC,GAAA,6BAAAC,GAAA,2BAAAC,GAAA,kBAAAC,GAAA,yBAAAC,GAAA,wBAAAC,GAAA,0BAAAC,GAAA,sBAAAC,GAAA,mBAAAC,GAAA,0BAAAC,GAAA,sBAAAC,GAAA,mBAAAC,GAAA,sBAAAC,GAAA,0BAAAC,GAAA,yBAAAC,EAAA,uBAAAC,GAAA,oBAAAC,EAAA,0BAAAC,EAAA,oBAAAC,GAAA,sBAAAC,GAAA,0BAAAC,GAAA,iBAAAC,GAAA,wBAAAC,GAAA,uBAAAC,GAAA,sBAAAC,GAAA,uBAAAC,GAAA,mBAAAC,EAAA,0BAAAC,EAAA,sBAAAC,EAAA,yBAAAC,EAAA,kBAAAC,GAAA,wBAAAC,EAAA,gBAAAC,GAAA,qBAAAC,GAAA,iBAAAC,GAAA,0BAAAC,GAAA,sBAAAC,EAAA,mBAAAC,GAAA,wBAAAC,GAAA,yBAAAC,GAAA,0BAAAC,GAAA,mBAAAC,GAAA,sBAAAC,GAAA,0BAAAC,GAAA,2BAAAC,GAAA,kBAAAC,GAAA,yBAAAC,GAAA,uBAAAC,GAAA,wBAAAC,GAAA,iCAAAC,GAAA,6BAAAC,GAAA,6BAAAC,GAAA,wBAAAC,EAAA,6BAAAC,GAAA,yBAAAC,GAAA,kBAAAC,GAAA,yBAAAC,IAAA,eAAAC,EAAA5E,ICAA,IAAA6E,EAAmB,qBACbC,EAAY,IAAI,WAAW,GAAG,EAEhCC,EAAUD,EAAU,OACT,SAARE,GAAuB,CAC5B,OAAID,EAAUD,EAAU,OAAS,KAC/B,EAAAG,QAAO,eAAeH,CAAS,EAC/BC,EAAU,GAGLD,EAAU,MAAMC,EAASA,GAAW,EAAE,CAC/C,CCLA,IAAMG,EAAY,CAAC,EAEnB,QAASC,EAAI,EAAGA,EAAI,IAAK,EAAEA,EACzBD,EAAU,MAAMC,EAAI,KAAO,SAAS,EAAE,EAAE,MAAM,CAAC,CAAC,EAG3C,SAASC,EAAgBC,EAAKC,EAAS,EAAG,CAG/C,OAAOJ,EAAUG,EAAIC,EAAS,CAAC,CAAC,EAAIJ,EAAUG,EAAIC,EAAS,CAAC,CAAC,EAAIJ,EAAUG,EAAIC,EAAS,CAAC,CAAC,EAAIJ,EAAUG,EAAIC,EAAS,CAAC,CAAC,EAAI,IAAMJ,EAAUG,EAAIC,EAAS,CAAC,CAAC,EAAIJ,EAAUG,EAAIC,EAAS,CAAC,CAAC,EAAI,IAAMJ,EAAUG,EAAIC,EAAS,CAAC,CAAC,EAAIJ,EAAUG,EAAIC,EAAS,CAAC,CAAC,EAAI,IAAMJ,EAAUG,EAAIC,EAAS,CAAC,CAAC,EAAIJ,EAAUG,EAAIC,EAAS,CAAC,CAAC,EAAI,IAAMJ,EAAUG,EAAIC,EAAS,EAAE,CAAC,EAAIJ,EAAUG,EAAIC,EAAS,EAAE,CAAC,EAAIJ,EAAUG,EAAIC,EAAS,EAAE,CAAC,EAAIJ,EAAUG,EAAIC,EAAS,EAAE,CAAC,EAAIJ,EAAUG,EAAIC,EAAS,EAAE,CAAC,EAAIJ,EAAUG,EAAIC,EAAS,EAAE,CAAC,CACnf,CChBA,IAAAC,EAAmB,qBACZC,EAAQ,CACb,WAAY,EAAAC,QAAO,UACrB,ECCA,SAASC,EAAGC,EAASC,EAAKC,EAAQ,CAChC,GAAIC,EAAO,YAAc,CAACF,GAAO,CAACD,EAChC,OAAOG,EAAO,WAAW,EAG3BH,EAAUA,GAAW,CAAC,EACtB,IAAMI,EAAOJ,EAAQ,SAAWA,EAAQ,KAAOK,GAAK,EAKpD,GAHAD,EAAK,CAAC,EAAIA,EAAK,CAAC,EAAI,GAAO,GAC3BA,EAAK,CAAC,EAAIA,EAAK,CAAC,EAAI,GAAO,IAEvBH,EAAK,CACPC,EAASA,GAAU,EAEnB,QAASI,EAAI,EAAGA,EAAI,GAAI,EAAEA,EACxBL,EAAIC,EAASI,CAAC,EAAIF,EAAKE,CAAC,EAG1B,OAAOL,CACT,CAEA,OAAOM,EAAgBH,CAAI,CAC7B,CAEA,IAAOI,EAAQT,ECzBf,IAAMU,EAAa,IAAIC,IAAyC,CAC9D,IAAMC,EAAa,CAAC,EACpB,OAAAD,EAAc,QACXE,GACED,EAAWC,CAAQ,EAAI,CACtB,UAAW,EACX,YAAa,QAAQA,CAAQ,mBAC/B,CACJ,EACO,CACL,GAAI,CACF,cAAe,CACb,KAAM,CAAC,GAAGF,CAAa,CACzB,CACF,EACA,KAAM,CAAE,WAAAC,CAAW,CACrB,CACF,EAEME,EAA0C,CAC9C,KAAM,SACN,YAAa,gBACf,EAEaC,EAAoC,CAC/C,IAAKC,EAAG,EACR,KAAM,SACN,WAAY,CACV,QAAS,CACP,KAAM,QACN,SAAU,EACV,YAAa,GACb,MAAO,CACL,KAAM,SACN,YAAa,+CACf,CACF,CACF,CACF,EAEaC,EAAiC,CAC5C,IAAKD,EAAG,EACR,KAAM,SACN,WAAY,CACV,aAAc,CACZ,KAAM,QACN,SAAU,EACV,YAAa,GACb,MAAO,CACL,WAAY,CACV,GAAI,CAAE,KAAM,QAAS,EACrB,OAAQ,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EAC/C,UAAW,CAAE,KAAM,QAAS,CAC9B,EACA,SAAU,CAAC,KAAM,SAAU,WAAW,EACtC,GAAGN,EAAW,KAAM,WAAW,CACjC,CACF,CACF,EACA,SAAU,CAAC,cAAc,CAC3B,EAEaQ,EAAiC,CAC5C,IAAKF,EAAG,EACR,KAAM,SACN,WAAY,CACV,KAAM,CAAE,KAAM,QAAS,EACvB,YAAa,CACX,KAAM,SACN,WAAY,CACV,IAAK,CACH,KAAM,SACN,WAAY,CACV,GAAI,CAAE,KAAM,QAAS,EACrB,UAAW,CAAE,KAAM,QAAS,EAC5B,OAAQ,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,CACjD,EACA,SAAU,CAAC,KAAM,SAAU,WAAW,EACtC,GAAGN,EAAW,KAAM,WAAW,CACjC,EACA,iBAAkB,CAAE,KAAM,UAAW,UAAW,CAAE,CACpD,EACA,SAAU,CAAC,KAAK,EAChB,GAAGA,EAAW,kBAAkB,CAClC,EACA,QAAS,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,CAClD,EACA,SAAU,CAAC,SAAS,CACtB,EAEaS,EAAoC,CAC/C,IAAKH,EAAG,EACR,KAAM,SACN,WAAY,CACV,KAAM,CAAE,KAAM,QAAS,EACvB,YAAa,CACX,KAAM,SACN,WAAY,CACV,IAAK,CACH,KAAM,SACN,WAAY,CACV,GAAI,CAAE,KAAM,QAAS,EACrB,UAAW,CAAE,KAAM,QAAS,EAC5B,OAAQ,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,CACjD,EACA,SAAU,CAAC,KAAM,SAAU,WAAW,EACtC,GAAGN,EAAW,KAAM,WAAW,CACjC,EACA,iBAAkB,CAAE,KAAM,UAAW,UAAW,CAAE,CACpD,EACA,SAAU,CAAC,KAAK,EAChB,GAAGA,EAAW,kBAAkB,CAClC,CACF,EACA,SAAU,CAAC,aAAa,CAC1B,EAEaU,EAAmC,CAC9C,IAAKJ,EAAG,EACR,KAAM,SACN,WAAY,CACV,GAAI,CAAE,KAAM,QAAS,EACrB,OAAQ,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EAC/C,UAAW,CAAE,KAAM,QAAS,EAC5B,YAAa,CAAE,KAAM,QAAS,CAChC,EACA,SAAU,CAAC,KAAM,SAAU,WAAW,EACtC,GAAGN,EAAW,KAAM,YAAa,aAAa,CAChD,EAEaW,EAAoC,CAC/C,IAAKL,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,KAAM,QAAS,EACzB,QAAS,CAAE,KAAM,QAAS,CAC5B,CACF,EAEaM,EAAmC,CAC9C,IAAKN,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,KAAM,QAAS,EACzB,KAAM,CAAE,KAAM,QAAS,EACvB,IAAK,CACH,KAAM,SACN,WAAY,CACV,GAAI,CAAE,KAAM,QAAS,EACrB,UAAW,CAAE,KAAM,QAAS,EAC5B,OAAQ,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,CACjD,EACA,SAAU,CAAC,KAAM,SAAU,WAAW,EACtC,GAAGN,EAAW,KAAM,WAAW,CACjC,CACF,EACA,GAAGA,EAAW,SAAU,OAAQ,KAAK,CACvC,EAEaa,EAA8B,CACzC,IAAKP,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,GAAGF,CAAiB,EAC9B,MAAO,CAAE,KAAM,QAAS,EACxB,SAAU,CACR,KAAM,SACN,KAAM,CAAC,cAAe,YAAa,YAAa,YAAa,QAAQ,CACvE,CACF,EACA,SAAU,CAAC,SAAU,WAAY,OAAO,CAC1C,EAEaU,EAA+B,CAC1C,IAAKR,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,KAAM,QAAS,EACzB,OAAQ,CAAE,KAAM,SAAU,KAAM,CAAC,QAAS,SAAS,CAAE,CACvD,EACA,SAAU,CAAC,SAAU,QAAQ,EAC7B,GAAGN,EAAW,SAAU,QAAQ,CAClC,EAEae,EAAqC,CAChD,IAAKT,EAAG,EACR,KAAM,SACN,WAAY,CACV,MAAO,CACL,KAAM,SACN,WAAY,CACV,IAAK,CAAE,KAAM,SAAU,UAAW,CAAE,EACpC,SAAU,CAAE,KAAM,SAAU,UAAW,CAAE,EACzC,GAAI,CAAE,KAAM,SAAU,UAAW,CAAE,CACrC,EACA,GAAGN,EAAW,MAAO,KAAM,UAAU,CACvC,CACF,CACF,EAEagB,EAAqC,CAChD,IAAKV,EAAG,EACR,KAAM,SACN,WAAY,CACV,MAAO,CACL,KAAM,SACN,WAAY,CACV,IAAK,CAAE,KAAM,SAAU,UAAW,CAAE,EACpC,IAAK,CACH,KAAM,SACN,GAAI,CACF,cAAe,CACb,KAAM,CAAC,SAAU,YAAa,IAAI,CACpC,CACF,EACA,KAAM,CACJ,WAAY,CACV,UAAW,CACT,KAAM,SACN,UAAW,EACX,YAAa,8BACf,EACA,GAAI,CACF,KAAM,SACN,UAAW,EACX,YAAa,8BACf,EACA,OAAQ,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,CACjD,CACF,CACF,EACA,QAAS,CAAE,KAAM,QAAS,CAC5B,EACA,GAAGN,EAAW,KAAK,CACrB,EACA,MAAO,CAAE,KAAM,SAAU,CAC3B,CACF,EAEaiB,EAA+B,CAC1C,IAAKX,EAAG,EACR,KAAM,SACN,WAAY,CACV,MAAO,CACL,KAAM,SACN,WAAY,CACV,IAAK,CAAE,KAAM,QAAS,EACtB,UAAW,CAAE,KAAM,QAAS,EAC5B,GAAI,CAAE,KAAM,QAAS,EACrB,OAAQ,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EAC/C,YAAa,CAAE,KAAM,QAAS,EAC9B,OAAQ,CACN,KAAM,SACN,KAAM,CAAC,QAAS,UAAW,aAAc,eAAgB,OAAQ,QAAQ,CAC3E,CACF,EACA,GAAGN,EAAW,MAAO,YAAa,KAAM,QAAQ,CAClD,EACA,MAAO,CAAE,KAAM,SAAU,CAC3B,CACF,EAEakB,EAAqC,CAChD,IAAKZ,EAAG,EACR,KAAM,SACN,WAAY,CACV,aAAc,CAAE,KAAM,SAAU,KAAM,CAAC,MAAO,MAAM,CAAE,EACtD,QAAS,CACP,KAAM,SACN,KAAM,CAAC,MAAO,WAAY,oBAAqB,MAAM,CACvD,EACA,OAAQ,CACN,KAAM,SACN,KAAM,CAAC,MAAO,WAAY,oBAAqB,MAAM,CACvD,EACA,OAAQ,CAAE,KAAM,SAAU,KAAM,CAAC,MAAO,iBAAiB,CAAE,EAC3D,KAAM,CAAE,KAAM,SAAU,KAAM,CAAC,MAAO,WAAY,oBAAqB,MAAM,CAAE,EAC/E,SAAU,CACR,KAAM,SACN,KAAM,CAAC,MAAO,WAAY,oBAAqB,MAAM,CACvD,CACF,EACA,SAAU,CAAC,eAAgB,UAAW,SAAU,SAAU,OAAQ,UAAU,EAC5E,GAAGN,EAAW,eAAgB,UAAW,SAAU,SAAU,OAAQ,UAAU,CACjF,EAEamB,EAAiC,CAC5C,IAAKb,EAAG,EACR,KAAM,SACN,WAAY,CACV,KAAM,CAAE,KAAM,QAAS,CACzB,EACA,GAAGN,EAAW,MAAM,CACtB,EAEaoB,EAAmC,CAC9C,IAAKd,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,KAAM,QAAS,CAC3B,EACA,GAAGN,EAAW,QAAQ,CACxB,EAEaqB,GAA6B,CACxC,KAAM,SACN,WAAY,CACV,KAAM,CAAE,KAAM,QAAS,EACvB,KAAM,CAAE,KAAM,QAAS,EACvB,QAAS,CAAE,KAAM,QAAS,EAC1B,OAAQ,CAAE,KAAM,QAAS,EACzB,WAAY,CAAE,KAAM,SAAU,CAChC,CACF,ECzTA,IAAMC,EAAa,IAAIC,IAAyC,CAC9D,IAAMC,EAAa,CAAC,EACpB,OAAAD,EAAc,QACXE,GACED,EAAWC,CAAQ,EAAI,CACtB,UAAW,EACX,YAAa,QAAQA,CAAQ,mBAC/B,CACJ,EACO,CACL,GAAI,CACF,cAAe,CACb,KAAM,CAAC,GAAGF,CAAa,CACzB,CACF,EACA,KAAM,CAAE,WAAAC,CAAW,CACrB,CACF,EAEaE,GAAiC,CAC5C,IAAKC,EAAG,EACR,KAAM,SACN,WAAY,CACV,QAAS,CAAE,KAAM,QAAS,EAC1B,YAAa,CAAE,KAAM,QAAS,EAC9B,eAAgB,CAAE,KAAM,QAAS,EACjC,oBAAqB,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EAC5D,aAAc,CACZ,KAAM,QACN,SAAU,EACV,YAAa,GACb,MAAO,CACL,KAAM,SACN,UAAW,GACX,QAAS,OACT,YAAa,oDACf,CACF,CACF,EACA,SAAU,CAAC,UAAW,cAAc,EACpC,GAAGL,EAAW,UAAW,cAAe,gBAAgB,CAC1D,EAEaM,GAA8B,CACzC,IAAKD,EAAG,EACR,KAAM,SACN,WAAY,CACV,SAAU,CAAE,KAAM,SAAU,QAAS,gBAAiB,CACxD,EACA,SAAU,CAAC,UAAU,EACrB,GAAGL,EAAW,UAAU,CAC1B,EAEaO,GAAqC,CAChD,IAAKF,EAAG,EACR,KAAM,SACN,WAAY,CACV,gBAAiB,CAAE,KAAM,SAAU,KAAM,CAAC,OAAQ,OAAO,CAAE,CAC7D,EACA,SAAU,CAAC,iBAAiB,EAC5B,GAAGL,EAAW,iBAAiB,CACjC,EAEaQ,GAAqC,CAChD,IAAKH,EAAG,EACR,KAAM,SACN,WAAY,CACV,SAAU,CAAE,KAAM,QAAS,EAC3B,YAAa,CAAE,KAAM,QAAS,EAC9B,QAAS,CACP,KAAM,QACN,SAAU,EACV,YAAa,GACb,MAAO,CACL,KAAM,SACN,UAAW,GACX,QAAS,OACT,YAAa,+CACf,CACF,CACF,EACA,SAAU,CAAC,WAAY,cAAe,SAAS,EAC/C,GAAGL,EAAW,WAAY,cAAe,SAAS,CACpD,EAEaS,GAAiC,CAC5C,IAAKJ,EAAG,EACR,KAAM,SACN,WAAY,CACV,WAAY,CAAE,KAAM,SAAU,QAAS,mBAAoB,CAC7D,EACA,SAAU,CAAC,YAAY,EACvB,GAAGL,EAAW,YAAY,CAC5B,EAEaU,GAAuC,CAClD,IAAKL,EAAG,EACR,KAAM,SACN,WAAY,CACV,WAAY,CAAE,KAAM,SAAU,QAAS,mBAAoB,CAC7D,EACA,SAAU,CAAC,YAAY,EACvB,GAAGL,EAAW,YAAY,CAC5B,EAEaW,GAAwC,CACnD,IAAKN,EAAG,EACR,KAAM,SACN,WAAY,CACV,SAAU,CAAE,KAAM,QAAS,EAC3B,OAAQ,CACN,KAAM,SACN,KAAM,CAAC,MAAO,SAAU,UAAW,QAAQ,CAC7C,EACA,aAAc,CACZ,KAAM,QACN,SAAU,EACV,YAAa,GACb,MAAO,CACL,KAAM,SACN,UAAW,GACX,QAAS,OACT,YAAa,oDACf,CACF,CACF,EACA,SAAU,CAAC,WAAY,SAAU,cAAc,EAC/C,GAAGL,EAAW,WAAY,QAAQ,CACpC,EAEaY,GAAoC,CAC/C,IAAKP,EAAG,EACR,KAAM,SACN,WAAY,CACV,SAAU,CAAE,KAAM,QAAS,EAC3B,OAAQ,CACN,KAAM,SACN,KAAM,CAAC,eAAgB,mBAAoB,SAAU,UAAU,CACjE,CACF,EACA,SAAU,CAAC,WAAY,QAAQ,EAC/B,GAAGL,EAAW,WAAY,QAAQ,CACpC,EAEaa,GAAqC,CAChD,IAAKR,EAAG,EACR,KAAM,SACN,WAAY,CACV,SAAU,CAAE,KAAM,QAAS,EAC3B,WAAY,CACV,KAAM,SACN,KAAM,CAAC,EAAG,MAAO,OAAQ,MAAO,CAClC,CACF,EACA,SAAU,CAAC,WAAY,YAAY,EACnC,GAAGL,EAAW,WAAY,YAAY,CACxC,EAEac,GAAwC,CACnD,IAAKT,EAAG,EACR,KAAM,SACN,WAAY,CACV,SAAU,CAAE,KAAM,QAAS,EAC3B,MAAO,CAAE,KAAM,QAAS,CAC1B,EACA,SAAU,CAAC,WAAY,OAAO,EAC9B,GAAGL,EAAW,WAAY,OAAO,CACnC,EAEae,GAAwC,CACnD,IAAKV,EAAG,EACR,KAAM,SACN,WAAY,CACV,SAAU,CAAE,KAAM,QAAS,EAC3B,QAAS,CAAE,KAAM,QAAS,CAC5B,EACA,SAAU,CAAC,WAAY,SAAS,EAChC,GAAGL,EAAW,WAAY,SAAS,CACrC,EAEagB,GAA4C,CACvD,IAAKX,EAAG,EACR,KAAM,SACN,WAAY,CACV,SAAU,CAAE,KAAM,QAAS,EAC3B,YAAa,CAAE,KAAM,QAAS,CAChC,EACA,SAAU,CAAC,WAAY,aAAa,EACpC,GAAGL,EAAW,WAAY,aAAa,CACzC,EC1CO,IAAMiB,EAAc,CACzB,kBAAmB,oBACnB,iBAAkB,mBAClB,UAAW,WACb,ECtJA,IAAMC,GAAa,IAAIC,IAAyC,CAC9D,IAAMC,EAAa,CAAC,EACpB,OAAAD,EAAc,QACXE,GACED,EAAWC,CAAQ,EAAI,CACtB,UAAW,EACX,YAAa,QAAQA,CAAQ,mBAC/B,CACJ,EACO,CACL,GAAI,CACF,cAAe,CACb,KAAM,CAAC,GAAGF,CAAa,CACzB,CACF,EACA,KAAM,CAAE,WAAAC,CAAW,CACrB,CACF,EAEaE,GAA8B,CACzC,IAAKC,EAAG,EACR,KAAM,SACN,WAAY,CAEV,aAAc,CAAE,KAAM,QAAS,EAC/B,MAAO,CAAE,KAAM,QAAS,EACxB,OAAQ,CAAE,KAAM,SAAU,QAAS,kBAAmB,EACtD,WAAY,CAAE,KAAM,QAAS,EAC7B,OAAQ,CAAE,KAAM,SAAU,EAC1B,YAAa,CACX,KAAM,SACN,KAAM,OAAO,OAAOC,CAAW,CACjC,EAEA,WAAY,CAAE,KAAM,SAAU,EAC9B,QAAS,CAAE,KAAM,QAAS,EAC1B,aAAc,CAAE,KAAM,SAAU,EAChC,aAAc,CAAE,KAAM,SAAU,EAChC,aAAc,CAAE,KAAM,SAAU,EAChC,WAAY,CAAE,KAAM,SAAU,EAC9B,gBAAiB,CAAE,KAAM,SAAU,EACnC,YAAa,CAAE,KAAM,QAAS,EAE9B,UAAW,CAAE,KAAM,QAAS,EAC5B,UAAW,CAAE,KAAM,QAAS,EAC5B,cAAe,CAAE,KAAM,QAAS,EAChC,cAAe,CAAE,KAAM,QAAS,EAChC,cAAe,CAAE,KAAM,QAAS,EAEhC,WAAY,CAAE,KAAM,QAAS,EAC7B,gBAAiB,CAAE,KAAM,SAAU,EACnC,cAAe,CAAE,KAAM,SAAU,EACjC,cAAe,CACb,KAAM,QACN,SAAU,EACV,MAAO,CACL,KAAM,SACN,KAAM,CACJ,sBACA,iBACA,eACA,kBACA,kBACA,kBACA,kBACA,eACA,eACA,kBACA,kBACA,kBACA,YACA,eACA,eACA,eACA,gBACA,eACA,4BACA,oBACA,cACA,qBACA,OACA,gBACA,uBACF,CACF,CACF,EAEA,gBAAiB,CAAE,KAAM,SAAU,EACnC,eAAgB,CACd,KAAM,QACN,SAAU,EACV,MAAO,CACL,KAAM,SACN,KAAM,CACJ,sBACA,iBACA,eACA,kBACA,kBACA,kBACA,kBACA,eACA,eACA,kBACA,kBACA,kBACA,YACA,eACA,eACA,eACA,gBACA,eACA,4BACA,oBACA,cACA,qBACA,OACA,gBACA,uBACF,CACF,CACF,EAEA,WAAY,CAAE,KAAM,SAAU,EAC9B,UAAW,CACT,KAAM,QACN,SAAU,EACV,MAAO,CACL,KAAM,SACN,KAAM,CACJ,sBACA,iBACA,eACA,kBACA,kBACA,kBACA,kBACA,eACA,eACA,kBACA,kBACA,kBACA,YACA,eACA,eACA,eACA,gBACA,eACA,4BACA,oBACA,cACA,qBACA,OACA,gBACA,uBACF,CACF,CACF,EAEA,kBAAmB,CAAE,KAAM,QAAS,EACpC,cAAe,CAAE,KAAM,QAAS,EAChC,YAAa,CAAE,KAAM,QAAS,EAC9B,gBAAiB,CAAE,KAAM,SAAU,EACnC,2BAA4B,CAAE,KAAM,SAAU,EAC9C,4BAA6B,CAAE,KAAM,SAAU,EAC/C,uBAAwB,CAAE,KAAM,SAAU,EAC1C,kBAAmB,CAAE,KAAM,QAAS,EACpC,4BAA6B,CAAE,KAAM,SAAU,EAC/C,uBAAwB,CAAE,KAAM,SAAU,EAC1C,gCAAiC,CAAE,KAAM,QAAS,CACpD,EACA,GAAGN,GAAW,cAAc,CAC9B,EAEaO,GAAkC,CAC7C,IAAKF,EAAG,EACR,KAAM,SACN,WAAY,CACV,SAAU,CACR,KAAM,SACN,KAAM,CAAC,cAAe,YAAa,YAAa,YAAa,QAAQ,CACvE,CACF,EACA,SAAU,CAAC,UAAU,CACvB,ECzLA,IAAMG,GAAa,IAAIC,IAAyC,CAC9D,IAAMC,EAAa,CAAC,EACpB,OAAAD,EAAc,QACXE,GACED,EAAWC,CAAQ,EAAI,CACtB,UAAW,EACX,YAAa,QAAQA,CAAQ,mBAC/B,CACJ,EACO,CACL,GAAI,CACF,cAAe,CACb,KAAM,CAAC,GAAGF,CAAa,CACzB,CACF,EACA,KAAM,CAAE,WAAAC,CAAW,CACrB,CACF,EAEME,GAA0C,CAC9C,KAAM,SACN,YAAa,gBACf,EAEaC,GAAiC,CAC5C,IAAKC,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,GAAGF,EAAiB,EAC9B,QAAS,CAAE,KAAM,QAAS,EAC1B,OAAQ,CAAE,KAAM,SAAU,KAAM,CAAC,MAAO,QAAQ,CAAE,CACpD,EACA,SAAU,CAAC,SAAU,UAAW,QAAQ,EACxC,GAAGJ,GAAW,SAAU,UAAW,QAAQ,CAC7C,EClCA,IAAMO,EAAa,IAAIC,IAAyC,CAC9D,IAAMC,EAAa,CAAC,EACpB,OAAAD,EAAc,QACXE,GACED,EAAWC,CAAQ,EAAI,CACtB,UAAW,EACX,YAAa,QAAQA,CAAQ,mBAC/B,CACJ,EACO,CACL,GAAI,CACF,cAAe,CACb,KAAM,CAAC,GAAGF,CAAa,CACzB,CACF,EACA,KAAM,CAAE,WAAAC,CAAW,CACrB,CACF,EAEME,EAA0C,CAC9C,KAAM,SACN,YAAa,gBACf,EAEaC,GAAqC,CAChD,IAAKC,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,GAAGF,CAAiB,EAC9B,KAAM,CAAE,KAAM,QAAS,EACvB,SAAU,CAAE,KAAM,QAAS,EAC3B,WAAY,CAAE,KAAM,OAAQ,EAC5B,WAAY,CAAE,KAAM,QAAS,CAC/B,EACA,SAAU,CAAC,OAAQ,UAAU,CAC/B,EAEMG,EAAmC,CACvC,WAAY,CACV,IAAK,CACH,KAAM,SACN,WAAY,CACV,GAAI,CAAE,KAAM,QAAS,EACrB,UAAW,CAAE,KAAM,QAAS,EAC5B,OAAQ,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,CACjD,EACA,SAAU,CAAC,IAAI,EACf,GAAGP,EAAW,IAAI,CACpB,EACA,QAAS,CAAE,KAAM,QAAS,CAC5B,CACF,EAEaQ,GAA+B,CAC1C,IAAKF,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,GAAGF,CAAiB,EAC9B,QAAS,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EAChD,aAAc,CAAE,KAAM,UAAW,QAAS,EAAG,QAAS,EAAG,CAC3D,EACA,SAAU,CAAC,SAAU,cAAc,CACrC,EAEaK,GAAiC,CAC5C,IAAKH,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,GAAGF,CAAiB,EAC9B,KAAM,CAAE,KAAM,QAAS,EACvB,YAAa,CAAE,KAAM,SAAU,EAC/B,MAAO,CACL,KAAM,UACN,YAAa,+BACf,EACA,OAAQ,CAAE,GAAGG,CAAoB,EACjC,SAAU,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EACjD,UAAW,CACT,KAAM,QACN,SAAU,EACV,YAAa,GACb,MAAO,CACL,KAAM,SACN,QAAS,QACT,YAAa,iDACf,CACF,CACF,EACA,SAAU,CAAC,SAAU,MAAM,CAC7B,EAEaG,GAAkC,CAC7C,IAAKJ,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,GAAGF,CAAiB,EAC9B,UAAW,CAAE,KAAM,SAAU,KAAM,CAAC,QAAS,WAAY,QAAS,OAAO,CAAE,EAC3E,SAAU,CAAE,KAAM,QAAS,EAC3B,MAAO,CAAE,KAAM,QAAS,EACxB,SAAU,CAAE,KAAM,QAAS,EAC3B,QAAS,CAAE,KAAM,QAAS,EAC1B,MAAO,CACL,KAAM,UACN,YAAa,+BACf,EACA,OAAQ,CAAE,GAAGG,CAAoB,EACjC,SAAU,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EACjD,UAAW,CACT,KAAM,QACN,SAAU,EACV,YAAa,GACb,MAAO,CACL,KAAM,SACN,QAAS,QACT,YAAa,iDACf,CACF,CACF,EACA,SAAU,CAAC,SAAU,WAAW,CAClC,EAEaI,GAAgC,CAC3C,IAAKL,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,GAAGF,CAAiB,EAC9B,MAAO,CAAE,KAAM,QAAS,EACxB,MAAO,CACL,KAAM,UACN,YAAa,+BACf,EACA,OAAQ,CAAE,GAAGG,CAAoB,EACjC,SAAU,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EACjD,UAAW,CACT,KAAM,QACN,SAAU,EACV,YAAa,GACb,MAAO,CACL,KAAM,SACN,QAAS,QACT,YAAa,iDACf,CACF,CACF,EACA,SAAU,CAAC,QAAQ,CACrB,EAEaK,GAAkC,CAC7C,IAAKN,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,GAAGF,CAAiB,EAC9B,MAAO,CAAE,KAAM,QAAS,EACxB,MAAO,CACL,KAAM,UACN,YAAa,+BACf,EACA,OAAQ,CAAE,GAAGG,CAAoB,EACjC,SAAU,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EACjD,UAAW,CACT,KAAM,QACN,SAAU,EACV,YAAa,GACb,MAAO,CACL,KAAM,SACN,QAAS,QACT,YAAa,iDACf,CACF,CACF,EACA,SAAU,CAAC,QAAQ,CACrB,EAEaM,GAAmC,CAC9C,IAAKP,EAAG,EACR,KAAM,SACN,WAAY,CACV,KAAM,CAAE,KAAM,SAAU,KAAM,CAAC,OAAQ,QAAS,QAAS,OAAO,CAAE,EAClE,QAAS,CAAE,KAAM,QAAS,EAC1B,QAAS,CAAE,KAAM,QAAS,EAC1B,gBAAiB,CAAE,KAAM,QAAS,EAClC,KAAM,CAAE,KAAM,UAAW,QAAS,EAAG,QAAS,CAAE,EAChD,cAAe,CACb,KAAM,QACN,SAAU,EACV,YAAa,GACb,MAAO,CACL,KAAM,SACN,QAAS,QACT,YAAa,qDACf,CACF,EACA,YAAa,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,CACtD,EACA,SAAU,CAAC,MAAM,CACnB,EAEaQ,GAAoC,CAC/C,IAAKR,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,GAAGF,CAAiB,EAC9B,QAAS,CAAE,KAAM,QAAS,EAC1B,MAAO,CACL,KAAM,UACN,YAAa,+BACf,EACA,OAAQ,CAAE,GAAGG,CAAoB,EACjC,SAAU,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EACjD,UAAW,CACT,KAAM,QACN,SAAU,EACV,YAAa,GACb,MAAO,CACL,KAAM,SACN,QAAS,QACT,YAAa,iDACf,CACF,CACF,EACA,SAAU,CAAC,QAAQ,CACrB,EAEaQ,GAAqC,CAChD,IAAKT,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,GAAGF,CAAiB,EAC9B,SAAU,CAAE,KAAM,QAAS,EAC3B,UAAW,CAAE,KAAM,QAAS,EAC5B,KAAM,CAAE,KAAM,QAAS,EACvB,QAAS,CAAE,KAAM,QAAS,EAC1B,MAAO,CACL,KAAM,UACN,YAAa,+BACf,EACA,OAAQ,CAAE,GAAGG,CAAoB,EACjC,SAAU,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EACjD,UAAW,CACT,KAAM,QACN,SAAU,EACV,YAAa,GACb,MAAO,CACL,KAAM,SACN,QAAS,QACT,YAAa,iDACf,CACF,CACF,EACA,SAAU,CAAC,SAAU,WAAY,YAAa,OAAQ,SAAS,CACjE,EAEaS,GAAoC,CAC/C,IAAKV,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,GAAGF,CAAiB,EAC9B,QAAS,CACP,KAAM,QACN,MAAO,CACL,KAAM,SACN,WAAY,CACV,SAAU,CAAE,KAAM,QAAS,EAC3B,KAAM,CACJ,KAAM,SACN,UAAW,GACX,QAAS,OACT,YAAa,iCACf,EACA,YAAa,CAAE,KAAM,SAAU,UAAW,EAAG,EAC7C,aAAc,CAAE,KAAM,QAAS,EAC/B,MAAO,CAAE,KAAM,QAAS,EACxB,IAAK,CAAE,KAAM,QAAS,CACxB,EACA,SAAU,CAAC,WAAY,aAAa,EACpC,GAAGJ,EAAW,UAAU,CAC1B,EACA,SAAU,EACV,YAAa,EACf,CACF,EACA,SAAU,CAAC,SAAU,SAAS,CAChC,EAEaiB,GAAqC,CAChD,IAAKX,EAAG,EACR,KAAM,SACN,WAAY,CACV,IAAK,CACH,KAAM,SACN,WAAY,CACV,GAAI,CAAE,KAAM,QAAS,EACrB,UAAW,CAAE,KAAM,QAAS,EAC5B,OAAQ,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,CACjD,EACA,SAAU,CAAC,KAAM,YAAa,QAAQ,EACtC,GAAGN,EAAW,KAAM,WAAW,CACjC,EACA,SAAU,CAAE,KAAM,QAAS,CAC7B,EACA,SAAU,CAAC,MAAO,UAAU,CAC9B,EAEakB,GAAiC,CAC5C,IAAKZ,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,GAAGF,CAAiB,EAC9B,KAAM,CAAE,KAAM,QAAS,EACvB,gBAAiB,CAAE,KAAM,UAAW,QAAS,EAAG,QAAS,EAAG,EAC5D,OAAQ,CACN,KAAM,QACN,SAAU,EACV,SAAU,GACV,YAAa,GACb,MAAO,CACL,KAAM,QACR,CACF,EACA,MAAO,CACL,KAAM,UACN,YAAa,+BACf,EACA,OAAQ,CAAE,GAAGG,CAAoB,EACjC,SAAU,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EACjD,UAAW,CACT,KAAM,QACN,SAAU,EACV,YAAa,GACb,MAAO,CACL,KAAM,SACN,QAAS,QACT,YAAa,iDACf,CACF,CACF,EACA,SAAU,CAAC,SAAU,OAAQ,kBAAmB,QAAQ,CAC1D,EAEaY,GAAiC,CAC5C,IAAKb,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,GAAGF,CAAiB,EAC9B,MAAO,CAAE,KAAM,QAAS,EACxB,YAAa,CAAE,KAAM,QAAS,EAC9B,WAAY,CAAE,KAAM,QAAS,EAC7B,WAAY,CAAE,KAAM,QAAS,EAC7B,SAAU,CACR,KAAM,QACN,SAAU,EACV,YAAa,GACb,MAAO,CACL,KAAM,SACN,WAAY,CACV,MAAO,CAAE,KAAM,QAAS,EACxB,KAAM,CACJ,KAAM,QACN,SAAU,EACV,YAAa,GACb,MAAO,CACL,KAAM,SACN,WAAY,CACV,MAAO,CAAE,KAAM,QAAS,EACxB,YAAa,CAAE,KAAM,QAAS,EAC9B,MAAO,CAAE,KAAM,QAAS,CAC1B,EACA,SAAU,CAAC,QAAS,OAAO,EAC3B,GAAGJ,EAAW,QAAS,cAAe,OAAO,CAC/C,CACF,CACF,EACA,SAAU,CAAC,QAAS,MAAM,EAC1B,GAAGA,EAAW,OAAO,CACvB,CACF,EACA,MAAO,CACL,KAAM,UACN,YAAa,+BACf,EACA,OAAQ,CAAE,GAAGO,CAAoB,EACjC,SAAU,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EACjD,UAAW,CACT,KAAM,QACN,SAAU,EACV,YAAa,GACb,MAAO,CACL,KAAM,SACN,QAAS,QACT,YAAa,iDACf,CACF,CACF,EACA,SAAU,CAAC,SAAU,QAAS,aAAc,aAAc,UAAU,CACtE,EAEaa,GAAoC,CAC/C,IAAKd,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,GAAGF,CAAiB,EAC9B,aAAc,CAAE,KAAM,QAAS,EAC/B,MAAO,CAAE,KAAM,QAAS,EACxB,YAAa,CAAE,KAAM,QAAS,EAC9B,OAAQ,CAAE,KAAM,QAAS,EACzB,QAAS,CACP,KAAM,QACN,MAAO,CACL,KAAM,SACN,WAAY,CACV,KAAM,CACJ,KAAM,SACN,KAAM,CAAC,QAAS,OAAQ,MAAO,OAAQ,KAAK,CAC9C,EACA,YAAa,CAAE,KAAM,QAAS,EAC9B,GAAI,CAAE,KAAM,QAAS,EACrB,IAAK,CAAE,KAAM,QAAS,EACtB,YAAa,CAAE,KAAM,QAAS,EAC9B,SAAU,CAAE,KAAM,QAAS,EAC3B,KAAM,CAAE,KAAM,QAAS,EACvB,QAAS,CAAE,KAAM,SAAU,KAAM,CAAC,QAAS,QAAS,MAAO,OAAQ,QAAQ,CAAE,EAC7E,IAAK,CAAE,KAAM,QAAS,CACxB,EACA,SAAU,CAAC,MAAM,EACjB,GAAGJ,EAAW,KAAM,MAAO,aAAa,CAC1C,CACF,EACA,MAAO,CACL,KAAM,UACN,YAAa,+BACf,EACA,OAAQ,CAAE,GAAGO,CAAoB,EACjC,SAAU,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EACjD,UAAW,CACT,KAAM,QACN,SAAU,EACV,YAAa,GACb,MAAO,CACL,KAAM,SACN,QAAS,QACT,YAAa,iDACf,CACF,CACF,EACA,SAAU,CAAC,QAAQ,CACrB,EC7bA,IAAMc,GAAa,IAAIC,IAAyC,CAC9D,IAAMC,EAAa,CAAC,EACpB,OAAAD,EAAc,QACXE,GACED,EAAWC,CAAQ,EAAI,CACtB,UAAW,EACX,YAAa,QAAQA,CAAQ,mBAC/B,CACJ,EACO,CACL,GAAI,CACF,cAAe,CACb,KAAM,CAAC,GAAGF,CAAa,CACzB,CACF,EACA,KAAM,CAAE,WAAAC,CAAW,CACrB,CACF,EAEaE,GAA2B,CACtC,IAAKC,EAAG,EACR,KAAM,SACN,WAAY,CACV,QAAS,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EAChD,KAAM,CAAE,KAAM,QAAS,EACvB,KAAM,CAAE,KAAM,QAAS,EACvB,SAAU,CAAE,KAAM,QAAS,EAC3B,SAAU,CAAE,KAAM,QAAS,EAC3B,SAAU,CAAE,KAAM,QAAS,CAC7B,EACA,SAAU,CAAC,UAAW,OAAQ,OAAQ,UAAU,EAChD,GAAGL,GAAW,UAAW,OAAQ,OAAQ,UAAU,CACrD,EChCA,IAAMM,GAAa,IAAIC,IAAyC,CAC9D,IAAMC,EAAa,CAAC,EACpB,OAAAD,EAAc,QACXE,GACED,EAAWC,CAAQ,EAAI,CACtB,UAAW,EACX,YAAa,QAAQA,CAAQ,mBAC/B,CACJ,EACO,CACL,GAAI,CACF,cAAe,CACb,KAAM,CAAC,GAAGF,CAAa,CACzB,CACF,EACA,KAAM,CAAE,WAAAC,CAAW,CACrB,CACF,EAEaE,GAA8B,CACzC,IAAKC,EAAG,EACR,KAAM,SACN,WAAY,CACV,WAAY,CAAE,KAAM,SAAU,EAC9B,QAAS,CAAE,KAAM,QAAS,EAC1B,aAAc,CAAE,KAAM,SAAU,EAChC,aAAc,CAAE,KAAM,SAAU,EAChC,aAAc,CAAE,KAAM,SAAU,EAChC,WAAY,CAAE,KAAM,SAAU,EAC9B,gBAAiB,CAAE,KAAM,SAAU,EACnC,YAAa,CAAE,KAAM,QAAS,CAChC,EACA,SAAU,CAAC,aAAc,eAAgB,eAAgB,eAAgB,aAAc,iBAAiB,EACxG,GAAGL,GAAW,aAAc,eAAgB,eAAgB,eAAgB,aAAc,iBAAiB,CAC7G,EClCA,IAAMM,GAAa,IAAIC,IAAyC,CAC9D,IAAMC,EAAa,CAAC,EACpB,OAAAD,EAAc,QACXE,GACED,EAAWC,CAAQ,EAAI,CACtB,UAAW,EACX,YAAa,QAAQA,CAAQ,mBAC/B,CACJ,EACO,CACL,GAAI,CACF,cAAe,CACb,KAAM,CAAC,GAAGF,CAAa,CACzB,CACF,EACA,KAAM,CAAE,WAAAC,CAAW,CACrB,CACF,EAEaE,GAA8B,CACzC,IAAKC,EAAG,EACR,KAAM,SACN,WAAY,CACV,KAAM,CAAE,KAAM,QAAS,EACvB,SAAU,CAAE,KAAM,SAAU,KAAM,CAAC,iBAAkB,YAAa,SAAS,CAAE,EAC7E,oBAAqB,CAAE,KAAM,SAAU,EACvC,SAAU,CAAE,KAAM,QAAS,EAC3B,WAAY,CAAE,KAAM,OAAQ,EAC5B,WAAY,CAAE,KAAM,QAAS,CAC/B,EACA,SAAU,CAAC,OAAQ,WAAY,WAAY,YAAY,EACvD,GAAGL,GAAW,OAAQ,WAAY,WAAY,YAAY,CAC5D,EChCA,IAAMM,GAAa,IAAIC,IAAyC,CAC9D,IAAMC,EAAa,CAAC,EACpB,OAAAD,EAAc,QACXE,GACED,EAAWC,CAAQ,EAAI,CACtB,UAAW,EACX,YAAa,QAAQA,CAAQ,mBAC/B,CACJ,EACO,CACL,GAAI,CACF,cAAe,CACb,KAAM,CAAC,GAAGF,CAAa,CACzB,CACF,EACA,KAAM,CAAE,WAAAC,CAAW,CACrB,CACF,EAEaE,GAA8B,CACzC,IAAKC,EAAG,EACR,KAAM,SACN,WAAY,CACV,QAAS,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EAChD,UAAW,CAAE,KAAM,QAAS,EAC5B,MAAO,CAAE,KAAM,QAAS,EACxB,IAAK,CAAE,KAAM,QAAS,EACtB,QAAS,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EAChD,cAAe,CAAE,KAAM,CAAC,SAAU,MAAM,CAAE,EAC1C,UAAW,CAAE,KAAM,CAAC,SAAU,MAAM,CAAE,EACtC,mBAAoB,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EAC3D,oBAAqB,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EAC5D,WAAY,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EACnD,eAAgB,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EACvD,oBAAqB,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EAC5D,eAAgB,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EACvD,wBAAyB,CAAE,KAAM,QAAS,EAC1C,WAAY,CAAE,KAAM,QAAS,MAAO,CAAE,KAAM,QAAS,CAAE,CACzD,EACA,SAAU,CAAC,UAAW,YAAa,QAAS,MAAO,UAAW,qBAAsB,qBAAqB,EACzG,GAAGL,GAAW,UAAW,YAAa,QAAS,MAAO,UAAW,qBAAsB,qBAAqB,CAC9G,ECzCA,IAAMM,EAAa,IAAIC,IAAyC,CAC9D,IAAMC,EAAa,CAAC,EACpB,OAAAD,EAAc,QACXE,GACED,EAAWC,CAAQ,EAAI,CACtB,UAAW,EACX,YAAa,QAAQA,CAAQ,mBAC/B,CACJ,EACO,CACL,GAAI,CACF,cAAe,CACb,KAAM,CAAC,GAAGF,CAAa,CACzB,CACF,EACA,KAAM,CAAE,WAAAC,CAAW,CACrB,CACF,EAEaE,GAA0B,CACrC,IAAKC,EAAG,EACR,KAAM,SACN,WAAY,CACV,QAAS,CAAE,KAAM,SAAU,EAC3B,YAAa,CAAE,KAAM,QAAS,EAC9B,QAAS,CAAE,KAAM,SAAU,KAAM,CAAC,UAAW,gBAAiB,QAAS,UAAU,CAAE,EACnF,OAAQ,CAAE,KAAM,QAAS,EACzB,OAAQ,CAAE,KAAM,QAAS,EACzB,YAAa,CAAE,KAAM,SAAU,KAAM,CAAC,MAAO,UAAW,OAAQ,UAAU,CAAE,EAC5E,gBAAiB,CAAE,KAAM,SAAU,KAAM,CAAC,SAAU,WAAY,aAAc,WAAY,OAAO,CAAE,EACnG,aAAc,CAAE,KAAM,QAAS,EAC/B,OAAQ,CAAE,KAAM,SAAU,EAC1B,cAAe,CAAE,KAAM,QAAS,EAChC,aAAc,CAAE,KAAM,SAAU,EAChC,eAAgB,CAAE,KAAM,QAAS,EACjC,gBAAiB,CAAE,KAAM,SAAU,EACnC,cAAe,CAAE,KAAM,SAAU,EACjC,SAAU,CAAE,KAAM,SAAU,EAC5B,aAAc,CAAE,KAAM,SAAU,EAChC,WAAY,CAAE,KAAM,QAAS,MAAO,CAAE,KAAM,QAAS,CAAE,EACvD,cAAe,CAAE,KAAM,SAAU,EACjC,YAAa,CAAE,KAAM,SAAU,CACjC,EACA,SAAU,CAAC,UAAW,UAAW,aAAa,EAC9C,GAAGL,EAAW,UAAW,UAAW,aAAa,CACnD,EAEaM,GAAgC,CAC3C,IAAKD,EAAG,EACR,KAAM,SACN,WAAY,CACV,UAAW,CAAE,KAAM,QAAS,EAC5B,OAAQ,CAAE,KAAM,SAAU,KAAM,CAAC,SAAU,SAAU,SAAU,QAAQ,CAAE,CAC3E,EACA,SAAU,CAAC,YAAa,QAAQ,EAChC,GAAGL,EAAW,YAAa,QAAQ,CACrC,EAEaO,GAAiC,CAC5C,IAAKF,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,KAAM,SAAU,EAC1B,cAAe,CAAE,KAAM,QAAS,EAChC,aAAc,CAAE,KAAM,SAAU,EAChC,eAAgB,CAAE,KAAM,QAAS,EACjC,gBAAiB,CAAE,KAAM,SAAU,EACnC,cAAe,CAAE,KAAM,SAAU,EACjC,SAAU,CAAE,KAAM,SAAU,EAC5B,aAAc,CAAE,KAAM,SAAU,EAChC,WAAY,CAAE,KAAM,QAAS,MAAO,CAAE,KAAM,QAAS,CAAE,EACvD,eAAgB,CAAE,KAAM,QAAS,EACjC,cAAe,CAAE,KAAM,SAAU,EACjC,YAAa,CAAE,KAAM,SAAU,CACjC,EACA,SAAU,CACR,SACA,gBACA,eACA,iBACA,kBACA,gBACA,WACA,eACA,aACA,gBACA,aACF,EACA,GAAGL,EACD,SACA,gBACA,eACA,iBACA,kBACA,gBACA,WACA,eACA,aACA,gBACA,aACF,CACF,EAEaQ,GAAmC,CAC9C,IAAKH,EAAG,EACR,KAAM,SACN,WAAY,CACV,UAAW,CAAE,KAAM,QAAS,EAC5B,OAAQ,CAAE,KAAM,SAAU,KAAM,CAAC,MAAO,QAAQ,CAAE,CACpD,EACA,SAAU,CAAC,YAAa,QAAQ,EAChC,GAAGL,EAAW,YAAa,QAAQ,CACrC,EChHA,IAAMS,EAAa,IAAIC,IAAyC,CAC9D,IAAMC,EAAa,CAAC,EACpB,OAAAD,EAAc,QACXE,GACED,EAAWC,CAAQ,EAAI,CACtB,UAAW,EACX,YAAa,QAAQA,CAAQ,mBAC/B,CACJ,EACO,CACL,GAAI,CACF,cAAe,CACb,KAAM,CAAC,GAAGF,CAAa,CACzB,CACF,EACA,KAAM,CAAE,WAAAC,CAAW,CACrB,CACF,EAEaE,GAAkC,CAC7C,IAAKC,EAAG,EACR,KAAM,SACN,WAAY,CACV,QAAS,CAAE,KAAM,SAAU,EAC3B,YAAa,CAAE,KAAM,QAAS,EAC9B,OAAQ,CAAE,KAAM,QAAS,EACzB,OAAQ,CAAE,KAAM,QAAS,EACzB,YAAa,CAAE,KAAM,SAAU,KAAM,CAAC,MAAO,UAAW,OAAQ,UAAU,CAAE,EAC5E,gBAAiB,CAAE,KAAM,SAAU,KAAM,CAAC,SAAU,WAAY,aAAc,WAAY,OAAO,CAAE,EACnG,aAAc,CAAE,KAAM,QAAS,EAC/B,OAAQ,CAAE,KAAM,SAAU,EAC1B,cAAe,CAAE,KAAM,QAAS,EAChC,aAAc,CAAE,KAAM,SAAU,EAChC,eAAgB,CAAE,KAAM,QAAS,EACjC,gBAAiB,CAAE,KAAM,SAAU,EACnC,cAAe,CAAE,KAAM,SAAU,EACjC,SAAU,CAAE,KAAM,SAAU,EAC5B,aAAc,CAAE,KAAM,SAAU,EAChC,WAAY,CAAE,KAAM,QAAS,MAAO,CAAE,KAAM,QAAS,CAAE,EACvD,cAAe,CAAE,KAAM,SAAU,EACjC,YAAa,CAAE,KAAM,SAAU,CACjC,EACA,SAAU,CAAC,UAAW,SAAU,aAAa,EAC7C,GAAGL,EAAW,UAAW,SAAU,aAAa,CAClD,EAEaM,GAAwC,CACnD,IAAKD,EAAG,EACR,KAAM,SACN,WAAY,CACV,UAAW,CAAE,KAAM,QAAS,EAC5B,OAAQ,CAAE,KAAM,SAAU,KAAM,CAAC,SAAU,SAAU,SAAU,QAAQ,CAAE,CAC3E,EACA,SAAU,CAAC,YAAa,QAAQ,EAChC,GAAGL,EAAW,YAAa,QAAQ,CACrC,EAEaO,GAAyC,CACpD,IAAKF,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,KAAM,SAAU,EAC1B,cAAe,CAAE,KAAM,QAAS,EAChC,aAAc,CAAE,KAAM,SAAU,EAChC,eAAgB,CAAE,KAAM,QAAS,EACjC,gBAAiB,CAAE,KAAM,SAAU,EACnC,cAAe,CAAE,KAAM,SAAU,EACjC,SAAU,CAAE,KAAM,SAAU,EAC5B,aAAc,CAAE,KAAM,SAAU,EAChC,WAAY,CAAE,KAAM,QAAS,MAAO,CAAE,KAAM,QAAS,CAAE,EACvD,cAAe,CAAE,KAAM,QAAS,EAChC,cAAe,CAAE,KAAM,SAAU,EACjC,YAAa,CAAE,KAAM,SAAU,CACjC,EACA,SAAU,CACR,SACA,gBACA,eACA,iBACA,kBACA,gBACA,WACA,eACA,aACA,gBACA,aACF,EACA,GAAGL,EACD,SACA,gBACA,eACA,iBACA,kBACA,gBACA,WACA,eACA,aACA,gBACA,aACF,CACF,EAEaQ,GAA2C,CACtD,IAAKH,EAAG,EACR,KAAM,SACN,WAAY,CACV,UAAW,CAAE,KAAM,QAAS,EAC5B,OAAQ,CAAE,KAAM,SAAU,KAAM,CAAC,MAAO,QAAQ,CAAE,CACpD,EACA,SAAU,CAAC,YAAa,QAAQ,EAChC,GAAGL,EAAW,YAAa,QAAQ,CACrC,EC/GA,IAAMS,EAAa,IAAIC,IAAyC,CAC9D,IAAMC,EAAa,CAAC,EACpB,OAAAD,EAAc,QACXE,GACED,EAAWC,CAAQ,EAAI,CACtB,UAAW,EACX,YAAa,QAAQA,CAAQ,mBAC/B,CACJ,EACO,CACL,GAAI,CACF,cAAe,CACb,KAAM,CAAC,GAAGF,CAAa,CACzB,CACF,EACA,KAAM,CAAE,WAAAC,CAAW,CACrB,CACF,EAEaE,GAA6B,CACxC,IAAKC,EAAG,EACR,KAAM,SACN,WAAY,CACV,QAAS,CAAE,KAAM,SAAU,EAC3B,YAAa,CAAE,KAAM,QAAS,EAC9B,OAAQ,CAAE,KAAM,QAAS,EACzB,OAAQ,CAAE,KAAM,QAAS,EACzB,YAAa,CAAE,KAAM,SAAU,KAAM,CAAC,MAAO,UAAW,OAAQ,UAAU,CAAE,EAC5E,gBAAiB,CAAE,KAAM,SAAU,KAAM,CAAC,SAAU,WAAY,aAAc,WAAY,OAAO,CAAE,EACnG,aAAc,CAAE,KAAM,QAAS,EAC/B,OAAQ,CAAE,KAAM,SAAU,EAC1B,cAAe,CAAE,KAAM,QAAS,EAChC,aAAc,CAAE,KAAM,SAAU,EAChC,eAAgB,CAAE,KAAM,QAAS,EACjC,gBAAiB,CAAE,KAAM,SAAU,EACnC,cAAe,CAAE,KAAM,SAAU,EACjC,SAAU,CAAE,KAAM,SAAU,EAC5B,aAAc,CAAE,KAAM,SAAU,EAChC,WAAY,CAAE,KAAM,QAAS,MAAO,CAAE,KAAM,QAAS,CAAE,CACzD,EACA,SAAU,CAAC,UAAW,SAAU,aAAa,EAC7C,GAAGL,EAAW,UAAW,SAAU,aAAa,CAClD,EAEaM,GAAmC,CAC9C,IAAKD,EAAG,EACR,KAAM,SACN,WAAY,CACV,UAAW,CAAE,KAAM,QAAS,EAC5B,OAAQ,CAAE,KAAM,SAAU,KAAM,CAAC,SAAU,SAAU,SAAU,QAAQ,CAAE,CAC3E,EACA,SAAU,CAAC,YAAa,QAAQ,EAChC,GAAGL,EAAW,YAAa,QAAQ,CACrC,EAEaO,GAAoC,CAC/C,IAAKF,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,KAAM,SAAU,EAC1B,cAAe,CAAE,KAAM,QAAS,EAChC,aAAc,CAAE,KAAM,SAAU,EAChC,eAAgB,CAAE,KAAM,QAAS,EACjC,gBAAiB,CAAE,KAAM,SAAU,EACnC,cAAe,CAAE,KAAM,SAAU,EACjC,SAAU,CAAE,KAAM,SAAU,EAC5B,aAAc,CAAE,KAAM,SAAU,EAChC,WAAY,CAAE,KAAM,QAAS,MAAO,CAAE,KAAM,QAAS,CAAE,EACvD,cAAe,CAAE,KAAM,QAAS,CAClC,EACA,SAAU,CACR,SACA,gBACA,eACA,iBACA,kBACA,gBACA,WACA,eACA,YACF,EACA,GAAGL,EACD,SACA,gBACA,eACA,iBACA,kBACA,gBACA,WACA,eACA,YACF,CACF,EAEaQ,GAAsC,CACjD,IAAKH,EAAG,EACR,KAAM,SACN,WAAY,CACV,UAAW,CAAE,KAAM,QAAS,EAC5B,OAAQ,CAAE,KAAM,SAAU,KAAM,CAAC,MAAO,QAAQ,CAAE,CACpD,EACA,SAAU,CAAC,YAAa,QAAQ,EAChC,GAAGL,EAAW,YAAa,QAAQ,CACrC,ECvGA,IAAMS,EAAa,IAAIC,IAAyC,CAC9D,IAAMC,EAAa,CAAC,EACpB,OAAAD,EAAc,QACXE,GACED,EAAWC,CAAQ,EAAI,CACtB,UAAW,EACX,YAAa,QAAQA,CAAQ,mBAC/B,CACJ,EACO,CACL,GAAI,CACF,cAAe,CACb,KAAM,CAAC,GAAGF,CAAa,CACzB,CACF,EACA,KAAM,CAAE,WAAAC,CAAW,CACrB,CACF,EAEaE,GAA4B,CACvC,IAAKC,EAAG,EACR,KAAM,SACN,WAAY,CACV,QAAS,CAAE,KAAM,SAAU,EAC3B,YAAa,CAAE,KAAM,QAAS,EAC9B,cAAe,CAAE,KAAM,QAAS,EAChC,QAAS,CAAE,KAAM,SAAU,KAAM,CAAC,YAAa,gBAAgB,CAAE,EACjE,YAAa,CAAE,KAAM,QAAS,EAC9B,YAAa,CAAE,KAAM,QAAS,EAC9B,MAAO,CAAE,KAAM,QAAS,EACxB,eAAgB,CAAE,KAAM,QAAS,MAAO,CAAE,KAAM,QAAS,CAAE,EAC3D,kBAAmB,CAAE,KAAM,QAAS,MAAO,CAAE,KAAM,QAAS,CAAE,EAC9D,aAAc,CAAE,KAAM,QAAS,MAAO,CAAE,KAAM,QAAS,CAAE,EACzD,UAAW,CAAE,KAAM,SAAU,EAC7B,YAAa,CAAE,KAAM,SAAU,KAAM,CAAC,MAAO,UAAW,OAAQ,UAAU,CAAE,EAC5E,gBAAiB,CAAE,KAAM,SAAU,KAAM,CAAC,SAAU,WAAY,aAAc,WAAY,OAAO,CAAE,EACnG,aAAc,CAAE,KAAM,QAAS,EAC/B,OAAQ,CAAE,KAAM,SAAU,EAC1B,cAAe,CAAE,KAAM,QAAS,EAChC,aAAc,CAAE,KAAM,SAAU,EAChC,eAAgB,CAAE,KAAM,QAAS,EACjC,gBAAiB,CAAE,KAAM,SAAU,EACnC,cAAe,CAAE,KAAM,SAAU,EACjC,SAAU,CAAE,KAAM,SAAU,EAC5B,aAAc,CAAE,KAAM,SAAU,EAChC,WAAY,CAAE,KAAM,QAAS,MAAO,CAAE,KAAM,QAAS,CAAE,CACzD,EACA,SAAU,CAAC,UAAW,gBAAiB,UAAW,aAAa,EAC/D,GAAGL,EAAW,UAAW,gBAAiB,UAAW,aAAa,CACpE,EAEaM,GAAiC,CAC5C,IAAKD,EAAG,EACR,KAAM,SACN,WAAY,CACV,KAAM,CAAE,KAAM,QAAS,EACvB,OAAQ,CAAE,KAAM,QAAS,CAC3B,EACA,SAAU,CAAC,OAAQ,QAAQ,EAC3B,GAAGL,EAAW,OAAQ,QAAQ,CAChC,EAEaO,GAAkC,CAC7C,IAAKF,EAAG,EACR,KAAM,SACN,WAAY,CACV,UAAW,CAAE,KAAM,QAAS,EAC5B,OAAQ,CAAE,KAAM,SAAU,KAAM,CAAC,SAAU,SAAU,SAAU,QAAQ,CAAE,CAC3E,EACA,SAAU,CAAC,YAAa,QAAQ,EAChC,GAAGL,EAAW,YAAa,QAAQ,CACrC,EAEaQ,GAAmC,CAC9C,IAAKH,EAAG,EACR,KAAM,SACN,WAAY,CACV,cAAe,CAAE,KAAM,QAAS,EAChC,OAAQ,CAAE,KAAM,SAAU,EAC1B,cAAe,CAAE,KAAM,QAAS,EAChC,aAAc,CAAE,KAAM,SAAU,EAChC,eAAgB,CAAE,KAAM,QAAS,EACjC,gBAAiB,CAAE,KAAM,SAAU,EACnC,cAAe,CAAE,KAAM,SAAU,EACjC,SAAU,CAAE,KAAM,SAAU,EAC5B,aAAc,CAAE,KAAM,SAAU,EAChC,aAAc,CAAE,KAAM,SAAU,EAChC,WAAY,CAAE,KAAM,QAAS,MAAO,CAAE,KAAM,QAAS,CAAE,EACvD,iBAAkB,CAAE,KAAM,QAAS,CACrC,EACA,SAAU,CACR,gBACA,SACA,gBACA,eACA,iBACA,kBACA,gBACA,WACA,eACA,YACF,EACA,GAAGL,EACD,gBACA,SACA,gBACA,eACA,iBACA,kBACA,gBACA,WACA,eACA,YACF,CACF,EAEaS,GAAqC,CAChD,IAAKJ,EAAG,EACR,KAAM,SACN,WAAY,CACV,UAAW,CAAE,KAAM,QAAS,EAC5B,OAAQ,CAAE,KAAM,SAAU,KAAM,CAAC,MAAO,QAAQ,CAAE,CACpD,EACA,SAAU,CAAC,YAAa,QAAQ,EAChC,GAAGL,EAAW,YAAa,QAAQ,CACrC,EC7HA,IAAMU,EAAa,IAAIC,IAAyC,CAC9D,IAAMC,EAAa,CAAC,EACpB,OAAAD,EAAc,QACXE,GACED,EAAWC,CAAQ,EAAI,CACtB,UAAW,EACX,YAAa,QAAQA,CAAQ,mBAC/B,CACJ,EACO,CACL,GAAI,CACF,cAAe,CACb,KAAM,CAAC,GAAGF,CAAa,CACzB,CACF,EACA,KAAM,CAAE,WAAAC,CAAW,CACrB,CACF,EAEaE,GAA6B,CACxC,IAAKC,EAAG,EACR,KAAM,SACN,WAAY,CACV,QAAS,CAAE,KAAM,SAAU,EAC3B,YAAa,CAAE,KAAM,QAAS,EAC9B,IAAK,CAAE,KAAM,QAAS,EACtB,QAAS,CAAE,KAAM,QAAS,EAC1B,YAAa,CAAE,KAAM,SAAU,KAAM,CAAC,MAAO,UAAW,OAAQ,UAAU,CAAE,EAC5E,gBAAiB,CAAE,KAAM,SAAU,KAAM,CAAC,SAAU,WAAY,aAAc,WAAY,OAAO,CAAE,EACnG,aAAc,CAAE,KAAM,QAAS,EAC/B,OAAQ,CAAE,KAAM,SAAU,EAC1B,cAAe,CAAE,KAAM,QAAS,EAChC,aAAc,CAAE,KAAM,SAAU,EAChC,eAAgB,CAAE,KAAM,QAAS,EACjC,gBAAiB,CAAE,KAAM,SAAU,EACnC,cAAe,CAAE,KAAM,SAAU,EACjC,WAAY,CAAE,KAAM,QAAS,MAAO,CAAE,KAAM,QAAS,CAAE,CACzD,EACA,SAAU,CAAC,UAAW,MAAO,UAAW,aAAa,EACrD,GAAGL,EAAW,UAAW,MAAO,UAAW,aAAa,CAC1D,EAEaM,GAAmC,CAC9C,IAAKD,EAAG,EACR,KAAM,SACN,WAAY,CACV,UAAW,CAAE,KAAM,QAAS,EAC5B,OAAQ,CAAE,KAAM,SAAU,KAAM,CAAC,SAAU,SAAU,SAAU,QAAQ,CAAE,CAC3E,EACA,SAAU,CAAC,YAAa,QAAQ,EAChC,GAAGL,EAAW,YAAa,QAAQ,CACrC,EAEaO,GAAkC,CAC7C,IAAKF,EAAG,EACR,KAAM,SACN,WAAY,CACV,UAAW,CAAE,KAAM,QAAS,EAC5B,IAAK,CAAE,KAAM,QAAS,EACtB,QAAS,CAAE,KAAM,QAAS,CAC5B,EACA,SAAU,CAAC,YAAa,MAAO,SAAS,EACxC,GAAGL,EAAW,YAAa,MAAO,SAAS,CAC7C,EAEaQ,GAAoC,CAC/C,IAAKH,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CAAE,KAAM,SAAU,EAC1B,cAAe,CAAE,KAAM,QAAS,EAChC,aAAc,CAAE,KAAM,SAAU,EAChC,eAAgB,CAAE,KAAM,QAAS,EACjC,gBAAiB,CAAE,KAAM,SAAU,EACnC,cAAe,CAAE,KAAM,SAAU,EACjC,SAAU,CAAE,KAAM,SAAU,EAC5B,aAAc,CAAE,KAAM,SAAU,EAChC,kBAAmB,CAAE,KAAM,QAAS,EACpC,WAAY,CAAE,KAAM,QAAS,MAAO,CAAE,KAAM,QAAS,CAAE,CACzD,EACA,SAAU,CAAC,SAAU,gBAAiB,eAAgB,iBAAkB,kBAAmB,eAAe,EAC1G,GAAGL,EAAW,SAAU,gBAAiB,eAAgB,iBAAkB,kBAAmB,eAAe,CAC/G,EAEaS,GAAsC,CACjD,IAAKJ,EAAG,EACR,KAAM,SACN,WAAY,CACV,UAAW,CAAE,KAAM,QAAS,EAC5B,OAAQ,CAAE,KAAM,SAAU,KAAM,CAAC,MAAO,QAAQ,CAAE,CACpD,EACA,SAAU,CAAC,YAAa,QAAQ,EAChC,GAAGL,EAAW,YAAa,QAAQ,CACrC,ECxEO,IAAMU,EAAN,MAAMA,CAAgB,CAM3B,YACEC,EACAC,EACAC,EACAC,EACA,CACA,KAAK,OAASH,EACd,KAAK,QAAUC,EACf,KAAK,OAASC,EACd,KAAK,KAAOC,CACd,CAEA,IAAW,OAAOC,EAA0B,CAC1C,KAAK,iBAAmBA,CAC1B,CAEA,IAAW,QAAS,CAClB,OAAO,KAAK,gBACd,CAEA,IAAW,QAAQH,EAAgC,CACjD,KAAK,UAAYA,CACnB,CAEA,IAAW,SAAU,CACnB,OAAO,KAAK,SACd,CAEA,IAAW,KAAKI,EAAc,CAC5B,KAAK,gBAAkBA,CACzB,CAEA,IAAW,MAAO,CAChB,OAAO,KAAK,eACd,CAEA,IAAW,OAAOC,EAAiB,CACjC,KAAK,kBAAoBA,CAC3B,CAEA,IAAW,QAAS,CAClB,OAAO,KAAK,iBACd,CAEA,MAAa,IAAIC,EAAsBC,EAAwC,CAC7E,GAAK,KAAK,OAIV,OAAKA,EAAK,KAAK,IAAI,GAAG,QAGVA,EAAK,KAAK,IAAI,EAAE,OAAO,SAA7B,IACFA,EAAK,KAAK,IAAI,EAAE,OAAST,EAAgB,QAH3CS,EAAK,KAAK,IAAI,EAAE,OAAS,CAAC,EAOrB,KAAK,OAAO,KAAK,IAAI,EAAE,OAAO,CACnC,MAAO,CACL,WAAY,KAAK,QAAQ,YAAYD,CAAY,EAAE,UACrD,EACA,OAAQ,CACN,QAASC,EAAK,KAAK,IAAI,GAAG,QAC1B,OAAQA,EAAK,KAAK,IAAI,EAAE,MAC1B,EACA,OAAQ,CACN,QAASA,EAAK,KAAK,IAAI,GAAG,QAC1B,OAAQA,EAAK,KAAK,IAAI,EAAE,OACxB,WAAY,KAAK,QAAQ,YAAYD,CAAY,EAAE,UACrD,CACF,CAAC,CACH,CAEA,MAAa,IAAIA,EAA8C,CAC7D,GAAI,CAAC,KAAK,OACR,OAGF,GAAkB,KAAK,QAAQ,YAAYA,CAAY,IAAnD,OACF,OAAO,KAGT,IAAMC,EAAO,MAAM,KAAK,OAAO,KAAK,IAAI,EAAE,WAAW,CACnD,MAAO,CACL,WAAY,KAAK,QAAQ,YAAYD,CAAY,EAAE,UACrD,CACF,CAAC,EAED,OAAKC,GACI,IAIX,CA+BF,EAlIaT,EAqGY,OAAS,CAC9B,sBACA,iBACA,eACA,kBACA,kBACA,kBACA,kBACA,eACA,eACA,kBACA,kBACA,kBACA,YACA,eACA,eACA,eACA,gBACA,eACA,4BACA,oBACA,cACA,qBACA,OACA,gBACA,wBACA,kBACA,iBACF,EAjIK,IAAMU,EAANV,ECpBP,IAAMW,GAAa,IAAIC,IAAyC,CAC9D,IAAMC,EAAa,CAAC,EACpB,OAAAD,EAAc,QACXE,GACED,EAAWC,CAAQ,EAAI,CACtB,UAAW,EACX,YAAa,QAAQA,CAAQ,mBAC/B,CACJ,EACO,CACL,GAAI,CACF,cAAe,CACb,KAAM,CAAC,GAAGF,CAAa,CACzB,CACF,EACA,KAAM,CAAE,WAAAC,CAAW,CACrB,CACF,EACaE,GAA4B,CACvC,IAAKC,EAAG,EACR,KAAM,SACN,WAAY,CACV,OAAQ,CACN,KAAM,SACN,WAAY,CACV,QAAS,CAAE,KAAM,SAAU,EAC3B,MAAO,CAAE,KAAM,QAAS,EACxB,IAAK,CAAE,KAAM,QAAS,EACtB,OAAQ,CAAE,KAAM,QAAS,EACzB,QAAS,CAAE,KAAM,QAAS,EAC1B,OAAQ,CAAE,KAAM,SAAU,EAC1B,OAAQ,CACN,KAAM,QACN,SAAU,EACV,MAAO,CACL,KAAM,SACN,KAAMC,EAAgB,MACxB,CACF,CACF,EACA,SAAU,CAAC,UAAW,QAAS,MAAO,SAAU,UAAW,QAAQ,EACnE,GAAGN,GAAW,UAAW,QAAS,MAAO,SAAU,UAAW,QAAQ,CACxE,CACF,EACA,SAAU,CAAC,QAAQ,CACrB,EC5CA,IAAMO,GAAa,IAAIC,IAAyC,CAC9D,IAAMC,EAAa,CAAC,EACpB,OAAAD,EAAc,QACXE,GACED,EAAWC,CAAQ,EAAI,CACtB,UAAW,EACX,YAAa,QAAQA,CAAQ,mBAC/B,CACJ,EACO,CACL,GAAI,CACF,cAAe,CACb,KAAM,CAAC,GAAGF,CAAa,CACzB,CACF,EACA,KAAM,CAAE,WAAAC,CAAW,CACrB,CACF,EAEaE,GAA6B,CACxC,IAAKC,EAAG,EACR,KAAM,SACN,WAAY,CACV,QAAS,CACP,KAAM,SACN,WAAY,CACV,QAAS,CAAE,KAAM,SAAU,EAC3B,IAAK,CAAE,KAAM,QAAS,EACtB,QAAS,CAAE,KAAM,QAAS,EAC1B,SAAU,CAAE,KAAM,SAAU,EAC5B,OAAQ,CAAE,KAAM,SAAU,EAC1B,OAAQ,CACN,KAAM,QACN,SAAU,EACV,MAAO,CACL,KAAM,SACN,KAAMC,EAAgB,MACxB,CACF,CACF,EACA,SAAU,CAAC,UAAW,KAAK,EAC3B,GAAGN,GAAW,UAAW,KAAK,CAChC,CACF,EACA,SAAU,CAAC,SAAS,CACtB,EC1CO,IAAMO,GAA2B,CACtC,IAAKC,EAAG,EACR,KAAM,SACN,WAAY,CACV,UAAW,CACT,KAAM,eACR,EACA,SAAU,CACR,KAAM,eACR,EACA,IAAK,CACH,KAAM,eACR,CACF,EACA,MAAO,CACL,MAAO,CACL,KAAM,SACN,WAAY,CACV,QAAS,CAAE,KAAM,UAAW,KAAM,CAAC,GAAM,EAAK,CAAE,EAChD,OAAQ,CACN,KAAM,QACN,SAAU,EACV,MAAO,CACL,KAAM,SACN,KAAMC,EAAgB,MACxB,CACF,CACF,EACA,SAAU,CAAC,SAAS,CACtB,CACF,CACF","names":["validate_schema_exports","__export","AcceptGroupInviteSchema","archiveChatSchema","audioMessageSchema","blockUserSchema","buttonsMessageSchema","chatwootSchema","contactMessageSchema","contactValidateSchema","createGroupSchema","deleteMessageSchema","difyIgnoreJidSchema","difySchema","difySettingSchema","difyStatusSchema","eventSchema","evolutionBotIgnoreJidSchema","evolutionBotSchema","evolutionBotSettingSchema","evolutionBotStatusSchema","flowiseIgnoreJidSchema","flowiseSchema","flowiseSettingSchema","flowiseStatusSchema","getParticipantsSchema","groupInviteSchema","groupJidSchema","groupSendInviteSchema","handleLabelSchema","instanceSchema","listMessageSchema","locationMessageSchema","markChatUnreadSchema","mediaMessageSchema","messageUpSchema","messageValidateSchema","offerCallSchema","openaiCredsSchema","openaiIgnoreJidSchema","openaiSchema","openaiSettingSchema","openaiStatusSchema","pollMessageSchema","presenceOnlySchema","presenceSchema","privacySettingsSchema","profileNameSchema","profilePictureSchema","profileSchema","profileStatusSchema","proxySchema","ptvMessageSchema","pusherSchema","reactionMessageSchema","readMessageSchema","settingsSchema","statusMessageSchema","stickerMessageSchema","templateMessageSchema","templateSchema","textMessageSchema","toggleEphemeralSchema","typebotIgnoreJidSchema","typebotSchema","typebotSettingSchema","typebotStartSchema","typebotStatusSchema","updateGroupDescriptionSchema","updateGroupPictureSchema","updateGroupSubjectSchema","updateMessageSchema","updateParticipantsSchema","updateSettingsSchema","webhookSchema","whatsappNumberSchema","__toCommonJS","import_crypto","rnds8Pool","poolPtr","rng","crypto","byteToHex","i","unsafeStringify","arr","offset","import_crypto","native_default","crypto","v4","options","buf","offset","native_default","rnds","rng","i","unsafeStringify","v4_default","isNotEmpty","propertyNames","properties","property","numberDefinition","whatsappNumberSchema","v4_default","readMessageSchema","archiveChatSchema","markChatUnreadSchema","deleteMessageSchema","profilePictureSchema","updateMessageSchema","presenceSchema","blockUserSchema","contactValidateSchema","messageValidateSchema","messageUpSchema","privacySettingsSchema","profileNameSchema","profileStatusSchema","profileSchema","isNotEmpty","propertyNames","properties","property","createGroupSchema","v4_default","groupJidSchema","getParticipantsSchema","groupSendInviteSchema","groupInviteSchema","AcceptGroupInviteSchema","updateParticipantsSchema","updateSettingsSchema","toggleEphemeralSchema","updateGroupPictureSchema","updateGroupSubjectSchema","updateGroupDescriptionSchema","Integration","isNotEmpty","propertyNames","properties","property","instanceSchema","v4_default","Integration","presenceOnlySchema","isNotEmpty","propertyNames","properties","property","numberDefinition","handleLabelSchema","v4_default","isNotEmpty","propertyNames","properties","property","numberDefinition","templateMessageSchema","v4_default","quotedOptionsSchema","offerCallSchema","textMessageSchema","mediaMessageSchema","ptvMessageSchema","audioMessageSchema","statusMessageSchema","stickerMessageSchema","locationMessageSchema","contactMessageSchema","reactionMessageSchema","pollMessageSchema","listMessageSchema","buttonsMessageSchema","isNotEmpty","propertyNames","properties","property","proxySchema","v4_default","isNotEmpty","propertyNames","properties","property","settingsSchema","v4_default","isNotEmpty","propertyNames","properties","property","templateSchema","v4_default","isNotEmpty","propertyNames","properties","property","chatwootSchema","v4_default","isNotEmpty","propertyNames","properties","property","difySchema","v4_default","difyStatusSchema","difySettingSchema","difyIgnoreJidSchema","isNotEmpty","propertyNames","properties","property","evolutionBotSchema","v4_default","evolutionBotStatusSchema","evolutionBotSettingSchema","evolutionBotIgnoreJidSchema","isNotEmpty","propertyNames","properties","property","flowiseSchema","v4_default","flowiseStatusSchema","flowiseSettingSchema","flowiseIgnoreJidSchema","isNotEmpty","propertyNames","properties","property","openaiSchema","v4_default","openaiCredsSchema","openaiStatusSchema","openaiSettingSchema","openaiIgnoreJidSchema","isNotEmpty","propertyNames","properties","property","typebotSchema","v4_default","typebotStatusSchema","typebotStartSchema","typebotSettingSchema","typebotIgnoreJidSchema","_EventController","prismaRepository","waMonitor","integrationStatus","integrationName","prisma","name","status","instanceName","data","EventController","isNotEmpty","propertyNames","properties","property","pusherSchema","v4_default","EventController","isNotEmpty","propertyNames","properties","property","webhookSchema","v4_default","EventController","eventSchema","v4_default","EventController"]}